{"remainingRequest":"D:\\laragon\\www\\vue-argon-dashboard-pro-json-api\\node_modules\\babel-loader\\lib\\index.js!D:\\laragon\\www\\vue-argon-dashboard-pro-json-api\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\laragon\\www\\vue-argon-dashboard-pro-json-api\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\laragon\\www\\vue-argon-dashboard-pro-json-api\\src\\components\\WorldMap\\WorldMap.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\laragon\\www\\vue-argon-dashboard-pro-json-api\\src\\components\\WorldMap\\WorldMap.vue","mtime":1599650740878},{"path":"D:\\laragon\\www\\vue-argon-dashboard-pro-json-api\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\laragon\\www\\vue-argon-dashboard-pro-json-api\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\laragon\\www\\vue-argon-dashboard-pro-json-api\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\laragon\\www\\vue-argon-dashboard-pro-json-api\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmciOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudmFsdWVzIjsKaW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiRDovbGFyYWdvbi93d3cvdnVlLWFyZ29uLWRhc2hib2FyZC1wcm8tanNvbi1hcGkvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZSI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICJEOi9sYXJhZ29uL3d3dy92dWUtYXJnb24tZGFzaGJvYXJkLXByby1qc29uLWFwaS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCBfdG9Db25zdW1hYmxlQXJyYXkgZnJvbSAiRDovbGFyYWdvbi93d3cvdnVlLWFyZ29uLWRhc2hib2FyZC1wcm8tanNvbi1hcGkvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3RvQ29uc3VtYWJsZUFycmF5IjsKLy8KLy8KLy8KaW1wb3J0ICdkMyc7CmltcG9ydCAqIGFzIGQzIGZyb20gJ2QzJzsKaW1wb3J0ICd0b3BvanNvbic7CmltcG9ydCB7IHRocm90dGxlIH0gZnJvbSAnQC91dGlsL3Rocm90dGxlJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICd3b3JsZC1tYXAnLAogIHByb3BzOiB7CiAgICBtYXBEYXRhOiB7CiAgICAgIHR5cGU6IE9iamVjdCwKICAgICAgZGVmYXVsdDogZnVuY3Rpb24gX2RlZmF1bHQoKSB7CiAgICAgICAgcmV0dXJuIHt9OwogICAgICB9CiAgICB9LAogICAgcG9pbnRzOiB7CiAgICAgIHR5cGU6IEFycmF5LAogICAgICBkZWZhdWx0OiBmdW5jdGlvbiBfZGVmYXVsdCgpIHsKICAgICAgICByZXR1cm4gW107CiAgICAgIH0KICAgIH0KICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBpZDogdGhpcy5yYW5kb21TdHJpbmcoKSwKICAgICAgY29sb3IxOiAnI2Y2ZjlmYycsCiAgICAgIGNvbG9yMjogJyNhZGI1YmQnLAogICAgICBoaWdobGlnaHRGaWxsQ29sb3I6ICcjY2VkNGRhJywKICAgICAgYm9yZGVyQ29sb3I6ICd3aGl0ZScsCiAgICAgIGhpZ2hsaWdodEJvcmRlckNvbG9yOiAnd2hpdGUnLAogICAgICBidWJibGVIaWdobGlnaHRGaWxsQ29sb3I6ICcjMTFjZGVmJywKICAgICAgYnViYmxlRmlsbENvbG9yOiAnI2ZiNjM0MCcKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBnZW5lcmF0ZUNvbG9yczogZnVuY3Rpb24gZ2VuZXJhdGVDb2xvcnMobGVuZ3RoKSB7CiAgICAgIHJldHVybiBkMy5zY2FsZUxpbmVhcigpLmRvbWFpbihbMCwgbGVuZ3RoXSkucmFuZ2UoW3RoaXMuY29sb3IxLCB0aGlzLmNvbG9yMl0pOwogICAgfSwKICAgIGdlbmVyYXRlTWFwQ29sb3JzOiBmdW5jdGlvbiBnZW5lcmF0ZU1hcENvbG9ycygpIHsKICAgICAgdmFyIG1hcERhdGFWYWx1ZXMgPSBPYmplY3QudmFsdWVzKHRoaXMubWFwRGF0YSk7CiAgICAgIHZhciBtYXhWYWwgPSBNYXRoLm1heC5hcHBseShNYXRoLCBfdG9Db25zdW1hYmxlQXJyYXkobWFwRGF0YVZhbHVlcykpOwogICAgICB2YXIgY29sb3JzID0gdGhpcy5nZW5lcmF0ZUNvbG9ycyhtYXhWYWwpOwogICAgICB2YXIgbWFwRGF0YSA9IHt9OwogICAgICB2YXIgZmlsbHMgPSB7CiAgICAgICAgZGVmYXVsdEZpbGw6ICcjRURGMEYyJwogICAgICB9OwoKICAgICAgZm9yICh2YXIga2V5IGluIHRoaXMubWFwRGF0YSkgewogICAgICAgIHZhciB2YWwgPSB0aGlzLm1hcERhdGFba2V5XTsKICAgICAgICBmaWxsc1trZXldID0gY29sb3JzKHZhbCk7CiAgICAgICAgbWFwRGF0YVtrZXldID0gewogICAgICAgICAgZmlsbEtleToga2V5LAogICAgICAgICAgdmFsdWU6IHZhbAogICAgICAgIH07CiAgICAgIH0KCiAgICAgIHJldHVybiB7CiAgICAgICAgbWFwRGF0YTogbWFwRGF0YSwKICAgICAgICBmaWxsczogZmlsbHMKICAgICAgfTsKICAgIH0sCiAgICBpbml0VmVjdG9yTWFwOiBmdW5jdGlvbiBpbml0VmVjdG9yTWFwKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgRGF0YU1hcCwgX3RoaXMkZ2VuZXJhdGVNYXBDb2xvLCBmaWxscywgbWFwRGF0YSwgd29ybGRNYXAsIGJ1YmJsZU9wdGlvbnMsIGJ1YmJsZVBvaW50cywgcmVzaXplRnVuYzsKCiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDI7CiAgICAgICAgICAgICAgICByZXR1cm4gaW1wb3J0KCdkYXRhbWFwcycpOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICBEYXRhTWFwID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgIERhdGFNYXAgPSBEYXRhTWFwLmRlZmF1bHQgfHwgRGF0YU1hcDsKICAgICAgICAgICAgICAgIF90aGlzJGdlbmVyYXRlTWFwQ29sbyA9IF90aGlzLmdlbmVyYXRlTWFwQ29sb3JzKCksIGZpbGxzID0gX3RoaXMkZ2VuZXJhdGVNYXBDb2xvLmZpbGxzLCBtYXBEYXRhID0gX3RoaXMkZ2VuZXJhdGVNYXBDb2xvLm1hcERhdGE7CiAgICAgICAgICAgICAgICB3b3JsZE1hcCA9IG5ldyBEYXRhTWFwKHsKICAgICAgICAgICAgICAgICAgc2NvcGU6ICd3b3JsZCcsCiAgICAgICAgICAgICAgICAgIGVsZW1lbnQ6IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKF90aGlzLmlkKSwKICAgICAgICAgICAgICAgICAgZmlsbHM6IGZpbGxzLAogICAgICAgICAgICAgICAgICBkYXRhOiBtYXBEYXRhLAogICAgICAgICAgICAgICAgICByZXNwb25zaXZlOiB0cnVlLAogICAgICAgICAgICAgICAgICBnZW9ncmFwaHlDb25maWc6IHsKICAgICAgICAgICAgICAgICAgICBib3JkZXJDb2xvcjogX3RoaXMuYm9yZGVyQ29sb3IsCiAgICAgICAgICAgICAgICAgICAgYm9yZGVyV2lkdGg6IDEsCiAgICAgICAgICAgICAgICAgICAgYm9yZGVyT3BhY2l0eTogMSwKICAgICAgICAgICAgICAgICAgICBoaWdobGlnaHRGaWxsQ29sb3I6IF90aGlzLmhpZ2hsaWdodEZpbGxDb2xvciwKICAgICAgICAgICAgICAgICAgICBoaWdobGlnaHRCb3JkZXJDb2xvcjogX3RoaXMuaGlnaGxpZ2h0Qm9yZGVyQ29sb3IsCiAgICAgICAgICAgICAgICAgICAgaGlnaGxpZ2h0Qm9yZGVyV2lkdGg6IDEsCiAgICAgICAgICAgICAgICAgICAgaGlnaGxpZ2h0Qm9yZGVyT3BhY2l0eTogMQogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIGJ1YmJsZU9wdGlvbnMgPSB7CiAgICAgICAgICAgICAgICAgIHJhZGl1czogMiwKICAgICAgICAgICAgICAgICAgYm9yZGVyV2lkdGg6IDQsCiAgICAgICAgICAgICAgICAgIGhpZ2hsaWdodEJvcmRlcldpZHRoOiA0LAogICAgICAgICAgICAgICAgICBmaWxsS2V5OiBfdGhpcy5idWJibGVGaWxsQ29sb3IsCiAgICAgICAgICAgICAgICAgIGZpbGxDb2xvcjogX3RoaXMuYnViYmxlRmlsbENvbG9yLAogICAgICAgICAgICAgICAgICBib3JkZXJDb2xvcjogX3RoaXMuYnViYmxlRmlsbENvbG9yLAogICAgICAgICAgICAgICAgICBoaWdobGlnaHRGaWxsQ29sb3I6IF90aGlzLmJ1YmJsZUhpZ2hsaWdodEZpbGxDb2xvciwKICAgICAgICAgICAgICAgICAgaGlnaGxpZ2h0Qm9yZGVyQ29sb3I6IF90aGlzLmJ1YmJsZUhpZ2hsaWdodEZpbGxDb2xvcgogICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgIGJ1YmJsZVBvaW50cyA9IF90aGlzLnBvaW50cy5tYXAoZnVuY3Rpb24gKHBvaW50KSB7CiAgICAgICAgICAgICAgICAgIHJldHVybiBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIGJ1YmJsZU9wdGlvbnMpLCBwb2ludCk7CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIHdvcmxkTWFwLmJ1YmJsZXMoYnViYmxlUG9pbnRzLCB7CiAgICAgICAgICAgICAgICAgIHBvcHVwVGVtcGxhdGU6IGZ1bmN0aW9uIHBvcHVwVGVtcGxhdGUoZ2VvLCBkYXRhKSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuICc8ZGl2IGNsYXNzPSJob3ZlcmluZm8iPicgKyBkYXRhLm5hbWU7CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgcmVzaXplRnVuYyA9IHdvcmxkTWFwLnJlc2l6ZS5iaW5kKHdvcmxkTWFwKTsKICAgICAgICAgICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdyZXNpemUnLCBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICAgIHRocm90dGxlKHJlc2l6ZUZ1bmMsIDQwKTsKICAgICAgICAgICAgICAgIH0sIGZhbHNlKTsKCiAgICAgICAgICAgICAgY2FzZSAxMToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICByYW5kb21TdHJpbmc6IGZ1bmN0aW9uIHJhbmRvbVN0cmluZygpIHsKICAgICAgdmFyIHRleHQgPSAiIjsKICAgICAgdmFyIHBvc3NpYmxlID0gIkFCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXoiOwoKICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCA1OyBpKyspIHsKICAgICAgICB0ZXh0ICs9IHBvc3NpYmxlLmNoYXJBdChNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBwb3NzaWJsZS5sZW5ndGgpKTsKICAgICAgfQoKICAgICAgcmV0dXJuIHRleHQ7CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgX3RoaXMyLmluaXRWZWN0b3JNYXAoKTsKCiAgICAgICAgICAgIGNhc2UgMToKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUyKTsKICAgIH0pKSgpOwogIH0KfTs="},{"version":3,"sources":["WorldMap.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div :id=\"id\" class=\"world-map\"></div>\r\n</template>\r\n<script>\r\nimport 'd3';\r\nimport * as d3 from 'd3';\r\nimport 'topojson';\r\nimport { throttle } from '@/util/throttle';\r\n\r\nexport default {\r\n  name: 'world-map',\r\n  props: {\r\n    mapData: {\r\n      type: Object,\r\n      default: () => ({})\r\n    },\r\n    points: {\r\n      type: Array,\r\n      default: () => []\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      id: this.randomString(),\r\n      color1: '#f6f9fc',\r\n      color2: '#adb5bd',\r\n      highlightFillColor: '#ced4da',\r\n      borderColor: 'white',\r\n      highlightBorderColor: 'white',\r\n      bubbleHighlightFillColor: '#11cdef',\r\n      bubbleFillColor: '#fb6340'\r\n    };\r\n  },\r\n  methods: {\r\n    generateColors(length) {\r\n      return d3\r\n        .scaleLinear()\r\n        .domain([0, length])\r\n        .range([this.color1, this.color2]);\r\n    },\r\n    generateMapColors() {\r\n      let mapDataValues = Object.values(this.mapData);\r\n      let maxVal = Math.max(...mapDataValues);\r\n      let colors = this.generateColors(maxVal);\r\n      let mapData = {};\r\n      let fills = {\r\n        defaultFill: '#EDF0F2'\r\n      };\r\n      for (let key in this.mapData) {\r\n        let val = this.mapData[key];\r\n        fills[key] = colors(val);\r\n        mapData[key] = {\r\n          fillKey: key,\r\n          value: val\r\n        };\r\n      }\r\n      return {\r\n        mapData,\r\n        fills\r\n      };\r\n    },\r\n    async initVectorMap() {\r\n      let DataMap = await import('datamaps');\r\n      DataMap = DataMap.default || DataMap\r\n      let { fills, mapData } = this.generateMapColors();\r\n      let worldMap = new DataMap({\r\n        scope: 'world',\r\n        element: document.getElementById(this.id),\r\n        fills,\r\n        data: mapData,\r\n        responsive: true,\r\n        geographyConfig: {\r\n          borderColor: this.borderColor,\r\n          borderWidth: 1,\r\n          borderOpacity: 1,\r\n          highlightFillColor: this.highlightFillColor,\r\n          highlightBorderColor: this.highlightBorderColor,\r\n          highlightBorderWidth: 1,\r\n          highlightBorderOpacity: 1\r\n        }\r\n      });\r\n      let bubbleOptions = {\r\n        radius: 2,\r\n        borderWidth: 4,\r\n        highlightBorderWidth: 4,\r\n        fillKey: this.bubbleFillColor,\r\n        fillColor: this.bubbleFillColor,\r\n        borderColor: this.bubbleFillColor,\r\n        highlightFillColor: this.bubbleHighlightFillColor,\r\n        highlightBorderColor: this.bubbleHighlightFillColor\r\n      }\r\n      let bubblePoints = this.points.map(point => {\r\n        return {\r\n          ...bubbleOptions,\r\n          ...point\r\n        }\r\n      })\r\n      worldMap.bubbles(bubblePoints, {\r\n        popupTemplate: function(geo, data) {\r\n          return '<div class=\"hoverinfo\">' + data.name\r\n        }\r\n      });\r\n      let resizeFunc = worldMap.resize.bind(worldMap);\r\n      window.addEventListener(\r\n        'resize',\r\n        () => {\r\n          throttle(resizeFunc, 40);\r\n        },\r\n        false\r\n      );\r\n    },\r\n    randomString() {\r\n      let text = \"\";\r\n      let possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\r\n\r\n      for (let i = 0; i < 5; i++)\r\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n\r\n      return text;\r\n    }\r\n  },\r\n  async mounted() {\r\n    this.initVectorMap();\r\n  }\r\n};\r\n</script>\r\n<style></style>\r\n"],"sourceRoot":"src/components/WorldMap"}]}