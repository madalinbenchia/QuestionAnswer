{"remainingRequest":"D:\\Cursuri\\sem2\\Programare cu aspecte\\QuestionAnswer\\Front End\\node_modules\\babel-loader\\lib\\index.js!D:\\Cursuri\\sem2\\Programare cu aspecte\\QuestionAnswer\\Front End\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Cursuri\\sem2\\Programare cu aspecte\\QuestionAnswer\\Front End\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Cursuri\\sem2\\Programare cu aspecte\\QuestionAnswer\\Front End\\src\\views\\Examples\\QuestionManagement\\EditQuestion.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Cursuri\\sem2\\Programare cu aspecte\\QuestionAnswer\\Front End\\src\\views\\Examples\\QuestionManagement\\EditQuestion.vue","mtime":1616011321356},{"path":"D:\\Cursuri\\sem2\\Programare cu aspecte\\QuestionAnswer\\Front End\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615717989082},{"path":"D:\\Cursuri\\sem2\\Programare cu aspecte\\QuestionAnswer\\Front End\\node_modules\\babel-loader\\lib\\index.js","mtime":1615717984382},{"path":"D:\\Cursuri\\sem2\\Programare cu aspecte\\QuestionAnswer\\Front End\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615717989082},{"path":"D:\\Cursuri\\sem2\\Programare cu aspecte\\QuestionAnswer\\Front End\\node_modules\\vue-loader\\lib\\index.js","mtime":1615718052515}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["EditQuestion.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkFA,OAAA,SAAA,MAAA,mCAAA;AAEA,OAAA,UAAA,MAAA,gCAAA;AACA,OAAA,QAAA,MAAA,eAAA;AACA,OAAA,MAAA,MAAA,QAAA;AACA,SAAA,SAAA,QAAA,aAAA;AAEA,eAAA;AACA,EAAA,MAAA,EAAA,iBADA;AAEA,EAAA,UAAA;AACA,IAAA,SAAA,EAAA,SADA;AAEA,IAAA,UAAA,EAAA;AAFA,kCAGA,QAAA,IAHA,yCAIA,QAAA,IAJA,qDAKA,QALA,6CAMA,SANA,eAFA;AAUA,EAAA,IAVA,kBAUA;AACA,WAAA;AACA,MAAA,aAAA,EAAA,CACA,CAAA,MAAA,EAAA,QAAA,EAAA,WAAA,CADA,EAEA,CAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OAAA,EAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OAAA,CAFA,EAGA,CAAA,OAAA,EAAA,MAAA,CAHA,CADA;AAMA,MAAA,IAAA,EAAA,IANA;AAOA,MAAA,KAAA,EAAA,EAPA;AAQA,MAAA,QAAA,EAAA;AACA,QAAA,IAAA,EAAA,EADA;AAEA,QAAA,IAAA,EAAA,EAFA;AAGA,QAAA,KAAA,EAAA,EAHA;AAIA,QAAA,WAAA,EAAA;AAJA;AARA,KAAA;AAeA,GA1BA;AA4BA,EAAA,OA5BA,qBA4BA;AACA,SAAA,GAAA;AACA,GA9BA;AAgCA,EAAA,OAAA,EAAA;AACA,IAAA,GADA,iBACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAEA,KAAA,CAAA,MAAA,CAAA,OAAA,CAAA,WAFA;;AAAA;AAEA,gBAAA,KAAA,CAAA,IAFA;AAGA,gBAAA,EAHA,GAGA,KAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAHA;AAAA;AAAA,uBAIA,KAAA,CAAA,MAAA,CAAA,QAAA,CAAA,eAAA,EAAA,EAAA,CAJA;;AAAA;AAKA,gBAAA,KAAA,CAAA,QAAA,GAAA,KAAA,CAAA,MAAA,CAAA,OAAA,CAAA,oBAAA,CAAA;AAEA,gBAAA,KAAA,CAAA,KAAA,GAAA,KAAA,CAAA,QAAA,CAAA,IAAA,CAAA,QAAA,EAAA;AACA,gBAAA,KAAA,CAAA,KAAA,GAAA,KAAA,CAAA,KAAA,CAAA,KAAA,CAAA,GAAA,CAAA;;AACA,qBAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,KAAA,CAAA,KAAA,CAAA,MAAA,GAAA,CAAA,EAAA,CAAA,EAAA,EAAA;AACA,kBAAA,KAAA,CAAA,KAAA,CAAA,CAAA,IAAA,KAAA,CAAA,KAAA,CAAA,CAAA,GAAA,CAAA,CAAA;AACA;;AACA,gBAAA,KAAA,CAAA,KAAA,CAAA,MAAA,GAAA,KAAA,CAAA,KAAA,CAAA,MAAA,GAAA,CAAA;;AAEA,qBAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,KAAA,CAAA,KAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,kBAAA,KAAA,CAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,KAAA,CAAA,CAAA,CAAA;AACA;;AAEA,gBAAA,KAAA,CAAA,OAAA,GAAA,KAAA,CAlBA,CAoBA;AAEA;AACA;AAEA;AACA;;AA1BA;AAAA;;AAAA;AAAA;AAAA;AA4BA,gBAAA,OAAA,CAAA,GAAA;;AACA,gBAAA,KAAA,CAAA,OAAA,CAAA;AACA,kBAAA,IAAA,EAAA,QADA;AAEA,kBAAA,OAAA;AAFA,iBAAA;;AA7BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkCA,KAnCA;AAoCA,IAAA,WApCA,uBAoCA,CApCA,EAoCA;AACA,aAAA,MAAA,CAAA,GAAA,GAAA;AACA,KAtCA;AAuCA,IAAA,MAvCA,oBAuCA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA;AACA,QAAA,IAAA,EAAA,eADA;AAEA,QAAA,MAAA,EAAA;AAAA,UAAA,EAAA,EAAA,KAAA,QAAA,CAAA;AAAA;AAFA,OAAA;AAIA,KA5CA;AA8CA,IAAA,YA9CA,0BA8CA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,gBAAA,MAAA,CAAA,QAAA,CAAA,IAAA,GAAA,MAAA,CAAA,KAAA,CAAA,QAAA,GAAA,UAAA,CAAA,GAAA,EAAA,EAAA,CAAA;AAFA;AAAA,yCAIA,MAAA,CAAA,MAAA,CAAA,OAAA,CAAA,WAJA;;AAAA;AAIA,gBAAA,MAAA,CAAA,IAJA;AAKA,gBAAA,MAAA,CAAA,QAAA,CAAA,qBAAA,GAAA,MAAA,CAAA,IAAA,CAAA,WAAA;AACA,gBAAA,MAAA,CAAA,QAAA,CAAA,SAAA,GAAA,yBAAA;AACA,gBAAA,MAAA,CAAA,QAAA,CAAA,gBAAA,GAAA,MAAA,GAAA,MAAA,EAAA;AACA,gBAAA,MAAA,CAAA,QAAA,CAAA,YAAA,GAAA,MAAA,GAAA,MAAA,EAAA;AACA,gBAAA,MAAA,CAAA,QAAA,CAAA,MAAA,GAAA,MAAA,CAAA,IAAA,CAAA,MAAA;AACA,gBAAA,OAVA,GAUA;AAAA,kBAAA,CAAA,EAAA,MAAA,CAAA,QAAA;AAAA,kBAAA,CAAA,EAAA,MAAA,CAAA;AAAA,iBAVA;AAAA;AAAA,uBAYA,MAAA,CAAA,MAAA,CAAA,QAAA,CAAA,kBAAA,EAAA,OAAA,CAZA;;AAAA;AAAA;AAAA,uBAcA,MAAA,CAAA,MAAA,CAAA,OAAA,CAAA,oBAAA,CAdA;;AAAA;AAcA,gBAAA,MAAA,CAAA,QAdA;;AAeA,gBAAA,MAAA,CAAA,OAAA,CAAA;AACA,kBAAA,IAAA,EAAA,SADA;AAEA,kBAAA,OAAA,EAAA;AAFA,iBAAA;;AAIA,gBAAA,MAAA,CAAA,OAAA,CAAA,IAAA,CAAA;AACA,kBAAA,IAAA,EAAA,eADA;AAEA,kBAAA,MAAA,EAAA;AAAA,oBAAA,EAAA,EAAA,MAAA,CAAA,QAAA,CAAA;AAAA;AAFA,iBAAA;;AAnBA;AAAA;;AAAA;AAAA;AAAA;AAwBA,gBAAA,OAAA,CAAA,GAAA;;AACA,gBAAA,MAAA,CAAA,OAAA,CAAA;AACA,kBAAA,IAAA,EAAA,QADA;AAEA,kBAAA,OAAA,EAAA;AAFA,iBAAA;;AAzBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA8BA;AA5EA;AAhCA,CAAA","sourcesContent":["<template>\r\n  <div class=\"container-fluid mt-5\">\r\n    <div class=\"row\">\r\n      <div class=\"col-xl-12 order-xl-1\">\r\n        <card>\r\n          <div slot=\"header\" class=\"row align-items-center\">\r\n            <div class=\"col-8\">\r\n              <h3 class=\"mb-0\">Edit Question</h3>\r\n            </div>\r\n            <div class=\"col-4 text-right\">\r\n              <base-button\r\n                @click=\"goBack\"\r\n                type=\"button\"\r\n                class=\"btn btn-sm btn-primary\"\r\n                >Go Back</base-button\r\n              >\r\n            </div>\r\n          </div>\r\n          <div class=\"card-body\">\r\n            <form ref=\"profile_form\" @submit.prevent=\"handleSubmit\">\r\n              <label for=\"Title\" style=\"font-weight: 700; font-size:19px\"\r\n                >Title</label\r\n              >\r\n              <p\r\n                style=\"color: darkgray;margin-top: -10px;margin-bottom: 10px;font-style: italic;\"\r\n              >\r\n                Be specific and imagine you’re asking a question to another\r\n                person\r\n              </p>\r\n              <base-input\r\n                name=\"title\"\r\n                type=\"text\"\r\n                maxlength=\"300\"\r\n                placeholder=\"e.g. Is there an R function for finding the index of an element in a vector?\"\r\n                autocomplete=\"off\"\r\n                v-model=\"question.title\"\r\n              />\r\n\r\n              <label for=\"Body\" style=\"font-weight: 700; font-size:19px\"\r\n                >Body</label\r\n              >\r\n              <p\r\n                style=\"color: darkgray;margin-top: -10px;margin-bottom: 10px;font-style: italic;\"\r\n              >\r\n                Include all the information someone would need to answer your\r\n                question\r\n              </p>\r\n              <!-- <html-editor v-model=\"question.Body\" name=\"editor\" /> -->\r\n              <vue-editor\r\n                v-model=\"question.body\"\r\n                :editorToolbar=\"customToolbar\"\r\n              ></vue-editor>\r\n              <label for=\"Title\" style=\"font-weight: 700; font-size:19px\"\r\n                >Tags</label\r\n              >\r\n              <p\r\n                style=\"color: darkgray;margin-top: -10px;margin-bottom: 10px;font-style: italic;\"\r\n              >\r\n                Add up to 5 tags to describe what your question is about\r\n              </p>\r\n              <input-tag\r\n                v-model=\"tags2\"\r\n                :add-tag-on-keys=\"[13, 32]\"\r\n                placeholder=\"e.g. (javascript, api)\"\r\n                :before-adding=\"toUpperCase\"\r\n              ></input-tag>\r\n\r\n              <base-button\r\n                type=\"button\"\r\n                class=\"btn btn-sm btn-primary mt-4 ml-0\"\r\n                native-type=\"submit\"\r\n              >\r\n                Edit your question\r\n              </base-button>\r\n            </form>\r\n          </div>\r\n        </card>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport BaseInput from \"@/components/Inputs/BaseInput.vue\";\r\nimport { Select, Option } from \"element-ui\";\r\nimport HtmlEditor from \"@/components/Inputs/HtmlEditor\";\r\nimport InputTag from \"vue-input-tag\";\r\nimport moment from \"moment\";\r\nimport { VueEditor } from \"vue2-editor\";\r\n\r\nexport default {\r\n  layout: \"DashboardLayout\",\r\n  components: {\r\n    BaseInput,\r\n    HtmlEditor,\r\n    [Select.name]: Select,\r\n    [Option.name]: Option,\r\n    InputTag,\r\n    VueEditor\r\n  },\r\n  data() {\r\n    return {\r\n      customToolbar: [\r\n        [\"bold\", \"italic\", \"underline\"],\r\n        [{ list: \"ordered\" }, { list: \"bullet\" }],\r\n        [\"image\", \"code\"]\r\n      ],\r\n      user: null,\r\n      tags2: [],\r\n      question: {\r\n        body: \"\",\r\n        tags: \"\",\r\n        title: \"\",\r\n        ownerUserId: \"\"\r\n      }\r\n    };\r\n  },\r\n\r\n  created() {\r\n    this.get();\r\n  },\r\n\r\n  methods: {\r\n    async get() {\r\n      try {\r\n        this.user = await { ...this.$store.getters.currentUser };\r\n        const id = this.$route.params.id;\r\n        await this.$store.dispatch(\"questions/get\", id);\r\n        this.question = this.$store.getters[\"questions/question\"];\r\n\r\n        this.tags2 = this.question.tags.toString();\r\n        this.tags2 = this.tags2.split(\"<\");\r\n        for (var i = 0; i < this.tags2.length - 1; i++) {\r\n          this.tags2[i] = this.tags2[i + 1];\r\n        }\r\n        this.tags2.length = this.tags2.length - 1;\r\n\r\n        for (var i = 0; i < this.tags2.length; i++) {\r\n          this.tags2[i] = \"<\" + this.tags2[i];\r\n        }\r\n\r\n        this.loading = false;\r\n\r\n        // const questionOwnerId = this.question.OwnerUserId;\r\n\r\n        // await this.$store.dispatch(\"users/get\", questionOwnerId);\r\n        // this.questionOwner = await { ...this.$store.getters[\"users/user\"] };\r\n\r\n        // this.askedTimeAgo = moment(this.question.CreationDate).fromNow();\r\n        // this.activityTimeAgo = moment(this.question.LastActivityDate).fromNow();\r\n      } catch (error) {\r\n        console.log(error);\r\n        this.$notify({\r\n          type: \"danger\",\r\n          message: `Oops, something went wrong!`\r\n        });\r\n      }\r\n    },\r\n    toUpperCase(v) {\r\n      return \"<\" + v + \">\";\r\n    },\r\n    goBack() {\r\n      this.$router.push({\r\n        name: \"View Question\",\r\n        params: { id: this.question.id }\r\n      });\r\n    },\r\n\r\n    async handleSubmit() {\r\n      try {\r\n        this.question.tags = this.tags2.toString().replaceAll(\",\", \"\");\r\n\r\n        this.user = await { ...this.$store.getters.currentUser };\r\n        this.question.lastEditorDisplayName = this.user.displayName;\r\n        this.question.closeDate = \"2011-01-01T02:11:46.083\";\r\n        this.question.lastActivityDate = moment().format();\r\n        this.question.lastEditDate = moment().format();\r\n        this.question.userId = this.user.userId;\r\n        const payload = { q: this.question, u: this.user };\r\n\r\n        await this.$store.dispatch(\"questions/update\", payload);\r\n\r\n        this.question = await this.$store.getters[\"questions/question\"];\r\n        this.$notify({\r\n          type: \"success\",\r\n          message: \"Question edited successfully.\"\r\n        });\r\n        this.$router.push({\r\n          name: \"View Question\",\r\n          params: { id: this.question.id }\r\n        });\r\n      } catch (error) {\r\n        console.log(error);\r\n        this.$notify({\r\n          type: \"danger\",\r\n          message: \"Oops, something went wrong!\"\r\n        });\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n"],"sourceRoot":"src/views/Examples/QuestionManagement"}]}