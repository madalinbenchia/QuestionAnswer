{"remainingRequest":"D:\\laragon\\www\\QA\\node_modules\\babel-loader\\lib\\index.js!D:\\laragon\\www\\QA\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\laragon\\www\\QA\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\laragon\\www\\QA\\src\\views\\Examples\\QuestionManagement\\AddQuestionPage.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\laragon\\www\\QA\\src\\views\\Examples\\QuestionManagement\\AddQuestionPage.vue","mtime":1612092497219},{"path":"D:\\laragon\\www\\QA\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\laragon\\www\\QA\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\laragon\\www\\QA\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\laragon\\www\\QA\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmciOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudG8tc3RyaW5nIjsKaW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiRDovbGFyYWdvbi93d3cvUUEvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZSI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICJEOi9sYXJhZ29uL3d3dy9RQS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCBfZGVmaW5lUHJvcGVydHkgZnJvbSAiRDovbGFyYWdvbi93d3cvUUEvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2RlZmluZVByb3BlcnR5IjsKaW1wb3J0IF9PcHRpb24yIGZyb20gImVsZW1lbnQtdWkvbGliL3RoZW1lLWNoYWxrL29wdGlvbi5jc3MiOwppbXBvcnQgImVsZW1lbnQtdWkvbGliL3RoZW1lLWNoYWxrL2Jhc2UuY3NzIjsKaW1wb3J0IF9PcHRpb24gZnJvbSAiZWxlbWVudC11aS9saWIvb3B0aW9uIjsKaW1wb3J0IF9TZWxlY3QyIGZyb20gImVsZW1lbnQtdWkvbGliL3RoZW1lLWNoYWxrL3NlbGVjdC5jc3MiOwppbXBvcnQgImVsZW1lbnQtdWkvbGliL3RoZW1lLWNoYWxrL2Jhc2UuY3NzIjsKaW1wb3J0IF9TZWxlY3QgZnJvbSAiZWxlbWVudC11aS9saWIvc2VsZWN0IjsKCnZhciBfY29tcG9uZW50czsKCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBWYWxpZGF0aW9uRXJyb3IgZnJvbSAiQC9jb21wb25lbnRzL1ZhbGlkYXRpb25FcnJvci52dWUiOwppbXBvcnQgZm9ybU1peGluIGZyb20gIkAvbWl4aW5zL2Zvcm0tbWl4aW4iOwppbXBvcnQgQmFzZUlucHV0IGZyb20gIkAvY29tcG9uZW50cy9JbnB1dHMvQmFzZUlucHV0LnZ1ZSI7CmltcG9ydCBIdG1sRWRpdG9yIGZyb20gIkAvY29tcG9uZW50cy9JbnB1dHMvSHRtbEVkaXRvciI7CmltcG9ydCBJbnB1dFRhZyBmcm9tICJ2dWUtaW5wdXQtdGFnIjsKZXhwb3J0IGRlZmF1bHQgewogIGxheW91dDogIkRhc2hib2FyZExheW91dCIsCiAgY29tcG9uZW50czogKF9jb21wb25lbnRzID0gewogICAgQmFzZUlucHV0OiBCYXNlSW5wdXQsCiAgICBIdG1sRWRpdG9yOiBIdG1sRWRpdG9yLAogICAgVmFsaWRhdGlvbkVycm9yOiBWYWxpZGF0aW9uRXJyb3IKICB9LCBfZGVmaW5lUHJvcGVydHkoX2NvbXBvbmVudHMsIF9TZWxlY3QubmFtZSwgX1NlbGVjdCksIF9kZWZpbmVQcm9wZXJ0eShfY29tcG9uZW50cywgX09wdGlvbi5uYW1lLCBfT3B0aW9uKSwgX2RlZmluZVByb3BlcnR5KF9jb21wb25lbnRzLCAiSW5wdXRUYWciLCBJbnB1dFRhZyksIF9jb21wb25lbnRzKSwKICBtaXhpbnM6IFtmb3JtTWl4aW5dLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICB1c2VyOiBudWxsLAogICAgICBxdWVzdGlvbjogewogICAgICAgIGJvZHk6ICIiLAogICAgICAgIHRhZ3M6ICIiLAogICAgICAgIHRpdGxlOiAiIiwKICAgICAgICBvd25lcnVzZXJpZDogIiIKICAgICAgfQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIHRvVXBwZXJDYXNlOiBmdW5jdGlvbiB0b1VwcGVyQ2FzZSh2KSB7CiAgICAgIHJldHVybiAiPCIgKyB2ICsgIj4iOwogICAgfSwKICAgIGdvQmFjazogZnVuY3Rpb24gZ29CYWNrKCkgewogICAgICB0aGlzLiRyb3V0ZXIucHVzaCh7CiAgICAgICAgbmFtZTogIkxpc3QgUXVlc3Rpb25zIgogICAgICB9KTsKICAgIH0sCiAgICBoYW5kbGVTdWJtaXQ6IGZ1bmN0aW9uIGhhbmRsZVN1Ym1pdCgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDA7CiAgICAgICAgICAgICAgICBfdGhpcy5xdWVzdGlvbi50YWdzID0gX3RoaXMucXVlc3Rpb24udGFnczIudG9TdHJpbmcoKS5yZXBsYWNlQWxsKCIsIiwgIiIpOwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDQ7CiAgICAgICAgICAgICAgICByZXR1cm4gX29iamVjdFNwcmVhZCh7fSwgX3RoaXMuJHN0b3JlLmdldHRlcnMuY3VycmVudFVzZXIpOwoKICAgICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgICBfdGhpcy51c2VyID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgIF90aGlzLnF1ZXN0aW9uLm93bmVydXNlcmlkID0gX3RoaXMudXNlci5Vc2VySWQ7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gODsKICAgICAgICAgICAgICAgIHJldHVybiBfdGhpcy4kc3RvcmUuZGlzcGF0Y2goInF1ZXN0aW9ucy9hZGQiLCBfdGhpcy5xdWVzdGlvbik7CgogICAgICAgICAgICAgIGNhc2UgODoKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxMDsKICAgICAgICAgICAgICAgIHJldHVybiBfdGhpcy4kc3RvcmUuZ2V0dGVyc1sicXVlc3Rpb25zL3F1ZXN0aW9uIl07CgogICAgICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgICAgICBfdGhpcy5xdWVzdGlvbiA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhfdGhpcy5xdWVzdGlvbik7CgogICAgICAgICAgICAgICAgX3RoaXMuJG5vdGlmeSh7CiAgICAgICAgICAgICAgICAgIHR5cGU6ICJzdWNjZXNzIiwKICAgICAgICAgICAgICAgICAgbWVzc2FnZTogIlF1ZXN0aW9uIGFkZGVkIHN1Y2Nlc3NmdWxseS4iCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgICBfdGhpcy4kcm91dGVyLnB1c2goewogICAgICAgICAgICAgICAgICBuYW1lOiAiVmlldyBRdWVzdGlvbiIsCiAgICAgICAgICAgICAgICAgIHBhcmFtczogewogICAgICAgICAgICAgICAgICAgIGlkOiBfdGhpcy5xdWVzdGlvbi5JZAogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTk7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSAxNjoKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAxNjsKICAgICAgICAgICAgICAgIF9jb250ZXh0LnQwID0gX2NvbnRleHRbImNhdGNoIl0oMCk7CgogICAgICAgICAgICAgICAgX3RoaXMuJG5vdGlmeSh7CiAgICAgICAgICAgICAgICAgIHR5cGU6ICJkYW5nZXIiLAogICAgICAgICAgICAgICAgICBtZXNzYWdlOiAiT29wcywgc29tZXRoaW5nIHdlbnQgd3JvbmchIgogICAgICAgICAgICAgICAgfSk7IC8vIHRoaXMuc2V0QXBpVmFsaWRhdGlvbihlcnJvci5yZXNwb25zZS5kYXRhLmVycm9ycyk7CgoKICAgICAgICAgICAgICBjYXNlIDE5OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSwgbnVsbCwgW1swLCAxNl1dKTsKICAgICAgfSkpKCk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["AddQuestionPage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+EA,OAAA,eAAA,MAAA,kCAAA;AACA,OAAA,SAAA,MAAA,qBAAA;AACA,OAAA,SAAA,MAAA,mCAAA;AAEA,OAAA,UAAA,MAAA,gCAAA;AACA,OAAA,QAAA,MAAA,eAAA;AAEA,eAAA;AACA,EAAA,MAAA,EAAA,iBADA;AAEA,EAAA,UAAA;AACA,IAAA,SAAA,EAAA,SADA;AAEA,IAAA,UAAA,EAAA,UAFA;AAGA,IAAA,eAAA,EAAA;AAHA,kCAIA,QAAA,IAJA,yCAKA,QAAA,IALA,qDAMA,QANA,eAFA;AAUA,EAAA,MAAA,EAAA,CAAA,SAAA,CAVA;AAYA,EAAA,IAZA,kBAYA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,IADA;AAEA,MAAA,QAAA,EAAA;AACA,QAAA,IAAA,EAAA,EADA;AAEA,QAAA,IAAA,EAAA,EAFA;AAGA,QAAA,KAAA,EAAA,EAHA;AAIA,QAAA,WAAA,EAAA;AAJA;AAFA,KAAA;AASA,GAtBA;AAwBA,EAAA,OAAA,EAAA;AACA,IAAA,WADA,uBACA,CADA,EACA;AACA,aAAA,MAAA,CAAA,GAAA,GAAA;AACA,KAHA;AAIA,IAAA,MAJA,oBAIA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OAAA;AACA,KANA;AAQA,IAAA,YARA,0BAQA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,gBAAA,KAAA,CAAA,QAAA,CAAA,IAAA,GAAA,KAAA,CAAA,QAAA,CAAA,KAAA,CAAA,QAAA,GAAA,UAAA,CAAA,GAAA,EAAA,EAAA,CAAA;AAFA;AAAA,yCAGA,KAAA,CAAA,MAAA,CAAA,OAAA,CAAA,WAHA;;AAAA;AAGA,gBAAA,KAAA,CAAA,IAHA;AAIA,gBAAA,KAAA,CAAA,QAAA,CAAA,WAAA,GAAA,KAAA,CAAA,IAAA,CAAA,MAAA;AAJA;AAAA,uBAMA,KAAA,CAAA,MAAA,CAAA,QAAA,CAAA,eAAA,EAAA,KAAA,CAAA,QAAA,CANA;;AAAA;AAAA;AAAA,uBAOA,KAAA,CAAA,MAAA,CAAA,OAAA,CAAA,oBAAA,CAPA;;AAAA;AAOA,gBAAA,KAAA,CAAA,QAPA;AAQA,gBAAA,OAAA,CAAA,GAAA,CAAA,KAAA,CAAA,QAAA;;AACA,gBAAA,KAAA,CAAA,OAAA,CAAA;AACA,kBAAA,IAAA,EAAA,SADA;AAEA,kBAAA,OAAA,EAAA;AAFA,iBAAA;;AAIA,gBAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA;AACA,kBAAA,IAAA,EAAA,eADA;AAEA,kBAAA,MAAA,EAAA;AAAA,oBAAA,EAAA,EAAA,KAAA,CAAA,QAAA,CAAA;AAAA;AAFA,iBAAA;;AAbA;AAAA;;AAAA;AAAA;AAAA;;AAkBA,gBAAA,KAAA,CAAA,OAAA,CAAA;AACA,kBAAA,IAAA,EAAA,QADA;AAEA,kBAAA,OAAA,EAAA;AAFA,iBAAA,EAlBA,CAsBA;;;AAtBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAwBA;AAhCA;AAxBA,CAAA","sourcesContent":["<template>\r\n  <div class=\"container-fluid mt-5\">\r\n    <div class=\"row\">\r\n      <div class=\"col-xl-12 order-xl-1\">\r\n        <card>\r\n          <div slot=\"header\" class=\"row align-items-center\">\r\n            <div class=\"col-8\">\r\n              <h3 class=\"mb-0\">Ask a public question</h3>\r\n            </div>\r\n            <div class=\"col-4 text-right\">\r\n              <base-button\r\n                @click=\"goBack\"\r\n                type=\"button\"\r\n                class=\"btn btn-sm btn-primary\"\r\n                >Homepage</base-button\r\n              >\r\n            </div>\r\n          </div>\r\n          <div class=\"card-body\">\r\n            <form ref=\"profile_form\" @submit.prevent=\"handleSubmit\">\r\n              <label for=\"Title\" style=\"font-weight: 700; font-size:19px\"\r\n                >Title</label\r\n              >\r\n              <p\r\n                style=\"color: darkgray;margin-top: -10px;margin-bottom: 10px;font-style: italic;\"\r\n              >\r\n                Be specific and imagine youâ€™re asking a question to another\r\n                person\r\n              </p>\r\n              <base-input\r\n                name=\"title\"\r\n                type=\"text\"\r\n                maxlength=\"300\"\r\n                placeholder=\"e.g. Is there an R function for finding the index of an element in a vector?\"\r\n                autocomplete=\"off\"\r\n                v-model=\"question.title\"\r\n              />\r\n\r\n              <label for=\"Body\" style=\"font-weight: 700; font-size:19px\"\r\n                >Body</label\r\n              >\r\n              <p\r\n                style=\"color: darkgray;margin-top: -10px;margin-bottom: 10px;font-style: italic;\"\r\n              >\r\n                Include all the information someone would need to answer your\r\n                question\r\n              </p>\r\n              <html-editor v-model=\"question.body\" name=\"editor\" />\r\n\r\n              <label for=\"Title\" style=\"font-weight: 700; font-size:19px\"\r\n                >Tags</label\r\n              >\r\n              <p\r\n                style=\"color: darkgray;margin-top: -10px;margin-bottom: 10px;font-style: italic;\"\r\n              >\r\n                Add up to 5 tags to describe what your question is about\r\n              </p>\r\n              <input-tag\r\n                v-model=\"question.tags2\"\r\n                :add-tag-on-keys=\"[13, 32]\"\r\n                placeholder=\"e.g. (javascript, api)\"\r\n                :before-adding=\"toUpperCase\"\r\n              ></input-tag>\r\n\r\n              <base-button\r\n                type=\"button\"\r\n                class=\"btn btn-sm btn-primary mt-4 ml-0\"\r\n                native-type=\"submit\"\r\n              >\r\n                Post your question\r\n              </base-button>\r\n            </form>\r\n          </div>\r\n        </card>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport ValidationError from \"@/components/ValidationError.vue\";\r\nimport formMixin from \"@/mixins/form-mixin\";\r\nimport BaseInput from \"@/components/Inputs/BaseInput.vue\";\r\nimport { Select, Option } from \"element-ui\";\r\nimport HtmlEditor from \"@/components/Inputs/HtmlEditor\";\r\nimport InputTag from \"vue-input-tag\";\r\n\r\nexport default {\r\n  layout: \"DashboardLayout\",\r\n  components: {\r\n    BaseInput,\r\n    HtmlEditor,\r\n    ValidationError,\r\n    [Select.name]: Select,\r\n    [Option.name]: Option,\r\n    InputTag\r\n  },\r\n  mixins: [formMixin],\r\n\r\n  data() {\r\n    return {\r\n      user: null,\r\n      question: {\r\n        body: \"\",\r\n        tags: \"\",\r\n        title: \"\",\r\n        owneruserid: \"\"\r\n      }\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    toUpperCase(v) {\r\n      return \"<\" + v + \">\";\r\n    },\r\n    goBack() {\r\n      this.$router.push({ name: \"List Questions\" });\r\n    },\r\n\r\n    async handleSubmit() {\r\n      try {\r\n        this.question.tags = this.question.tags2.toString().replaceAll(\",\", \"\");\r\n        this.user = await { ...this.$store.getters.currentUser };\r\n        this.question.owneruserid = this.user.UserId;\r\n\r\n        await this.$store.dispatch(\"questions/add\", this.question);\r\n        this.question = await this.$store.getters[\"questions/question\"];\r\n        console.log(this.question);\r\n        this.$notify({\r\n          type: \"success\",\r\n          message: \"Question added successfully.\"\r\n        });\r\n        this.$router.push({\r\n          name: \"View Question\",\r\n          params: { id: this.question.Id }\r\n        });\r\n      } catch (error) {\r\n        this.$notify({\r\n          type: \"danger\",\r\n          message: \"Oops, something went wrong!\"\r\n        });\r\n        // this.setApiValidation(error.response.data.errors);\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n"],"sourceRoot":"src/views/Examples/QuestionManagement"}]}