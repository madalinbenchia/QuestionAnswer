{"remainingRequest":"D:\\laragon\\www\\QA\\node_modules\\babel-loader\\lib\\index.js!D:\\laragon\\www\\QA\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\laragon\\www\\QA\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\laragon\\www\\QA\\src\\components\\Inputs\\HtmlEditor.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\laragon\\www\\QA\\src\\components\\Inputs\\HtmlEditor.vue","mtime":1609358849839},{"path":"D:\\laragon\\www\\QA\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\laragon\\www\\QA\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\laragon\\www\\QA\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\laragon\\www\\QA\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkQ6L2xhcmFnb24vd3d3L1FBL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdodG1sLWVkaXRvcicsCiAgcHJvcHM6IHsKICAgIHZhbHVlOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogJycKICAgIH0sCiAgICBuYW1lOiBTdHJpbmcKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBlZGl0b3I6IG51bGwsCiAgICAgIGNvbnRlbnQ6IG51bGwsCiAgICAgIGxhc3RIdG1sVmFsdWU6ICcnLAogICAgICBlZGl0b3JJZDogbnVsbCwKICAgICAgdG9vbGJhcklkOiBudWxsCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgaW5pdGlhbGl6ZTogZnVuY3Rpb24gaW5pdGlhbGl6ZShRdWlsbCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdGhpcy5lZGl0b3IgPSBuZXcgUXVpbGwoIiMiLmNvbmNhdCh0aGlzLmVkaXRvcklkKSwgewogICAgICAgIHRoZW1lOiAnc25vdycsCiAgICAgICAgbW9kdWxlczogewogICAgICAgICAgdG9vbGJhcjogIiMiLmNvbmNhdCh0aGlzLnRvb2xiYXJJZCkKICAgICAgICB9CiAgICAgIH0pOwoKICAgICAgaWYgKHRoaXMudmFsdWUubGVuZ3RoID4gMCkgewogICAgICAgIHRoaXMuZWRpdG9yLnBhc3RlSFRNTCh0aGlzLnZhbHVlKTsKICAgICAgfQoKICAgICAgdmFyIGVkaXRvclJlZiA9IHRoaXMuJHJlZnMuZWRpdG9yOwogICAgICB2YXIgbm9kZSA9IGVkaXRvclJlZi5jaGlsZHJlblswXTsKICAgICAgdGhpcy5lZGl0b3Iub24oJ3RleHQtY2hhbmdlJywgZnVuY3Rpb24gKCkgewogICAgICAgIHZhciBodG1sID0gbm9kZS5pbm5lckhUTUw7CgogICAgICAgIGlmIChodG1sID09PSAnPHA+PGJyPjwvcD4nKSB7CiAgICAgICAgICBodG1sID0gJyc7CiAgICAgICAgfQoKICAgICAgICBfdGhpcy5jb250ZW50ID0gaHRtbDsKCiAgICAgICAgX3RoaXMuJGVtaXQoJ2lucHV0JywgX3RoaXMuY29udGVudCk7CiAgICAgIH0pOwogICAgfSwKICAgIHBhc3RlSFRNTDogZnVuY3Rpb24gcGFzdGVIVE1MKCkgewogICAgICBpZiAoIXRoaXMuZWRpdG9yKSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICB0aGlzLmVkaXRvci5wYXN0ZUhUTUwodGhpcy52YWx1ZSk7CiAgICB9LAogICAgcmFuZG9tU3RyaW5nOiBmdW5jdGlvbiByYW5kb21TdHJpbmcoKSB7CiAgICAgIHZhciB0ZXh0ID0gIiI7CiAgICAgIHZhciBwb3NzaWJsZSA9ICJBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6IjsKCiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgNTsgaSsrKSB7CiAgICAgICAgdGV4dCArPSBwb3NzaWJsZS5jaGFyQXQoTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogcG9zc2libGUubGVuZ3RoKSk7CiAgICAgIH0KCiAgICAgIHJldHVybiB0ZXh0OwogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgIHZhciBRdWlsbDsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyOwogICAgICAgICAgICAgIHJldHVybiBpbXBvcnQoJ3F1aWxsJyk7CgogICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgUXVpbGwgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgIFF1aWxsID0gUXVpbGwuZGVmYXVsdCB8fCBRdWlsbDsKICAgICAgICAgICAgICBfdGhpczIuZWRpdG9ySWQgPSBfdGhpczIucmFuZG9tU3RyaW5nKCk7CiAgICAgICAgICAgICAgX3RoaXMyLnRvb2xiYXJJZCA9IF90aGlzMi5yYW5kb21TdHJpbmcoKTsKCiAgICAgICAgICAgICAgX3RoaXMyLiRuZXh0VGljayhmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICBfdGhpczIuaW5pdGlhbGl6ZShRdWlsbCk7CiAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUpOwogICAgfSkpKCk7CiAgfSwKICB3YXRjaDogewogICAgdmFsdWU6IGZ1bmN0aW9uIHZhbHVlKG5ld1ZhbCkgewogICAgICBpZiAobmV3VmFsICE9PSB0aGlzLmNvbnRlbnQpIHsKICAgICAgICB0aGlzLnBhc3RlSFRNTChuZXdWYWwpOwogICAgICB9CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["HtmlEditor.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAoBA,eAAA;AACA,EAAA,IAAA,EAAA,aADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KADA;AAKA,IAAA,IAAA,EAAA;AALA,GAFA;AASA,EAAA,IATA,kBASA;AACA,WAAA;AACA,MAAA,MAAA,EAAA,IADA;AAEA,MAAA,OAAA,EAAA,IAFA;AAGA,MAAA,aAAA,EAAA,EAHA;AAIA,MAAA,QAAA,EAAA,IAJA;AAKA,MAAA,SAAA,EAAA;AALA,KAAA;AAOA,GAjBA;AAkBA,EAAA,OAAA,EAAA;AACA,IAAA,UADA,sBACA,KADA,EACA;AAAA;;AACA,WAAA,MAAA,GAAA,IAAA,KAAA,YAAA,KAAA,QAAA,GAAA;AACA,QAAA,KAAA,EAAA,MADA;AAEA,QAAA,OAAA,EAAA;AACA,UAAA,OAAA,aAAA,KAAA,SAAA;AADA;AAFA,OAAA,CAAA;;AAOA,UAAA,KAAA,KAAA,CAAA,MAAA,GAAA,CAAA,EAAA;AACA,aAAA,MAAA,CAAA,SAAA,CAAA,KAAA,KAAA;AACA;;AAEA,UAAA,SAAA,GAAA,KAAA,KAAA,CAAA,MAAA;AACA,UAAA,IAAA,GAAA,SAAA,CAAA,QAAA,CAAA,CAAA,CAAA;AACA,WAAA,MAAA,CAAA,EAAA,CAAA,aAAA,EAAA,YAAA;AACA,YAAA,IAAA,GAAA,IAAA,CAAA,SAAA;;AACA,YAAA,IAAA,KAAA,aAAA,EAAA;AACA,UAAA,IAAA,GAAA,EAAA;AACA;;AACA,QAAA,KAAA,CAAA,OAAA,GAAA,IAAA;;AACA,QAAA,KAAA,CAAA,KAAA,CAAA,OAAA,EAAA,KAAA,CAAA,OAAA;AACA,OAPA;AAQA,KAvBA;AAwBA,IAAA,SAxBA,uBAwBA;AACA,UAAA,CAAA,KAAA,MAAA,EAAA;AACA;AACA;;AACA,WAAA,MAAA,CAAA,SAAA,CAAA,KAAA,KAAA;AACA,KA7BA;AA8BA,IAAA,YA9BA,0BA8BA;AACA,UAAA,IAAA,GAAA,EAAA;AACA,UAAA,QAAA,GAAA,sDAAA;;AAEA,WAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,CAAA,EAAA,CAAA,EAAA;AACA,QAAA,IAAA,IAAA,QAAA,CAAA,MAAA,CAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,MAAA,KAAA,QAAA,CAAA,MAAA,CAAA,CAAA;AADA;;AAGA,aAAA,IAAA;AACA;AAtCA,GAlBA;AA0DA,EAAA,OA1DA,qBA0DA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACA,OAAA,OAAA,CADA;;AAAA;AACA,cAAA,KADA;AAEA,cAAA,KAAA,GAAA,KAAA,CAAA,OAAA,IAAA,KAAA;AACA,cAAA,MAAA,CAAA,QAAA,GAAA,MAAA,CAAA,YAAA,EAAA;AACA,cAAA,MAAA,CAAA,SAAA,GAAA,MAAA,CAAA,YAAA,EAAA;;AACA,cAAA,MAAA,CAAA,SAAA,CAAA,YAAA;AACA,gBAAA,MAAA,CAAA,UAAA,CAAA,KAAA;AACA,eAFA;;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,GAlEA;AAmEA,EAAA,KAAA,EAAA;AACA,IAAA,KADA,iBACA,MADA,EACA;AACA,UAAA,MAAA,KAAA,KAAA,OAAA,EAAA;AACA,aAAA,SAAA,CAAA,MAAA;AACA;AACA;AALA;AAnEA,CAAA","sourcesContent":["<template>\r\n    <div class=\"quill\">\r\n        <div :id=\"toolbarId\">\r\n            <div class=\"ql-formats\">\r\n                <button class=\"ql-bold\"></button>\r\n                <button class=\"ql-italic\"></button>\r\n                <button class=\"ql-underline\"></button>\r\n                <button class=\"ql-link\"></button>\r\n                <button class=\"ql-blockquote\"></button>\r\n                <button class=\"ql-code\"></button>\r\n                <button class=\"ql-image\"></button>\r\n                <button type=\"button\" class=\"ql-list\" value=\"ordered\"></button>\r\n                <button type=\"button\" class=\"ql-list\" value=\"bullet\"></button>\r\n            </div>\r\n        </div>\r\n        <div :id=\"editorId\" :name=\"name\" class=\"\" ref=\"editor\">\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\n  export default {\r\n    name: 'html-editor',\r\n    props: {\r\n      value: {\r\n        type: String,\r\n        default: ''\r\n      },\r\n      name: String\r\n    },\r\n    data () {\r\n      return {\r\n        editor: null,\r\n        content: null,\r\n        lastHtmlValue: '',\r\n        editorId: null,\r\n        toolbarId: null\r\n      }\r\n    },\r\n    methods: {\r\n      initialize (Quill) {\r\n        this.editor = new Quill(`#${this.editorId}`, {\r\n          theme: 'snow',\r\n          modules: {\r\n            toolbar: `#${this.toolbarId}`\r\n          }\r\n        })\r\n\r\n        if (this.value.length > 0) {\r\n          this.editor.pasteHTML(this.value)\r\n        }\r\n\r\n        let editorRef = this.$refs.editor;\r\n        let node = editorRef.children[0];\r\n        this.editor.on('text-change', () => {\r\n          let html = node.innerHTML\r\n          if (html === '<p><br></p>') {\r\n            html = '';\r\n          }\r\n          this.content = html\r\n          this.$emit('input', this.content);\r\n        })\r\n      },\r\n      pasteHTML () {\r\n        if (!this.editor) {\r\n          return\r\n        }\r\n        this.editor.pasteHTML(this.value)\r\n      },\r\n      randomString() {\r\n        let text = \"\";\r\n        let possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\r\n\r\n        for (let i = 0; i < 5; i++)\r\n          text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n\r\n        return text;\r\n      }\r\n    },\r\n    async mounted () {\r\n      let Quill = await import('quill')\r\n      Quill = Quill.default || Quill\r\n      this.editorId = this.randomString();\r\n      this.toolbarId = this.randomString();\r\n      this.$nextTick(() => {\r\n        this.initialize(Quill)\r\n      });\r\n    },\r\n    watch: {\r\n      value (newVal) {\r\n        if (newVal !== this.content) {\r\n          this.pasteHTML(newVal);\r\n        }\r\n      }\r\n    }\r\n  }\r\n</script>\r\n"],"sourceRoot":"src/components/Inputs"}]}