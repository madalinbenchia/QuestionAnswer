{"remainingRequest":"D:\\laragon\\www\\QA - Copy\\node_modules\\babel-loader\\lib\\index.js!D:\\laragon\\www\\QA - Copy\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\laragon\\www\\QA - Copy\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\laragon\\www\\QA - Copy\\src\\components\\Inputs\\HtmlEditor.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\laragon\\www\\QA - Copy\\src\\components\\Inputs\\HtmlEditor.vue","mtime":1610291749420},{"path":"D:\\laragon\\www\\QA - Copy\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\laragon\\www\\QA - Copy\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\laragon\\www\\QA - Copy\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\laragon\\www\\QA - Copy\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkQ6L2xhcmFnb24vd3d3L1FBIC0gQ29weS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiaHRtbC1lZGl0b3IiLAogIHByb3BzOiB7CiAgICB2YWx1ZTogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICIiCiAgICB9LAogICAgbmFtZTogU3RyaW5nCiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZWRpdG9yOiBudWxsLAogICAgICBjb250ZW50OiBudWxsLAogICAgICBsYXN0SHRtbFZhbHVlOiAiIiwKICAgICAgZWRpdG9ySWQ6IG51bGwsCiAgICAgIHRvb2xiYXJJZDogbnVsbAogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGluaXRpYWxpemU6IGZ1bmN0aW9uIGluaXRpYWxpemUoUXVpbGwpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHRoaXMuZWRpdG9yID0gbmV3IFF1aWxsKCIjIi5jb25jYXQodGhpcy5lZGl0b3JJZCksIHsKICAgICAgICB0aGVtZTogInNub3ciLAogICAgICAgIG1vZHVsZXM6IHsKICAgICAgICAgIHRvb2xiYXI6ICIjIi5jb25jYXQodGhpcy50b29sYmFySWQpCiAgICAgICAgfQogICAgICB9KTsKCiAgICAgIGlmICh0aGlzLnZhbHVlLmxlbmd0aCA+IDApIHsKICAgICAgICB0aGlzLmVkaXRvci5wYXN0ZUhUTUwodGhpcy52YWx1ZSk7CiAgICAgIH0KCiAgICAgIHZhciBlZGl0b3JSZWYgPSB0aGlzLiRyZWZzLmVkaXRvcjsKICAgICAgdmFyIG5vZGUgPSBlZGl0b3JSZWYuY2hpbGRyZW5bMF07CiAgICAgIHRoaXMuZWRpdG9yLm9uKCJ0ZXh0LWNoYW5nZSIsIGZ1bmN0aW9uICgpIHsKICAgICAgICB2YXIgaHRtbCA9IG5vZGUuaW5uZXJIVE1MOwoKICAgICAgICBpZiAoaHRtbCA9PT0gIjxwPjxicj48L3A+IikgewogICAgICAgICAgaHRtbCA9ICIiOwogICAgICAgIH0KCiAgICAgICAgX3RoaXMuY29udGVudCA9IGh0bWw7CgogICAgICAgIF90aGlzLiRlbWl0KCJpbnB1dCIsIF90aGlzLmNvbnRlbnQpOwogICAgICB9KTsKICAgIH0sCiAgICBwYXN0ZUhUTUw6IGZ1bmN0aW9uIHBhc3RlSFRNTCgpIHsKICAgICAgaWYgKCF0aGlzLmVkaXRvcikgewogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgdGhpcy5lZGl0b3IucGFzdGVIVE1MKHRoaXMudmFsdWUpOwogICAgfSwKICAgIHJhbmRvbVN0cmluZzogZnVuY3Rpb24gcmFuZG9tU3RyaW5nKCkgewogICAgICB2YXIgdGV4dCA9ICIiOwogICAgICB2YXIgcG9zc2libGUgPSAiQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5eiI7CgogICAgICBmb3IgKHZhciBpID0gMDsgaSA8IDU7IGkrKykgewogICAgICAgIHRleHQgKz0gcG9zc2libGUuY2hhckF0KE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIHBvc3NpYmxlLmxlbmd0aCkpOwogICAgICB9CgogICAgICByZXR1cm4gdGV4dDsKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICB2YXIgUXVpbGw7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjsKICAgICAgICAgICAgICByZXR1cm4gaW1wb3J0KCJxdWlsbCIpOwoKICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgIFF1aWxsID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICBRdWlsbCA9IFF1aWxsLmRlZmF1bHQgfHwgUXVpbGw7CiAgICAgICAgICAgICAgX3RoaXMyLmVkaXRvcklkID0gX3RoaXMyLnJhbmRvbVN0cmluZygpOwogICAgICAgICAgICAgIF90aGlzMi50b29sYmFySWQgPSBfdGhpczIucmFuZG9tU3RyaW5nKCk7CgogICAgICAgICAgICAgIF90aGlzMi4kbmV4dFRpY2soZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgX3RoaXMyLmluaXRpYWxpemUoUXVpbGwpOwogICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlKTsKICAgIH0pKSgpOwogIH0sCiAgd2F0Y2g6IHsKICAgIHZhbHVlOiBmdW5jdGlvbiB2YWx1ZShuZXdWYWwpIHsKICAgICAgaWYgKG5ld1ZhbCAhPT0gdGhpcy5jb250ZW50KSB7CiAgICAgICAgdGhpcy5wYXN0ZUhUTUwobmV3VmFsKTsKICAgICAgfQogICAgfQogIH0KfTs="},{"version":3,"sources":["HtmlEditor.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAmBA,eAAA;AACA,EAAA,IAAA,EAAA,aADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KADA;AAKA,IAAA,IAAA,EAAA;AALA,GAFA;AASA,EAAA,IATA,kBASA;AACA,WAAA;AACA,MAAA,MAAA,EAAA,IADA;AAEA,MAAA,OAAA,EAAA,IAFA;AAGA,MAAA,aAAA,EAAA,EAHA;AAIA,MAAA,QAAA,EAAA,IAJA;AAKA,MAAA,SAAA,EAAA;AALA,KAAA;AAOA,GAjBA;AAkBA,EAAA,OAAA,EAAA;AACA,IAAA,UADA,sBACA,KADA,EACA;AAAA;;AACA,WAAA,MAAA,GAAA,IAAA,KAAA,YAAA,KAAA,QAAA,GAAA;AACA,QAAA,KAAA,EAAA,MADA;AAEA,QAAA,OAAA,EAAA;AACA,UAAA,OAAA,aAAA,KAAA,SAAA;AADA;AAFA,OAAA,CAAA;;AAOA,UAAA,KAAA,KAAA,CAAA,MAAA,GAAA,CAAA,EAAA;AACA,aAAA,MAAA,CAAA,SAAA,CAAA,KAAA,KAAA;AACA;;AAEA,UAAA,SAAA,GAAA,KAAA,KAAA,CAAA,MAAA;AACA,UAAA,IAAA,GAAA,SAAA,CAAA,QAAA,CAAA,CAAA,CAAA;AACA,WAAA,MAAA,CAAA,EAAA,CAAA,aAAA,EAAA,YAAA;AACA,YAAA,IAAA,GAAA,IAAA,CAAA,SAAA;;AACA,YAAA,IAAA,KAAA,aAAA,EAAA;AACA,UAAA,IAAA,GAAA,EAAA;AACA;;AACA,QAAA,KAAA,CAAA,OAAA,GAAA,IAAA;;AACA,QAAA,KAAA,CAAA,KAAA,CAAA,OAAA,EAAA,KAAA,CAAA,OAAA;AACA,OAPA;AAQA,KAvBA;AAwBA,IAAA,SAxBA,uBAwBA;AACA,UAAA,CAAA,KAAA,MAAA,EAAA;AACA;AACA;;AACA,WAAA,MAAA,CAAA,SAAA,CAAA,KAAA,KAAA;AACA,KA7BA;AA8BA,IAAA,YA9BA,0BA8BA;AACA,UAAA,IAAA,GAAA,EAAA;AACA,UAAA,QAAA,GAAA,sDAAA;;AAEA,WAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,CAAA,EAAA,CAAA,EAAA;AACA,QAAA,IAAA,IAAA,QAAA,CAAA,MAAA,CAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,MAAA,KAAA,QAAA,CAAA,MAAA,CAAA,CAAA;AADA;;AAGA,aAAA,IAAA;AACA;AAtCA,GAlBA;AA0DA,EAAA,OA1DA,qBA0DA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACA,OAAA,OAAA,CADA;;AAAA;AACA,cAAA,KADA;AAEA,cAAA,KAAA,GAAA,KAAA,CAAA,OAAA,IAAA,KAAA;AACA,cAAA,MAAA,CAAA,QAAA,GAAA,MAAA,CAAA,YAAA,EAAA;AACA,cAAA,MAAA,CAAA,SAAA,GAAA,MAAA,CAAA,YAAA,EAAA;;AACA,cAAA,MAAA,CAAA,SAAA,CAAA,YAAA;AACA,gBAAA,MAAA,CAAA,UAAA,CAAA,KAAA;AACA,eAFA;;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,GAlEA;AAmEA,EAAA,KAAA,EAAA;AACA,IAAA,KADA,iBACA,MADA,EACA;AACA,UAAA,MAAA,KAAA,KAAA,OAAA,EAAA;AACA,aAAA,SAAA,CAAA,MAAA;AACA;AACA;AALA;AAnEA,CAAA","sourcesContent":["<template>\r\n  <div class=\"quill\">\r\n    <div :id=\"toolbarId\">\r\n      <div class=\"ql-formats\">\r\n        <button class=\"ql-bold\"></button>\r\n        <button class=\"ql-italic\"></button>\r\n        <button class=\"ql-underline\"></button>\r\n        <button class=\"ql-link\"></button>\r\n        <button class=\"ql-blockquote\"></button>\r\n        <button class=\"ql-code\"></button>\r\n        <button class=\"ql-image\"></button>\r\n        <button type=\"button\" class=\"ql-list\" value=\"ordered\"></button>\r\n        <button type=\"button\" class=\"ql-list\" value=\"bullet\"></button>\r\n      </div>\r\n    </div>\r\n    <div :id=\"editorId\" :name=\"name\" class=\"\" ref=\"editor\"></div>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  name: \"html-editor\",\r\n  props: {\r\n    value: {\r\n      type: String,\r\n      default: \"\"\r\n    },\r\n    name: String\r\n  },\r\n  data() {\r\n    return {\r\n      editor: null,\r\n      content: null,\r\n      lastHtmlValue: \"\",\r\n      editorId: null,\r\n      toolbarId: null\r\n    };\r\n  },\r\n  methods: {\r\n    initialize(Quill) {\r\n      this.editor = new Quill(`#${this.editorId}`, {\r\n        theme: \"snow\",\r\n        modules: {\r\n          toolbar: `#${this.toolbarId}`\r\n        }\r\n      });\r\n\r\n      if (this.value.length > 0) {\r\n        this.editor.pasteHTML(this.value);\r\n      }\r\n\r\n      let editorRef = this.$refs.editor;\r\n      let node = editorRef.children[0];\r\n      this.editor.on(\"text-change\", () => {\r\n        let html = node.innerHTML;\r\n        if (html === \"<p><br></p>\") {\r\n          html = \"\";\r\n        }\r\n        this.content = html;\r\n        this.$emit(\"input\", this.content);\r\n      });\r\n    },\r\n    pasteHTML() {\r\n      if (!this.editor) {\r\n        return;\r\n      }\r\n      this.editor.pasteHTML(this.value);\r\n    },\r\n    randomString() {\r\n      let text = \"\";\r\n      let possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\r\n\r\n      for (let i = 0; i < 5; i++)\r\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n\r\n      return text;\r\n    }\r\n  },\r\n  async mounted() {\r\n    let Quill = await import(\"quill\");\r\n    Quill = Quill.default || Quill;\r\n    this.editorId = this.randomString();\r\n    this.toolbarId = this.randomString();\r\n    this.$nextTick(() => {\r\n      this.initialize(Quill);\r\n    });\r\n  },\r\n  watch: {\r\n    value(newVal) {\r\n      if (newVal !== this.content) {\r\n        this.pasteHTML(newVal);\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n"],"sourceRoot":"src/components/Inputs"}]}