{"remainingRequest":"D:\\laragon\\www\\vue-argon-dashboard-pro-json-api\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\laragon\\www\\vue-argon-dashboard-pro-json-api\\src\\views\\Maps\\GoogleMaps.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\laragon\\www\\vue-argon-dashboard-pro-json-api\\src\\views\\Maps\\GoogleMaps.vue","mtime":1599650741031},{"path":"D:\\laragon\\www\\vue-argon-dashboard-pro-json-api\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\laragon\\www\\vue-argon-dashboard-pro-json-api\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\laragon\\www\\vue-argon-dashboard-pro-json-api\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\laragon\\www\\vue-argon-dashboard-pro-json-api\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IEFQSV9LRVkgfSBmcm9tICcuL0FQSV9LRVknOwppbXBvcnQgeyBMb2FkZXIsIExvYWRlck9wdGlvbnMgfSBmcm9tICJnb29nbGUtbWFwcyI7Cgpjb25zdCBsb2FkZXIgPSBuZXcgTG9hZGVyKEFQSV9LRVkpOwoKZXhwb3J0IGRlZmF1bHQgewogIG1ldGhvZHM6IHsKICAgIGluaXRNYXAoZ29vZ2xlKSB7CiAgICAgIGxldCBtYXAsIGxhdCA9IDQwLjc0ODgxNywgbG5nID0gLTczLjk4NTQyOCwgY29sb3IgPSAiIzVlNzJlNCI7CiAgICAgIG1hcCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdtYXAtY3VzdG9tJyk7CgogICAgICBsZXQgbXlMYXRsbmcgPSBuZXcgZ29vZ2xlLm1hcHMuTGF0TG5nKGxhdCwgbG5nKTsKICAgICAgbGV0IG1hcE9wdGlvbnMgPSB7CiAgICAgICAgem9vbTogMTIsCiAgICAgICAgc2Nyb2xsd2hlZWw6IGZhbHNlLAogICAgICAgIGNlbnRlcjogbXlMYXRsbmcsCiAgICAgICAgbWFwVHlwZUlkOiBnb29nbGUubWFwcy5NYXBUeXBlSWQuUk9BRE1BUCwKICAgICAgICBzdHlsZXM6IFt7CiAgICAgICAgICAiZmVhdHVyZVR5cGUiOiAiYWRtaW5pc3RyYXRpdmUiLAogICAgICAgICAgImVsZW1lbnRUeXBlIjogImxhYmVscy50ZXh0LmZpbGwiLAogICAgICAgICAgInN0eWxlcnMiOiBbeyAiY29sb3IiOiAiIzQ0NDQ0NCIgfV0KICAgICAgICB9LCB7CiAgICAgICAgICAiZmVhdHVyZVR5cGUiOiAibGFuZHNjYXBlIiwKICAgICAgICAgICJlbGVtZW50VHlwZSI6ICJhbGwiLAogICAgICAgICAgInN0eWxlcnMiOiBbeyAiY29sb3IiOiAiI2YyZjJmMiIgfV0KICAgICAgICB9LCB7CiAgICAgICAgICAiZmVhdHVyZVR5cGUiOiAicG9pIiwKICAgICAgICAgICJlbGVtZW50VHlwZSI6ICJhbGwiLAogICAgICAgICAgInN0eWxlcnMiOiBbeyAidmlzaWJpbGl0eSI6ICJvZmYiIH1dCiAgICAgICAgfSwgewogICAgICAgICAgImZlYXR1cmVUeXBlIjogInJvYWQiLAogICAgICAgICAgImVsZW1lbnRUeXBlIjogImFsbCIsCiAgICAgICAgICAic3R5bGVycyI6IFt7ICJzYXR1cmF0aW9uIjogLTEwMCB9LCB7ICJsaWdodG5lc3MiOiA0NSB9XQogICAgICAgIH0sIHsKICAgICAgICAgICJmZWF0dXJlVHlwZSI6ICJyb2FkLmhpZ2h3YXkiLAogICAgICAgICAgImVsZW1lbnRUeXBlIjogImFsbCIsCiAgICAgICAgICAic3R5bGVycyI6IFt7ICJ2aXNpYmlsaXR5IjogInNpbXBsaWZpZWQiIH1dCiAgICAgICAgfSwgewogICAgICAgICAgImZlYXR1cmVUeXBlIjogInJvYWQuYXJ0ZXJpYWwiLAogICAgICAgICAgImVsZW1lbnRUeXBlIjogImxhYmVscy5pY29uIiwKICAgICAgICAgICJzdHlsZXJzIjogW3sgInZpc2liaWxpdHkiOiAib2ZmIiB9XQogICAgICAgIH0sIHsKICAgICAgICAgICJmZWF0dXJlVHlwZSI6ICJ0cmFuc2l0IiwKICAgICAgICAgICJlbGVtZW50VHlwZSI6ICJhbGwiLAogICAgICAgICAgInN0eWxlcnMiOiBbeyAidmlzaWJpbGl0eSI6ICJvZmYiIH1dCiAgICAgICAgfSwgeyAiZmVhdHVyZVR5cGUiOiAid2F0ZXIiLCAiZWxlbWVudFR5cGUiOiAiYWxsIiwgInN0eWxlcnMiOiBbeyAiY29sb3IiOiBjb2xvciB9LCB7ICJ2aXNpYmlsaXR5IjogIm9uIiB9XSB9XQogICAgICB9CgogICAgICBtYXAgPSBuZXcgZ29vZ2xlLm1hcHMuTWFwKG1hcCwgbWFwT3B0aW9ucyk7CgogICAgICBsZXQgbWFya2VyID0gbmV3IGdvb2dsZS5tYXBzLk1hcmtlcih7CiAgICAgICAgcG9zaXRpb246IG15TGF0bG5nLAogICAgICAgIG1hcDogbWFwLAogICAgICAgIGFuaW1hdGlvbjogZ29vZ2xlLm1hcHMuQW5pbWF0aW9uLkRST1AsCiAgICAgICAgdGl0bGU6ICdIZWxsbyBXb3JsZCEnCiAgICAgIH0pOwoKICAgICAgbGV0IGNvbnRlbnRTdHJpbmcgPSAnPGRpdiBjbGFzcz0iaW5mby13aW5kb3ctY29udGVudCI+PGgyPkFyZ29uIERhc2hib2FyZCBQUk88L2gyPicgKwogICAgICAgICc8cD5BIGJlYXV0aWZ1bCBwcmVtaXVtIGRhc2hib2FyZCBmb3IgQm9vdHN0cmFwIDQuPC9wPjwvZGl2Pic7CgogICAgICBsZXQgaW5mb3dpbmRvdyA9IG5ldyBnb29nbGUubWFwcy5JbmZvV2luZG93KHsKICAgICAgICBjb250ZW50OiBjb250ZW50U3RyaW5nCiAgICAgIH0pOwoKICAgICAgZ29vZ2xlLm1hcHMuZXZlbnQuYWRkTGlzdGVuZXIobWFya2VyLCAnY2xpY2snLCBmdW5jdGlvbiAoKSB7CiAgICAgICAgaW5mb3dpbmRvdy5vcGVuKG1hcCwgbWFya2VyKTsKICAgICAgfSk7CiAgICB9CiAgfSwKICBtb3VudGVkKCkgewogICAgbG9hZGVyLmxvYWQoKS50aGVuKGdvb2dsZSA9PiB7CiAgICAgIHRoaXMuaW5pdE1hcChnb29nbGUpOwogICAgfSk7CiAgfQp9Owo="},{"version":3,"sources":["GoogleMaps.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"GoogleMaps.vue","sourceRoot":"src/views/Maps","sourcesContent":["<template>\r\n  <div>\r\n    <base-header class=\"pb-6\">\r\n      <div class=\"row align-items-center py-4\">\r\n        <div class=\"col-lg-6 col-7\">\r\n          <h6 class=\"h2 text-white d-inline-block mb-0\">{{$route.name}}</h6>\r\n          <nav aria-label=\"breadcrumb\" class=\"d-none d-md-inline-block ml-md-4\">\r\n            <route-breadcrumb/>\r\n          </nav>\r\n        </div>\r\n        <div class=\"col-lg-6 col-5 text-right\">\r\n          <base-button size=\"sm\" type=\"neutral\">New</base-button>\r\n          <base-button size=\"sm\" type=\"neutral\">Filters</base-button>\r\n        </div>\r\n      </div>\r\n    </base-header>\r\n\r\n    <div class=\"container-fluid mt--6\">\r\n      <div class=\"row\">\r\n        <div class=\"col\">\r\n          <div class=\"card border-0\">\r\n            <div id=\"map-custom\" class=\"map-canvas\"\r\n                 style=\"height: 600px;\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\n  import { API_KEY } from './API_KEY';\r\n  import { Loader, LoaderOptions } from \"google-maps\";\r\n\r\n  const loader = new Loader(API_KEY);\r\n\r\n  export default {\r\n    methods: {\r\n      initMap(google) {\r\n        let map, lat = 40.748817, lng = -73.985428, color = \"#5e72e4\";\r\n        map = document.getElementById('map-custom');\r\n\r\n        let myLatlng = new google.maps.LatLng(lat, lng);\r\n        let mapOptions = {\r\n          zoom: 12,\r\n          scrollwheel: false,\r\n          center: myLatlng,\r\n          mapTypeId: google.maps.MapTypeId.ROADMAP,\r\n          styles: [{\r\n            \"featureType\": \"administrative\",\r\n            \"elementType\": \"labels.text.fill\",\r\n            \"stylers\": [{ \"color\": \"#444444\" }]\r\n          }, {\r\n            \"featureType\": \"landscape\",\r\n            \"elementType\": \"all\",\r\n            \"stylers\": [{ \"color\": \"#f2f2f2\" }]\r\n          }, {\r\n            \"featureType\": \"poi\",\r\n            \"elementType\": \"all\",\r\n            \"stylers\": [{ \"visibility\": \"off\" }]\r\n          }, {\r\n            \"featureType\": \"road\",\r\n            \"elementType\": \"all\",\r\n            \"stylers\": [{ \"saturation\": -100 }, { \"lightness\": 45 }]\r\n          }, {\r\n            \"featureType\": \"road.highway\",\r\n            \"elementType\": \"all\",\r\n            \"stylers\": [{ \"visibility\": \"simplified\" }]\r\n          }, {\r\n            \"featureType\": \"road.arterial\",\r\n            \"elementType\": \"labels.icon\",\r\n            \"stylers\": [{ \"visibility\": \"off\" }]\r\n          }, {\r\n            \"featureType\": \"transit\",\r\n            \"elementType\": \"all\",\r\n            \"stylers\": [{ \"visibility\": \"off\" }]\r\n          }, { \"featureType\": \"water\", \"elementType\": \"all\", \"stylers\": [{ \"color\": color }, { \"visibility\": \"on\" }] }]\r\n        }\r\n\r\n        map = new google.maps.Map(map, mapOptions);\r\n\r\n        let marker = new google.maps.Marker({\r\n          position: myLatlng,\r\n          map: map,\r\n          animation: google.maps.Animation.DROP,\r\n          title: 'Hello World!'\r\n        });\r\n\r\n        let contentString = '<div class=\"info-window-content\"><h2>Argon Dashboard PRO</h2>' +\r\n          '<p>A beautiful premium dashboard for Bootstrap 4.</p></div>';\r\n\r\n        let infowindow = new google.maps.InfoWindow({\r\n          content: contentString\r\n        });\r\n\r\n        google.maps.event.addListener(marker, 'click', function () {\r\n          infowindow.open(map, marker);\r\n        });\r\n      }\r\n    },\r\n    mounted() {\r\n      loader.load().then(google => {\r\n        this.initMap(google);\r\n      });\r\n    }\r\n  };\r\n</script>\r\n"]}]}