{"remainingRequest":"D:\\laragon\\www\\vue-argon-dashboard-pro-json-api\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\laragon\\www\\vue-argon-dashboard-pro-json-api\\src\\views\\Examples\\UserProfile\\UserEditCard.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"D:\\laragon\\www\\vue-argon-dashboard-pro-json-api\\src\\views\\Examples\\UserProfile\\UserEditCard.vue","mtime":1599638127770},{"path":"D:\\laragon\\www\\vue-argon-dashboard-pro-json-api\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\laragon\\www\\vue-argon-dashboard-pro-json-api\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\laragon\\www\\vue-argon-dashboard-pro-json-api\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\laragon\\www\\vue-argon-dashboard-pro-json-api\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\laragon\\www\\vue-argon-dashboard-pro-json-api\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLy8gICAgIC5wcm9maWxlLWltYWdlIHsNCi8vICAgaGVpZ2h0OiAyMDBweDsNCi8vICAgd2lkdGg6IDIwMHB4Ow0KLy8gICBib3JkZXItcmFkaXVzOiA0JTsNCi8vICAgYm94LXNoYWRvdzogMHB4IC0ycHggMTBweCAwcHggcmdiYSgwLCAwLCAwLCAwLjc1KTsNCi8vICAgbWFyZ2luLWJvdHRvbTogMjRweDsNCi8vICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyOw0KLy8gICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0Ow0KLy8gICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyOw0KLy8gfQ0KLy8g"},{"version":3,"sources":["UserEditCard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"UserEditCard.vue","sourceRoot":"src/views/Examples/UserProfile","sourcesContent":["<template>\r\n    <div class=\"card\">\r\n        <div class=\"card-header\">\r\n            <h1>Edit Profile</h1>\r\n        </div>\r\n        <div class=\"card-body\">\r\n            <form ref=\"profile_form\" @submit.prevent=\"handleProfileUpdate\">\r\n                <div class=\"form-group\">\r\n                    <label class=\"form-control-label\">\r\n                      Profile Photo\r\n                    </label>\r\n                    <div v-if=\"image\" class=\"profile-image card-img pb-4\"  :style=\"{\r\n                        'background-image': `url('${image}')`\r\n                    }\">\r\n                    </div>\r\n                    <div v-else class=\"profile-image\">\r\n                        <img :src=\"default_img\" />\r\n                    </div>\r\n                    <div class=\"image-upload\">\r\n                        <base-button v-if=\"image\" type=\"button\" class=\"btn btn-sm btn-danger\" @click=\"removeImage\">\r\n                            <span>\r\n                                <i class=\"fa fa-times\" />\r\n                                Remove\r\n                            </span>\r\n                        </base-button>\r\n                        <base-button type=\"button\" class=\"btn btn-sm btn-primary\">\r\n                            <label v-if=\"!image\" for=\"imageInput\" class=\"mb-0\">Select image</label>\r\n                            <label v-else for=\"imageInput\" class=\"mb-0\" >Change</label>\r\n                            <input id=\"imageInput\" ref=\"imageInput\" accept=\"image/*\" type=\"file\" style=\"display:none\" @input=\"onSelectFile\" />\r\n                        </base-button>\r\n                    </div>\r\n                </div>\r\n                <!-- <validation-error :errors=\"apiValidationErrors.attachment\" /> -->\r\n                <base-input label=\"Name\" prepend-icon=\"fas fa-user\" placeholder=\"Your name\" v-model=\"user.name\" />\r\n                <!-- <validation-error :errors=\"apiValidationErrors.name\" /> -->\r\n                <base-input label=\"Email\" prepend-icon=\"fas fa-envelope\" placeholder=\"Email\" v-model=\"user.email\"/>\r\n                <!-- <validation-error :errors=\"apiValidationErrors.email\" /> -->\r\n                <div class=\"my-4\">\r\n                    <base-button type=\"button\" class=\"btn btn-sm btn-primary\" native-type=\"submit\">\r\n                        Submit\r\n                    </base-button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport BaseInput from '@/components/Inputs/BaseInput.vue'\r\nimport BaseButton from '@/components/BaseButton.vue'\r\nimport formMixin from \"@/mixins/form-mixin\";\r\n// import ValidationError  from \"~/components/ValidationError.vue\";\r\n\r\nexport default {\r\n    name: 'UserEditCard',\r\n\r\n    components: {\r\n        BaseInput,\r\n        BaseButton,\r\n        //ValidationError,\r\n    },\r\n\r\n    mixins: [formMixin],\r\n\r\n    props: {\r\n        user: Object\r\n    },\r\n\r\n    data() {\r\n        return {\r\n            image: null,\r\n            default_img: process.env.VUE_APP_BASE_URL + \"/img/placeholder.jpg\",\r\n        }\r\n    },\r\n\r\n    methods: {\r\n        async onSelectFile(e) {\r\n            const input = this.$refs.imageInput\r\n            const files = input.files\r\n\r\n            if (files && files[0]) {\r\n            const reader = new FileReader()\r\n            reader.onload = (e) => {\r\n                this.image = e.target.result\r\n            }\r\n            reader.readAsDataURL(files[0])\r\n            }\r\n        },\r\n\r\n        removeImage() {\r\n        this.image = null;\r\n        },\r\n\r\n        async handleProfileUpdate() {\r\n            try {\r\n                if(this.image) {\r\n                    await this.$store.dispatch(\"users/upload\", {\r\n                        user: this.user,\r\n                        image: this.$refs.imageInput.files[0],\r\n                    });\r\n                    this.user.profile_image = await this.$store.getters[\"users/url\"];\r\n                }\r\n\r\n                await this.$store.dispatch(\"profile/update\", this.user);\r\n\r\n                this.removeImage()\r\n                this.unsetApiValidationErrors()\r\n                this.$notify({\r\n                    type: 'success',\r\n                    message: 'Profile updated successfully.'\r\n                })\r\n\r\n                await this.$store.getters[\"profile/me\"];\r\n            } catch (error) {\r\n                this.$notify({\r\n                    type: 'danger',\r\n                    message: 'Oops, something went wrong!'\r\n                })\r\n                this.setApiValidation(error.response.data.errors)\r\n            }\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n// <style >\r\n//     .profile-image {\r\n//   height: 200px;\r\n//   width: 200px;\r\n//   border-radius: 4%;\r\n//   box-shadow: 0px -2px 10px 0px rgba(0, 0, 0, 0.75);\r\n//   margin-bottom: 24px;\r\n//   background-position: center;\r\n//   background-repeat: no-repeat;\r\n//   background-size: cover;\r\n// }\r\n// </style>\r\n"]}]}