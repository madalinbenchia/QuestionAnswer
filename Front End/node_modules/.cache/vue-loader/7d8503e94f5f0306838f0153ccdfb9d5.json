{"remainingRequest":"D:\\laragon\\www\\vue-argon-dashboard-pro-json-api\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\laragon\\www\\vue-argon-dashboard-pro-json-api\\src\\components\\SidebarPlugin\\SidebarItem.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"D:\\laragon\\www\\vue-argon-dashboard-pro-json-api\\src\\components\\SidebarPlugin\\SidebarItem.vue","mtime":1599650740870},{"path":"D:\\laragon\\www\\vue-argon-dashboard-pro-json-api\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\laragon\\www\\vue-argon-dashboard-pro-json-api\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\laragon\\www\\vue-argon-dashboard-pro-json-api\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\laragon\\www\\vue-argon-dashboard-pro-json-api\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\laragon\\www\\vue-argon-dashboard-pro-json-api\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQouc2lkZWJhci1tZW51LWl0ZW0gew0KICBjdXJzb3I6IHBvaW50ZXI7DQp9DQoubmF2YmFyLWRhcmsgLnNpZGViYXItbWVudS1pdGVtLmFjdGl2ZSAubmF2LWxpbmstdGV4dHsNCiAgY29sb3I6IGJsYWNrOw0KfQ0KLnNpZGViYXItbWluaXsNCiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlOw0KICAgIHdpZHRoOiAzMHB4Ow0KICAgIG1hcmdpbi1yaWdodDogMTVweDsNCiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7DQogICAgbGV0dGVyLXNwYWNpbmc6IDFweDsNCiAgICBwb3NpdGlvbjogcmVsYXRpdmU7DQogICAgZmxvYXQ6IGxlZnQ7DQogICAgZGlzcGxheTogaW5pdGlhbDsNCn0NCg=="},{"version":3,"sources":["SidebarItem.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SidebarItem.vue","sourceRoot":"src/components/SidebarPlugin","sourcesContent":["<template>\r\n  <component\r\n    :is=\"baseComponent\"\r\n    :to=\"link.path ? link.path : '/'\"\r\n    class=\"nav-item\"\r\n    :class=\"{ active: isActive }\"\r\n    tag=\"li\"\r\n  >\r\n    <a\r\n      v-if=\"isMenu\"\r\n      class=\"sidebar-menu-item nav-link\"\r\n      :class=\"{ active: isActive }\"\r\n      :aria-expanded=\"!collapsed\"\r\n      data-toggle=\"collapse\"\r\n      @click.prevent=\"collapseMenu\"\r\n    >\r\n      <template v-if=\"addLink\">\r\n        <span class=\"nav-link-text\">\r\n          {{ link.name }} <b class=\"caret\"></b>\r\n        </span>\r\n      </template>\r\n      <template v-else>\r\n        <i :class=\"link.icon\"></i>\r\n        <span class=\"nav-link-text\">{{ link.name }} <b class=\"caret\"></b></span>\r\n      </template>\r\n    </a>\r\n\r\n    <collapse-transition>\r\n      <div\r\n        v-if=\"$slots.default || this.isMenu\"\r\n        v-show=\"!collapsed\"\r\n        class=\"collapse show\"\r\n      >\r\n        <ul class=\"nav nav-sm flex-column\">\r\n          <slot></slot>\r\n        </ul>\r\n      </div>\r\n    </collapse-transition>\r\n\r\n    <slot\r\n      name=\"title\"\r\n      v-if=\"children.length === 0 && !$slots.default && link.path\"\r\n    >\r\n      <component\r\n        :to=\"link.path\"\r\n        @click.native=\"linkClick\"\r\n        :is=\"elementType(link, false)\"\r\n        class=\"nav-link\"\r\n        :class=\"{ active: link.active }\"\r\n        :target=\"link.target\"\r\n        :href=\"link.path\"\r\n      >\r\n        <template v-if=\"addLink\">\r\n          <span class=\"sidebar-mini\">{{ linkPrefix }}</span>\r\n          <span class=\"nav-link-text\">{{ link.name }}</span>\r\n        </template>\r\n        <template v-else>\r\n          <i :class=\"link.icon\"></i>\r\n          <span class=\"nav-link-text\">{{ link.name }}</span>\r\n        </template>\r\n      </component>\r\n    </slot>\r\n  </component>\r\n</template>\r\n<script>\r\nimport { CollapseTransition } from 'vue2-transitions';\r\n\r\nexport default {\r\n  name: 'sidebar-item',\r\n  components: {\r\n    CollapseTransition\r\n  },\r\n  props: {\r\n    menu: {\r\n      type: Boolean,\r\n      default: false,\r\n      description:\r\n        \"Whether the item is a menu. Most of the item it's not used and should be used only if you want to override the default behavior.\"\r\n    },\r\n    link: {\r\n      type: Object,\r\n      default: () => {\r\n        return {\r\n          name: '',\r\n          path: '',\r\n          children: []\r\n        };\r\n      },\r\n      description:\r\n        'Sidebar link. Can contain name, path, icon and other attributes. See examples for more info'\r\n    }\r\n  },\r\n  provide() {\r\n    return {\r\n      addLink: this.addChild,\r\n      removeLink: this.removeChild\r\n    };\r\n  },\r\n  inject: {\r\n    addLink: { default: null },\r\n    removeLink: { default: null },\r\n    autoClose: {\r\n      default: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      children: [],\r\n      collapsed: true\r\n    };\r\n  },\r\n  computed: {\r\n    baseComponent() {\r\n      return this.isMenu || this.link.isRoute ? 'li' : 'router-link';\r\n    },\r\n    linkPrefix() {\r\n      if (this.link.name) {\r\n        let words = this.link.name.split(' ');\r\n        return words.map(word => word.substring(0, 1)).join('');\r\n      }\r\n      return '';\r\n    },\r\n    isMenu() {\r\n      return this.children.length > 0 || this.menu === true;\r\n    },\r\n    isActive() {\r\n      if (this.$route && this.$route.path) {\r\n        let matchingRoute = this.children.find(c =>\r\n          this.$route.path.startsWith(c.link.path)\r\n        );\r\n        if (matchingRoute !== undefined) {\r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    }\r\n  },\r\n  methods: {\r\n    addChild(item) {\r\n      const index = this.$slots.default.indexOf(item.$vnode);\r\n      this.children.splice(index, 0, item);\r\n    },\r\n    removeChild(item) {\r\n      const tabs = this.children;\r\n      const index = tabs.indexOf(item);\r\n      tabs.splice(index, 1);\r\n    },\r\n    elementType(link, isParent = true) {\r\n      if (link.isRoute === false) {\r\n        return isParent ? 'li' : 'a';\r\n      } else {\r\n        return 'router-link';\r\n      }\r\n    },\r\n    linkAbbreviation(name) {\r\n      const matches = name.match(/\\b(\\w)/g);\r\n      return matches.join('');\r\n    },\r\n    linkClick() {\r\n      if (\r\n        this.autoClose &&\r\n        this.$sidebar &&\r\n        this.$sidebar.showSidebar === true\r\n      ) {\r\n        this.$sidebar.displaySidebar(false);\r\n      }\r\n    },\r\n    collapseMenu() {\r\n      this.collapsed = !this.collapsed;\r\n    },\r\n    collapseSubMenu(link) {\r\n      link.collapsed = !link.collapsed;\r\n    }\r\n  },\r\n  mounted() {\r\n    if (this.addLink) {\r\n      this.addLink(this);\r\n    }\r\n    if (this.link.collapsed !== undefined) {\r\n      this.collapsed = this.link.collapsed;\r\n    }\r\n    if (this.isActive && this.isMenu) {\r\n      this.collapsed = false;\r\n    }\r\n  },\r\n  destroyed() {\r\n    if (this.$el && this.$el.parentNode) {\r\n      this.$el.parentNode.removeChild(this.$el);\r\n    }\r\n    if (this.removeLink) {\r\n      this.removeLink(this);\r\n    }\r\n  }\r\n};\r\n</script>\r\n<style>\r\n.sidebar-menu-item {\r\n  cursor: pointer;\r\n}\r\n.navbar-dark .sidebar-menu-item.active .nav-link-text{\r\n  color: black;\r\n}\r\n.sidebar-mini{\r\n    text-transform: uppercase;\r\n    width: 30px;\r\n    margin-right: 15px;\r\n    text-align: center;\r\n    letter-spacing: 1px;\r\n    position: relative;\r\n    float: left;\r\n    display: initial;\r\n}\r\n</style>\r\n"]}]}