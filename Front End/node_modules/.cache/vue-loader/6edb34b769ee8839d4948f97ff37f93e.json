{"remainingRequest":"D:\\laragon\\www\\QA - Copy\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\laragon\\www\\QA - Copy\\src\\views\\Examples\\QuestionManagement\\EditQuestion.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\laragon\\www\\QA - Copy\\src\\views\\Examples\\QuestionManagement\\EditQuestion.vue","mtime":1612130201666},{"path":"D:\\laragon\\www\\QA - Copy\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\laragon\\www\\QA - Copy\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\laragon\\www\\QA - Copy\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\laragon\\www\\QA - Copy\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgQmFzZUlucHV0IGZyb20gIkAvY29tcG9uZW50cy9JbnB1dHMvQmFzZUlucHV0LnZ1ZSI7DQppbXBvcnQgeyBTZWxlY3QsIE9wdGlvbiB9IGZyb20gImVsZW1lbnQtdWkiOw0KaW1wb3J0IEh0bWxFZGl0b3IgZnJvbSAiQC9jb21wb25lbnRzL0lucHV0cy9IdG1sRWRpdG9yIjsNCmltcG9ydCBJbnB1dFRhZyBmcm9tICJ2dWUtaW5wdXQtdGFnIjsNCmltcG9ydCBtb21lbnQgZnJvbSAibW9tZW50IjsNCmltcG9ydCB7IFZ1ZUVkaXRvciB9IGZyb20gInZ1ZTItZWRpdG9yIjsNCg0KZXhwb3J0IGRlZmF1bHQgew0KICBsYXlvdXQ6ICJEYXNoYm9hcmRMYXlvdXQiLA0KICBjb21wb25lbnRzOiB7DQogICAgQmFzZUlucHV0LA0KICAgIEh0bWxFZGl0b3IsDQogICAgW1NlbGVjdC5uYW1lXTogU2VsZWN0LA0KICAgIFtPcHRpb24ubmFtZV06IE9wdGlvbiwNCiAgICBJbnB1dFRhZywNCiAgICBWdWVFZGl0b3INCiAgfSwNCiAgZGF0YSgpIHsNCiAgICByZXR1cm4gew0KICAgICAgY3VzdG9tVG9vbGJhcjogWw0KICAgICAgICBbImJvbGQiLCAiaXRhbGljIiwgInVuZGVybGluZSJdLA0KICAgICAgICBbeyBsaXN0OiAib3JkZXJlZCIgfSwgeyBsaXN0OiAiYnVsbGV0IiB9XSwNCiAgICAgICAgWyJpbWFnZSIsICJjb2RlIl0NCiAgICAgIF0sDQogICAgICB1c2VyOiBudWxsLA0KICAgICAgdGFnczI6IFtdLA0KICAgICAgcXVlc3Rpb246IHsNCiAgICAgICAgQm9keTogIiIsDQogICAgICAgIFRhZ3M6ICIiLA0KICAgICAgICBUaXRsZTogIiIsDQogICAgICAgIE93bmVyVXNlcklkOiAiIg0KICAgICAgfQ0KICAgIH07DQogIH0sDQoNCiAgY3JlYXRlZCgpIHsNCiAgICB0aGlzLmdldCgpOw0KICB9LA0KDQogIG1ldGhvZHM6IHsNCiAgICBhc3luYyBnZXQoKSB7DQogICAgICB0cnkgew0KICAgICAgICB0aGlzLnVzZXIgPSBhd2FpdCB7IC4uLnRoaXMuJHN0b3JlLmdldHRlcnMuY3VycmVudFVzZXIgfTsNCiAgICAgICAgY29uc3QgaWQgPSB0aGlzLiRyb3V0ZS5wYXJhbXMuaWQ7DQogICAgICAgIGF3YWl0IHRoaXMuJHN0b3JlLmRpc3BhdGNoKCJxdWVzdGlvbnMvZ2V0IiwgaWQpOw0KICAgICAgICB0aGlzLnF1ZXN0aW9uID0gdGhpcy4kc3RvcmUuZ2V0dGVyc1sicXVlc3Rpb25zL3F1ZXN0aW9uIl07DQoNCiAgICAgICAgdGhpcy50YWdzMiA9IHRoaXMucXVlc3Rpb24uVGFncy50b1N0cmluZygpOw0KDQogICAgICAgIHRoaXMudGFnczIgPSB0aGlzLnRhZ3MyLnNwbGl0KCI8Iik7DQogICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy50YWdzMi5sZW5ndGggLSAxOyBpKyspIHsNCiAgICAgICAgICB0aGlzLnRhZ3MyW2ldID0gdGhpcy50YWdzMltpICsgMV07DQogICAgICAgIH0NCiAgICAgICAgdGhpcy50YWdzMi5sZW5ndGggPSB0aGlzLnRhZ3MyLmxlbmd0aCAtIDE7DQoNCiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLnRhZ3MyLmxlbmd0aDsgaSsrKSB7DQogICAgICAgICAgdGhpcy50YWdzMltpXSA9ICI8IiArIHRoaXMudGFnczJbaV07DQogICAgICAgIH0NCiAgICAgICAgdGhpcy5sb2FkaW5nID0gZmFsc2U7DQoNCiAgICAgICAgLy8gY29uc3QgcXVlc3Rpb25Pd25lcklkID0gdGhpcy5xdWVzdGlvbi5Pd25lclVzZXJJZDsNCg0KICAgICAgICAvLyBhd2FpdCB0aGlzLiRzdG9yZS5kaXNwYXRjaCgidXNlcnMvZ2V0IiwgcXVlc3Rpb25Pd25lcklkKTsNCiAgICAgICAgLy8gdGhpcy5xdWVzdGlvbk93bmVyID0gYXdhaXQgeyAuLi50aGlzLiRzdG9yZS5nZXR0ZXJzWyJ1c2Vycy91c2VyIl0gfTsNCg0KICAgICAgICAvLyB0aGlzLmFza2VkVGltZUFnbyA9IG1vbWVudCh0aGlzLnF1ZXN0aW9uLkNyZWF0aW9uRGF0ZSkuZnJvbU5vdygpOw0KICAgICAgICAvLyB0aGlzLmFjdGl2aXR5VGltZUFnbyA9IG1vbWVudCh0aGlzLnF1ZXN0aW9uLkxhc3RBY3Rpdml0eURhdGUpLmZyb21Ob3coKTsNCiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgIGNvbnNvbGUubG9nKGVycm9yKTsNCiAgICAgICAgdGhpcy4kbm90aWZ5KHsNCiAgICAgICAgICB0eXBlOiAiZGFuZ2VyIiwNCiAgICAgICAgICBtZXNzYWdlOiBgT29wcywgc29tZXRoaW5nIHdlbnQgd3JvbmchYA0KICAgICAgICB9KTsNCiAgICAgIH0NCiAgICB9LA0KICAgIHRvVXBwZXJDYXNlKHYpIHsNCiAgICAgIHJldHVybiAiPCIgKyB2ICsgIj4iOw0KICAgIH0sDQogICAgZ29CYWNrKCkgew0KICAgICAgdGhpcy4kcm91dGVyLnB1c2goew0KICAgICAgICBuYW1lOiAiVmlldyBRdWVzdGlvbiIsDQogICAgICAgIHBhcmFtczogeyBpZDogdGhpcy5xdWVzdGlvbi5JZCB9DQogICAgICB9KTsNCiAgICB9LA0KDQogICAgYXN5bmMgaGFuZGxlU3VibWl0KCkgew0KICAgICAgdHJ5IHsNCiAgICAgICAgdGhpcy5xdWVzdGlvbi5UYWdzID0gdGhpcy50YWdzMi50b1N0cmluZygpLnJlcGxhY2VBbGwoIiwiLCAiIik7DQoNCiAgICAgICAgdGhpcy51c2VyID0gYXdhaXQgeyAuLi50aGlzLiRzdG9yZS5nZXR0ZXJzLmN1cnJlbnRVc2VyIH07DQogICAgICAgIHRoaXMucXVlc3Rpb24uTGFzdEVkaXRvckRpc3BsYXlOYW1lID0gdGhpcy51c2VyLkRpc3BsYXlOYW1lOw0KICAgICAgICB0aGlzLnF1ZXN0aW9uLkNsb3NlRGF0ZSA9ICIyMDExLTAxLTAxVDAyOjExOjQ2LjA4MyI7DQogICAgICAgIHRoaXMucXVlc3Rpb24uTGFzdEFjdGl2aXR5RGF0ZSA9IG1vbWVudCgpLmZvcm1hdCgpOw0KICAgICAgICB0aGlzLnF1ZXN0aW9uLkxhc3RFZGl0RGF0ZSA9IG1vbWVudCgpLmZvcm1hdCgpOw0KICAgICAgICBhd2FpdCB0aGlzLiRzdG9yZS5kaXNwYXRjaCgicXVlc3Rpb25zL3VwZGF0ZSIsIHRoaXMucXVlc3Rpb24pOw0KDQogICAgICAgIHRoaXMucXVlc3Rpb24gPSBhd2FpdCB0aGlzLiRzdG9yZS5nZXR0ZXJzWyJxdWVzdGlvbnMvcXVlc3Rpb24iXTsNCiAgICAgICAgdGhpcy4kbm90aWZ5KHsNCiAgICAgICAgICB0eXBlOiAic3VjY2VzcyIsDQogICAgICAgICAgbWVzc2FnZTogIlF1ZXN0aW9uIGVkaXRlZCBzdWNjZXNzZnVsbHkuIg0KICAgICAgICB9KTsNCiAgICAgICAgdGhpcy4kcm91dGVyLnB1c2goew0KICAgICAgICAgIG5hbWU6ICJWaWV3IFF1ZXN0aW9uIiwNCiAgICAgICAgICBwYXJhbXM6IHsgaWQ6IHRoaXMucXVlc3Rpb24uSWQgfQ0KICAgICAgICB9KTsNCiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgIGNvbnNvbGUubG9nKGVycm9yKTsNCiAgICAgICAgdGhpcy4kbm90aWZ5KHsNCiAgICAgICAgICB0eXBlOiAiZGFuZ2VyIiwNCiAgICAgICAgICBtZXNzYWdlOiAiT29wcywgc29tZXRoaW5nIHdlbnQgd3JvbmchIg0KICAgICAgICB9KTsNCiAgICAgIH0NCiAgICB9DQogIH0NCn07DQo="},{"version":3,"sources":["EditQuestion.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkfile":"EditQuestion.vue","sourceRoot":"src/views/Examples/QuestionManagement","sourcesContent":["<template>\r\n  <div class=\"container-fluid mt-5\">\r\n    <div class=\"row\">\r\n      <div class=\"col-xl-12 order-xl-1\">\r\n        <card>\r\n          <div slot=\"header\" class=\"row align-items-center\">\r\n            <div class=\"col-8\">\r\n              <h3 class=\"mb-0\">Edit Question</h3>\r\n            </div>\r\n            <div class=\"col-4 text-right\">\r\n              <base-button\r\n                @click=\"goBack\"\r\n                type=\"button\"\r\n                class=\"btn btn-sm btn-primary\"\r\n                >Go Back</base-button\r\n              >\r\n            </div>\r\n          </div>\r\n          <div class=\"card-body\">\r\n            <form ref=\"profile_form\" @submit.prevent=\"handleSubmit\">\r\n              <label for=\"Title\" style=\"font-weight: 700; font-size:19px\"\r\n                >Title</label\r\n              >\r\n              <p\r\n                style=\"color: darkgray;margin-top: -10px;margin-bottom: 10px;font-style: italic;\"\r\n              >\r\n                Be specific and imagine youâ€™re asking a question to another\r\n                person\r\n              </p>\r\n              <base-input\r\n                name=\"title\"\r\n                type=\"text\"\r\n                maxlength=\"300\"\r\n                placeholder=\"e.g. Is there an R function for finding the index of an element in a vector?\"\r\n                autocomplete=\"off\"\r\n                v-model=\"question.Title\"\r\n              />\r\n\r\n              <label for=\"Body\" style=\"font-weight: 700; font-size:19px\"\r\n                >Body</label\r\n              >\r\n              <p\r\n                style=\"color: darkgray;margin-top: -10px;margin-bottom: 10px;font-style: italic;\"\r\n              >\r\n                Include all the information someone would need to answer your\r\n                question\r\n              </p>\r\n              <!-- <html-editor v-model=\"question.Body\" name=\"editor\" /> -->\r\n              <vue-editor\r\n                v-model=\"question.Body\"\r\n                :editorToolbar=\"customToolbar\"\r\n              ></vue-editor>\r\n              <label for=\"Title\" style=\"font-weight: 700; font-size:19px\"\r\n                >Tags</label\r\n              >\r\n              <p\r\n                style=\"color: darkgray;margin-top: -10px;margin-bottom: 10px;font-style: italic;\"\r\n              >\r\n                Add up to 5 tags to describe what your question is about\r\n              </p>\r\n              <input-tag\r\n                v-model=\"tags2\"\r\n                :add-tag-on-keys=\"[13, 32]\"\r\n                placeholder=\"e.g. (javascript, api)\"\r\n                :before-adding=\"toUpperCase\"\r\n              ></input-tag>\r\n\r\n              <base-button\r\n                type=\"button\"\r\n                class=\"btn btn-sm btn-primary mt-4 ml-0\"\r\n                native-type=\"submit\"\r\n              >\r\n                Edit your question\r\n              </base-button>\r\n            </form>\r\n          </div>\r\n        </card>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport BaseInput from \"@/components/Inputs/BaseInput.vue\";\r\nimport { Select, Option } from \"element-ui\";\r\nimport HtmlEditor from \"@/components/Inputs/HtmlEditor\";\r\nimport InputTag from \"vue-input-tag\";\r\nimport moment from \"moment\";\r\nimport { VueEditor } from \"vue2-editor\";\r\n\r\nexport default {\r\n  layout: \"DashboardLayout\",\r\n  components: {\r\n    BaseInput,\r\n    HtmlEditor,\r\n    [Select.name]: Select,\r\n    [Option.name]: Option,\r\n    InputTag,\r\n    VueEditor\r\n  },\r\n  data() {\r\n    return {\r\n      customToolbar: [\r\n        [\"bold\", \"italic\", \"underline\"],\r\n        [{ list: \"ordered\" }, { list: \"bullet\" }],\r\n        [\"image\", \"code\"]\r\n      ],\r\n      user: null,\r\n      tags2: [],\r\n      question: {\r\n        Body: \"\",\r\n        Tags: \"\",\r\n        Title: \"\",\r\n        OwnerUserId: \"\"\r\n      }\r\n    };\r\n  },\r\n\r\n  created() {\r\n    this.get();\r\n  },\r\n\r\n  methods: {\r\n    async get() {\r\n      try {\r\n        this.user = await { ...this.$store.getters.currentUser };\r\n        const id = this.$route.params.id;\r\n        await this.$store.dispatch(\"questions/get\", id);\r\n        this.question = this.$store.getters[\"questions/question\"];\r\n\r\n        this.tags2 = this.question.Tags.toString();\r\n\r\n        this.tags2 = this.tags2.split(\"<\");\r\n        for (var i = 0; i < this.tags2.length - 1; i++) {\r\n          this.tags2[i] = this.tags2[i + 1];\r\n        }\r\n        this.tags2.length = this.tags2.length - 1;\r\n\r\n        for (var i = 0; i < this.tags2.length; i++) {\r\n          this.tags2[i] = \"<\" + this.tags2[i];\r\n        }\r\n        this.loading = false;\r\n\r\n        // const questionOwnerId = this.question.OwnerUserId;\r\n\r\n        // await this.$store.dispatch(\"users/get\", questionOwnerId);\r\n        // this.questionOwner = await { ...this.$store.getters[\"users/user\"] };\r\n\r\n        // this.askedTimeAgo = moment(this.question.CreationDate).fromNow();\r\n        // this.activityTimeAgo = moment(this.question.LastActivityDate).fromNow();\r\n      } catch (error) {\r\n        console.log(error);\r\n        this.$notify({\r\n          type: \"danger\",\r\n          message: `Oops, something went wrong!`\r\n        });\r\n      }\r\n    },\r\n    toUpperCase(v) {\r\n      return \"<\" + v + \">\";\r\n    },\r\n    goBack() {\r\n      this.$router.push({\r\n        name: \"View Question\",\r\n        params: { id: this.question.Id }\r\n      });\r\n    },\r\n\r\n    async handleSubmit() {\r\n      try {\r\n        this.question.Tags = this.tags2.toString().replaceAll(\",\", \"\");\r\n\r\n        this.user = await { ...this.$store.getters.currentUser };\r\n        this.question.LastEditorDisplayName = this.user.DisplayName;\r\n        this.question.CloseDate = \"2011-01-01T02:11:46.083\";\r\n        this.question.LastActivityDate = moment().format();\r\n        this.question.LastEditDate = moment().format();\r\n        await this.$store.dispatch(\"questions/update\", this.question);\r\n\r\n        this.question = await this.$store.getters[\"questions/question\"];\r\n        this.$notify({\r\n          type: \"success\",\r\n          message: \"Question edited successfully.\"\r\n        });\r\n        this.$router.push({\r\n          name: \"View Question\",\r\n          params: { id: this.question.Id }\r\n        });\r\n      } catch (error) {\r\n        console.log(error);\r\n        this.$notify({\r\n          type: \"danger\",\r\n          message: \"Oops, something went wrong!\"\r\n        });\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n"]}]}