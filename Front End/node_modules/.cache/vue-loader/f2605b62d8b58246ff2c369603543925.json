{"remainingRequest":"D:\\laragon\\www\\QA\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\laragon\\www\\QA\\src\\views\\Components\\Cards.vue?vue&type=template&id=53c45244&","dependencies":[{"path":"D:\\laragon\\www\\QA\\src\\views\\Components\\Cards.vue","mtime":1609358850026},{"path":"D:\\laragon\\www\\QA\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\laragon\\www\\QA\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\laragon\\www\\QA\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\laragon\\www\\QA\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxkaXY+CiAgPGJhc2UtaGVhZGVyIGNsYXNzPSJwYi02Ij4KICAgIDxkaXYgY2xhc3M9InJvdyBhbGlnbi1pdGVtcy1jZW50ZXIgcHktNCI+CiAgICAgIDxkaXYgY2xhc3M9ImNvbC1sZy02IGNvbC03Ij4KICAgICAgICA8aDYgY2xhc3M9ImgyIHRleHQtd2hpdGUgZC1pbmxpbmUtYmxvY2sgbWItMCI+e3skcm91dGUubmFtZX19PC9oNj4KICAgICAgICA8bmF2IGFyaWEtbGFiZWw9ImJyZWFkY3J1bWIiIGNsYXNzPSJkLW5vbmUgZC1tZC1pbmxpbmUtYmxvY2sgbWwtbWQtNCI+CiAgICAgICAgICA8cm91dGUtYnJlYWRjcnVtYi8+CiAgICAgICAgPC9uYXY+CiAgICAgIDwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJjb2wtbGctNiBjb2wtNSB0ZXh0LXJpZ2h0Ij4KICAgICAgICA8YmFzZS1idXR0b24gc2l6ZT0ic20iIHR5cGU9Im5ldXRyYWwiPk5ldzwvYmFzZS1idXR0b24+CiAgICAgICAgPGJhc2UtYnV0dG9uIHNpemU9InNtIiB0eXBlPSJuZXV0cmFsIj5GaWx0ZXJzPC9iYXNlLWJ1dHRvbj4KICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KCiAgICA8IS0tIENhcmQgc3RhdHMgLS0+CiAgICA8ZGl2IGNsYXNzPSJyb3ciPgogICAgICA8ZGl2IGNsYXNzPSJjb2wteGwtMyBjb2wtbWQtNiI+CiAgICAgICAgPHN0YXRzLWNhcmQgdGl0bGU9IlRvdGFsIHRyYWZmaWMiCiAgICAgICAgICAgICAgICAgICAgdHlwZT0iZ3JhZGllbnQtcmVkIgogICAgICAgICAgICAgICAgICAgIHN1Yi10aXRsZT0iMzUwLDg5NyIKICAgICAgICAgICAgICAgICAgICBpY29uPSJuaSBuaS1hY3RpdmUtNDAiPgoKICAgICAgICAgIDx0ZW1wbGF0ZSBzbG90PSJmb290ZXIiPgogICAgICAgICAgICA8c3BhbiBjbGFzcz0idGV4dC1zdWNjZXNzIG1yLTIiPjxpIGNsYXNzPSJmYSBmYS1hcnJvdy11cCI+PC9pPiAzLjQ4JTwvc3Bhbj4KICAgICAgICAgICAgPHNwYW4gY2xhc3M9InRleHQtbm93cmFwIj5TaW5jZSBsYXN0IG1vbnRoPC9zcGFuPgogICAgICAgICAgPC90ZW1wbGF0ZT4KICAgICAgICA8L3N0YXRzLWNhcmQ+CiAgICAgIDwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJjb2wteGwtMyBjb2wtbWQtNiI+CiAgICAgICAgPHN0YXRzLWNhcmQgdGl0bGU9IlRvdGFsIHRyYWZmaWMiCiAgICAgICAgICAgICAgICAgICAgdHlwZT0iZ3JhZGllbnQtb3JhbmdlIgogICAgICAgICAgICAgICAgICAgIHN1Yi10aXRsZT0iMiwzNTYiCiAgICAgICAgICAgICAgICAgICAgaWNvbj0ibmkgbmktY2hhcnQtcGllLTM1Ij4KCiAgICAgICAgICA8dGVtcGxhdGUgc2xvdD0iZm9vdGVyIj4KICAgICAgICAgICAgPHNwYW4gY2xhc3M9InRleHQtc3VjY2VzcyBtci0yIj48aSBjbGFzcz0iZmEgZmEtYXJyb3ctdXAiPjwvaT4gMTIuMTglPC9zcGFuPgogICAgICAgICAgICA8c3BhbiBjbGFzcz0idGV4dC1ub3dyYXAiPlNpbmNlIGxhc3QgbW9udGg8L3NwYW4+CiAgICAgICAgICA8L3RlbXBsYXRlPgogICAgICAgIDwvc3RhdHMtY2FyZD4KICAgICAgPC9kaXY+CiAgICAgIDxkaXYgY2xhc3M9ImNvbC14bC0zIGNvbC1tZC02Ij4KICAgICAgICA8c3RhdHMtY2FyZCB0aXRsZT0iU2FsZXMiCiAgICAgICAgICAgICAgICAgICAgdHlwZT0iZ3JhZGllbnQtZ3JlZW4iCiAgICAgICAgICAgICAgICAgICAgc3ViLXRpdGxlPSI5MjQiCiAgICAgICAgICAgICAgICAgICAgaWNvbj0ibmkgbmktbW9uZXktY29pbnMiPgoKICAgICAgICAgIDx0ZW1wbGF0ZSBzbG90PSJmb290ZXIiPgogICAgICAgICAgICA8c3BhbiBjbGFzcz0idGV4dC1kYW5nZXIgbXItMiI+PGkgY2xhc3M9ImZhIGZhLWFycm93LWRvd24iPjwvaT4gNS43MiU8L3NwYW4+CiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ0ZXh0LW5vd3JhcCI+U2luY2UgbGFzdCBtb250aDwvc3Bhbj4KICAgICAgICAgIDwvdGVtcGxhdGU+CiAgICAgICAgPC9zdGF0cy1jYXJkPgoKICAgICAgPC9kaXY+CiAgICAgIDxkaXYgY2xhc3M9ImNvbC14bC0zIGNvbC1tZC02Ij4KICAgICAgICA8c3RhdHMtY2FyZCB0aXRsZT0iUGVyZm9ybWFuY2UiCiAgICAgICAgICAgICAgICAgICAgdHlwZT0iZ3JhZGllbnQtaW5mbyIKICAgICAgICAgICAgICAgICAgICBzdWItdGl0bGU9IjQ5LDY1JSIKICAgICAgICAgICAgICAgICAgICBpY29uPSJuaSBuaS1jaGFydC1iYXItMzIiPgogICAgICAgICAgPHRlbXBsYXRlIHNsb3Q9ImZvb3RlciI+CiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ0ZXh0LXN1Y2Nlc3MgbXItMiI+PGkgY2xhc3M9ImZhIGZhLWFycm93LXVwIj48L2k+IDU0LjglPC9zcGFuPgogICAgICAgICAgICA8c3BhbiBjbGFzcz0idGV4dC1ub3dyYXAiPlNpbmNlIGxhc3QgbW9udGg8L3NwYW4+CiAgICAgICAgICA8L3RlbXBsYXRlPgogICAgICAgIDwvc3RhdHMtY2FyZD4KICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICA8L2Jhc2UtaGVhZGVyPgoKICA8ZGl2IGNsYXNzPSJjb250YWluZXItZmx1aWQgbXQtLTYiPgogICAgPGRpdiBjbGFzcz0icm93IGNhcmQtd3JhcHBlciI+CiAgICAgIDxkaXYgY2xhc3M9ImNvbC1sZy00Ij4KICAgICAgICA8IS0tIEJhc2ljIHdpdGggbGlzdCBncm91cCAtLT4KICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkIj4KICAgICAgICAgIDwhLS0gQ2FyZCBpbWFnZSAtLT4KICAgICAgICAgIDxpbWcgY2xhc3M9ImNhcmQtaW1nLXRvcCIgc3JjPSIvaW1nL3RoZW1lL2ltZy0xLTEwMDB4NjAwLmpwZyIgYWx0PSJJbWFnZSBwbGFjZWhvbGRlciI+CiAgICAgICAgICA8IS0tIExpc3QgZ3JvdXAgLS0+CiAgICAgICAgICA8dWwgY2xhc3M9Imxpc3QtZ3JvdXAgbGlzdC1ncm91cC1mbHVzaCI+CiAgICAgICAgICAgIDxsaSBjbGFzcz0ibGlzdC1ncm91cC1pdGVtIj5DcmFzIGp1c3RvIG9kaW88L2xpPgogICAgICAgICAgICA8bGkgY2xhc3M9Imxpc3QtZ3JvdXAtaXRlbSI+RGFwaWJ1cyBhYyBmYWNpbGlzaXMgaW48L2xpPgogICAgICAgICAgICA8bGkgY2xhc3M9Imxpc3QtZ3JvdXAtaXRlbSI+VmVzdGlidWx1bSBhdCBlcm9zPC9saT4KICAgICAgICAgIDwvdWw+CiAgICAgICAgICA8IS0tIENhcmQgYm9keSAtLT4KICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQtYm9keSI+CiAgICAgICAgICAgIDxoMyBjbGFzcz0iY2FyZC10aXRsZSBtYi0zIj5DYXJkIHRpdGxlPC9oMz4KICAgICAgICAgICAgPHAgY2xhc3M9ImNhcmQtdGV4dCBtYi00Ij5Mb3JlbSBpcHN1bSBkb2xvciBzaXQgYW1ldCwgY29uc2VjdGV0dXIgYWRpcGlzaWNpbmcgZWxpdC4gRmFjaWxpcyBub24gZG9sb3JlIGVzdAogICAgICAgICAgICAgIGZ1Z2Egbm9iaXMgaXBzdW0gaWxsdW0gZWxpZ2VuZGkgbmVtbyBpdXJlIHJlcGVsbGF0LCBzb2x1dGEsIG9wdGlvIG1pbnVzIHV0IHJlaWNpZW5kaXMgdm9sdXB0YXRlcyBlbmltCiAgICAgICAgICAgICAgaW1wZWRpdCB2ZXJpdGF0aXMgb2ZmaWNpaXMuPC9wPgogICAgICAgICAgICA8YmFzZS1idXR0b24gdHlwZT0icHJpbWFyeSI+R28gc29tZXdoZXJlPC9iYXNlLWJ1dHRvbj4KICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICAgIDwhLS0gQmFzaWMgd2l0aCBjYXJkIHRpdGxlIC0tPgogICAgICAgIDxjYXJkPgogICAgICAgICAgPCEtLSBDYXJkIGJvZHkgLS0+CiAgICAgICAgICA8aDMgY2xhc3M9ImNhcmQtdGl0bGUgbWItMyI+Q2FyZCB0aXRsZTwvaDM+CiAgICAgICAgICA8cCBjbGFzcz0iY2FyZC10ZXh0IG1iLTQiPkxvcmVtIGlwc3VtIGRvbG9yIHNpdCBhbWV0LCBjb25zZWN0ZXR1ciBhZGlwaXNpY2luZyBlbGl0LiBGYWNpbGlzIG5vbiBkb2xvcmUgZXN0CiAgICAgICAgICAgIGZ1Z2Egbm9iaXMgaXBzdW0gaWxsdW0gZWxpZ2VuZGkgbmVtbyBpdXJlIHJlcGVsbGF0LCBzb2x1dGEsIG9wdGlvIG1pbnVzIHV0IHJlaWNpZW5kaXMgdm9sdXB0YXRlcyBlbmltCiAgICAgICAgICAgIGltcGVkaXQgdmVyaXRhdGlzIG9mZmljaWlzLjwvcD4KICAgICAgICAgIDxiYXNlLWJ1dHRvbiB0eXBlPSJwcmltYXJ5Ij5HbyBzb21ld2hlcmU8L2Jhc2UtYnV0dG9uPgogICAgICAgIDwvY2FyZD4KCiAgICAgICAgPCEtLVByb2ZpbGUgY2FyZC0tPgogICAgICAgIDxkaXYgY2xhc3M9ImNhcmQgY2FyZC1wcm9maWxlIj4KICAgICAgICAgIDxpbWcgc3JjPSIvaW1nL3RoZW1lL2ltZy0xLTEwMDB4NjAwLmpwZyIgYWx0PSJJbWFnZSBwbGFjZWhvbGRlciIgY2xhc3M9ImNhcmQtaW1nLXRvcCI+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3cganVzdGlmeS1jb250ZW50LWNlbnRlciI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1sZy0zIG9yZGVyLWxnLTIiPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQtcHJvZmlsZS1pbWFnZSI+CiAgICAgICAgICAgICAgICA8YSBocmVmPSIjIj4KICAgICAgICAgICAgICAgICAgPGltZyBzcmM9Ii9pbWcvdGhlbWUvdGVhbS00LmpwZyIgY2xhc3M9InJvdW5kZWQtY2lyY2xlIj4KICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQtaGVhZGVyIHRleHQtY2VudGVyIGJvcmRlci0wIHB0LTggcHQtbWQtNCBwYi0wIHBiLW1kLTQiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJkLWZsZXgganVzdGlmeS1jb250ZW50LWJldHdlZW4iPgogICAgICAgICAgICAgIDxiYXNlLWJ1dHRvbiB0eXBlPSJpbmZvIiBzaXplPSJzbSIgY2xhc3M9Im1yLTQiPkNvbm5lY3Q8L2Jhc2UtYnV0dG9uPgogICAgICAgICAgICAgIDxiYXNlLWJ1dHRvbiB0eXBlPSJkZWZhdWx0IiBzaXplPSJzbSIgY2xhc3M9ImZsb2F0LXJpZ2h0Ij5NZXNzYWdlPC9iYXNlLWJ1dHRvbj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQtYm9keSBwdC0wIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icm93Ij4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2FyZC1wcm9maWxlLXN0YXRzIGQtZmxleCBqdXN0aWZ5LWNvbnRlbnQtY2VudGVyIj4KICAgICAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iaGVhZGluZyI+MjI8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImRlc2NyaXB0aW9uIj5GcmllbmRzPC9zcGFuPgogICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iaGVhZGluZyI+MTA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImRlc2NyaXB0aW9uIj5QaG90b3M8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJoZWFkaW5nIj44OTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZGVzY3JpcHRpb24iPkNvbW1lbnRzPC9zcGFuPgogICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0idGV4dC1jZW50ZXIiPgogICAgICAgICAgICAgIDxoNSBjbGFzcz0iaDMiPgogICAgICAgICAgICAgICAgSmVzc2ljYSBKb25lczxzcGFuIGNsYXNzPSJmb250LXdlaWdodC1saWdodCI+LCAyNzwvc3Bhbj4KICAgICAgICAgICAgICA8L2g1PgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9Img1IGZvbnQtd2VpZ2h0LTMwMCI+CiAgICAgICAgICAgICAgICA8aSBjbGFzcz0ibmkgbG9jYXRpb25fcGluIG1yLTIiPjwvaT5CdWNoYXJlc3QsIFJvbWFuaWEKICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgPC9kaXY+CgogICAgICA8ZGl2IGNsYXNzPSJjb2wtbGctNCI+CiAgICAgICAgPCEtLSBCYXNpYyB3aXRoIGNhcmQgaGVhZGVyIC0tPgogICAgICAgIDxjYXJkPgogICAgICAgICAgPCEtLSBDYXJkIGhlYWRlciAtLT4KICAgICAgICAgIDxoNSBzbG90PSJoZWFkZXIiIGNsYXNzPSJoMyBtYi0wIj5DYXJkIHRpdGxlPC9oNT4KICAgICAgICAgIDwhLS0gQ2FyZCBib2R5IC0tPgogICAgICAgICAgPHAgY2xhc3M9ImNhcmQtdGV4dCBtYi00Ij5Mb3JlbSBpcHN1bSBkb2xvciBzaXQgYW1ldCwgY29uc2VjdGV0dXIgYWRpcGlzaWNpbmcgZWxpdC4gRmFjaWxpcyBub24gZG9sb3JlIGVzdAogICAgICAgICAgICBmdWdhIG5vYmlzIGlwc3VtIGlsbHVtIGVsaWdlbmRpIG5lbW8gaXVyZSByZXBlbGxhdCwgc29sdXRhLCBvcHRpbyBtaW51cyB1dCByZWljaWVuZGlzIHZvbHVwdGF0ZXMgZW5pbQogICAgICAgICAgICBpbXBlZGl0IHZlcml0YXRpcyBvZmZpY2lpcy48L3A+CiAgICAgICAgICA8YmFzZS1idXR0b24gdHlwZT0icHJpbWFyeSIgY2xhc3M9ImJ0biBidG4tcHJpbWFyeSI+R28gc29tZXdoZXJlPC9iYXNlLWJ1dHRvbj4KICAgICAgICA8L2NhcmQ+CgogICAgICAgIDwhLS0gQ29udGFjdCBjYXJkIC0tPgogICAgICAgIDxjYXJkPgogICAgICAgICAgPCEtLSBDYXJkIGJvZHkgLS0+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3cgYWxpZ24taXRlbXMtY2VudGVyIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLWF1dG8iPgogICAgICAgICAgICAgIDwhLS0gQXZhdGFyIC0tPgogICAgICAgICAgICAgIDxhIGhyZWY9IiMiIGNsYXNzPSJhdmF0YXIgYXZhdGFyLXhsIHJvdW5kZWQtY2lyY2xlIj4KICAgICAgICAgICAgICAgIDxpbWcgYWx0PSJJbWFnZSBwbGFjZWhvbGRlciIgc3JjPSIvaW1nL3RoZW1lL3RlYW0tMi5qcGciPgogICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbCBtbC0tMiI+CiAgICAgICAgICAgICAgPGg0IGNsYXNzPSJtYi0wIj4KICAgICAgICAgICAgICAgIDxhIGhyZWY9IiMhIj5Kb2huIFNub3c8L2E+CiAgICAgICAgICAgICAgPC9oND4KICAgICAgICAgICAgICA8cCBjbGFzcz0idGV4dC1zbSB0ZXh0LW11dGVkIG1iLTAiPldvcmtpbmcgcmVtb3RlbGV5PC9wPgogICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ0ZXh0LXN1Y2Nlc3MiPuKXjyA8L3NwYW4+CiAgICAgICAgICAgICAgPHNtYWxsPkFjdGl2ZTwvc21hbGw+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtYXV0byI+CiAgICAgICAgICAgICAgPGJhc2UtYnV0dG9uIHR5cGU9InByaW1hcnkiIHNpemU9InNtIj5BZGQ8L2Jhc2UtYnV0dG9uPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvY2FyZD4KCiAgICAgICAgPCEtLSBUZWFtIG1lbWJlciBjYXJkIC0tPgogICAgICAgIDxjYXJkPgogICAgICAgICAgPCEtLSBDYXJkIGJvZHkgLS0+CiAgICAgICAgICA8YSBocmVmPSIjISI+CiAgICAgICAgICAgIDxpbWcgc3JjPSIvaW1nL3RoZW1lL3RlYW0tMS5qcGciCiAgICAgICAgICAgICAgICAgY2xhc3M9InJvdW5kZWQtY2lyY2xlIGltZy1jZW50ZXIgaW1nLWZsdWlkIHNoYWRvdyBzaGFkb3ctbGctLWhvdmVyIiBzdHlsZT0id2lkdGg6IDE0MHB4OyI+CiAgICAgICAgICA8L2E+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJwdC00IHRleHQtY2VudGVyIj4KICAgICAgICAgICAgPGg1IGNsYXNzPSJoMyB0aXRsZSI+CiAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImQtYmxvY2sgbWItMSI+UnlhbiBUb21wc29uPC9zcGFuPgogICAgICAgICAgICAgIDxzbWFsbCBjbGFzcz0iaDQgZm9udC13ZWlnaHQtbGlnaHQgdGV4dC1tdXRlZCI+V2ViIERldmVsb3Blcjwvc21hbGw+CiAgICAgICAgICAgIDwvaDU+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9Im10LTMiPgogICAgICAgICAgICAgIDxhIGhyZWY9IiMiIGNsYXNzPSJidG4gYnRuLXR3aXR0ZXIgYnRuLWljb24tb25seSByb3VuZGVkLWNpcmNsZSI+CiAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLXR3aXR0ZXIiPjwvaT4KICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgPGEgaHJlZj0iIyIgY2xhc3M9ImJ0biBidG4tZmFjZWJvb2sgYnRuLWljb24tb25seSByb3VuZGVkLWNpcmNsZSI+CiAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWZhY2Vib29rIj48L2k+CiAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgIDxhIGhyZWY9IiMiIGNsYXNzPSJidG4gYnRuLWRyaWJiYmxlIGJ0bi1pY29uLW9ubHkgcm91bmRlZC1jaXJjbGUiPgogICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhYiBmYS1kcmliYmJsZSI+PC9pPgogICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2NhcmQ+CiAgICAgICAgPCEtLSBJbWFnZS1UZXh0IGNhcmQgLS0+CiAgICAgICAgPGRpdiBjbGFzcz0iY2FyZCI+CiAgICAgICAgICA8IS0tIENhcmQgaW1hZ2UgLS0+CiAgICAgICAgICA8aW1nIGNsYXNzPSJjYXJkLWltZy10b3AiIHNyYz0iL2ltZy90aGVtZS9pbWctMS0xMDAweDkwMC5qcGciIGFsdD0iSW1hZ2UgcGxhY2Vob2xkZXIiPgogICAgICAgICAgPCEtLSBDYXJkIGJvZHkgLS0+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkLWJvZHkiPgogICAgICAgICAgICA8aDUgY2xhc3M9ImgyIGNhcmQtdGl0bGUgbWItMCI+R2V0IHN0YXJ0ZWQgd2l0aCBBcmdvbjwvaDU+CiAgICAgICAgICAgIDxzbWFsbCBjbGFzcz0idGV4dC1tdXRlZCI+YnkgSm9obiBTbm93IG9uIE9jdCAyOXRoIGF0IDEwOjIzIEFNPC9zbWFsbD4KICAgICAgICAgICAgPHAgY2xhc3M9ImNhcmQtdGV4dCBtdC00Ij5BcmdvbiBpcyBhIGdyZWF0IGZyZWUgVUkgcGFja2FnZSBiYXNlZCBvbiBCb290c3RyYXAgNCB0aGF0IGluY2x1ZGVzIHRoZSBtb3N0CiAgICAgICAgICAgICAgaW1wb3J0YW50IGNvbXBvbmVudHMgYW5kIGZlYXR1cmVzLjwvcD4KICAgICAgICAgICAgPGEgaHJlZj0iIyEiIGNsYXNzPSJidG4gYnRuLWxpbmsgcHgtMCI+VmlldyBhcnRpY2xlPC9hPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CgogICAgICAgIDwhLS0gQmFzaWMgd2l0aCBibG9ja3F1b3RlIC0tPgogICAgICAgIDxjYXJkIGdyYWRpZW50PSJkZWZhdWx0Ij4KICAgICAgICAgIDxoMyBjbGFzcz0iY2FyZC10aXRsZSB0ZXh0LXdoaXRlIj5UZXN0aW1vbmlhbDwvaDM+CiAgICAgICAgICA8YmxvY2txdW90ZSBjbGFzcz0iYmxvY2txdW90ZSB0ZXh0LXdoaXRlIG1iLTAiPgogICAgICAgICAgICA8cD5Mb3JlbSBpcHN1bSBkb2xvciBzaXQgYW1ldCwgY29uc2VjdGV0dXIgYWRpcGlzY2luZyBlbGl0LiBJbnRlZ2VyIHBvc3VlcmUgZXJhdCBhIGFudGUuPC9wPgogICAgICAgICAgICA8Zm9vdGVyIGNsYXNzPSJibG9ja3F1b3RlLWZvb3RlciB0ZXh0LWRhbmdlciI+U29tZW9uZSBmYW1vdXMgaW4gPGNpdGUgdGl0bGU9IlNvdXJjZSBUaXRsZSI+U291cmNlCiAgICAgICAgICAgICAgVGl0bGU8L2NpdGU+PC9mb290ZXI+CiAgICAgICAgICA8L2Jsb2NrcXVvdGU+CiAgICAgICAgPC9jYXJkPgoKCiAgICAgIDwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJjb2wtbGctNCI+CiAgICAgICAgPCEtLSBQcmljaW5nIC0tPgogICAgICAgIDxjYXJkIGdyYWRpZW50PSJzdWNjZXNzIgogICAgICAgICAgICAgIGhlYWRlci1jbGFzc2VzPSJiZy10cmFuc3BhcmVudCIKICAgICAgICAgICAgICBmb290ZXItY2xhc3Nlcz0iYmctdHJhbnNwYXJlbnQiCiAgICAgICAgICAgICAgYm9keS1jbGFzc2VzPSJweC1sZy03IgogICAgICAgICAgICAgIGNsYXNzPSJjYXJkLXByaWNpbmcgYm9yZGVyLTAgdGV4dC1jZW50ZXIgbWItNCI+CiAgICAgICAgICA8IS0tSGVhZGVyLS0+CiAgICAgICAgICA8aDQgc2xvdD0iaGVhZGVyIiBjbGFzcz0idGV4dC11cHBlcmNhc2UgbHMtMSB0ZXh0LXdoaXRlIHB5LTMgbWItMCI+QnJhdm8gcGFjazwvaDQ+CiAgICAgICAgICA8IS0tQ2FyZCBCb2R5LS0+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJkaXNwbGF5LTIgdGV4dC13aGl0ZSI+JDQ5PC9kaXY+CiAgICAgICAgICA8c3BhbiBjbGFzcz0iIHRleHQtd2hpdGUiPnBlciBhcHBsaWNhdGlvbjwvc3Bhbj4KICAgICAgICAgIDx1bCBjbGFzcz0ibGlzdC11bnN0eWxlZCBteS00Ij4KICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImQtZmxleCBhbGlnbi1pdGVtcy1jZW50ZXIiPgogICAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaWNvbiBpY29uLXhzIGljb24tc2hhcGUgYmctd2hpdGUgc2hhZG93IHJvdW5kZWQtY2lyY2xlIj4KICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFzIGZhLXRlcm1pbmFsIj48L2k+CiAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icGwtMiB0ZXh0LXNtIHRleHQtd2hpdGUiPkNvbXBsZXRlIGRvY3VtZW50YXRpb248L3NwYW4+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImQtZmxleCBhbGlnbi1pdGVtcy1jZW50ZXIiPgogICAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaWNvbiBpY29uLXhzIGljb24tc2hhcGUgYmctd2hpdGUgc2hhZG93IHJvdW5kZWQtY2lyY2xlIj4KICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFzIGZhLXBlbi1mYW5jeSI+PC9pPgogICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InBsLTIgdGV4dC1zbSB0ZXh0LXdoaXRlIj5Xb3JraW5nIG1hdGVyaWFscyBpbiBTa2V0Y2g8L3NwYW4+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImQtZmxleCBhbGlnbi1pdGVtcy1jZW50ZXIiPgogICAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaWNvbiBpY29uLXhzIGljb24tc2hhcGUgYmctd2hpdGUgc2hhZG93IHJvdW5kZWQtY2lyY2xlIj4KICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFzIGZhLWhkZCI+PC9pPgogICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InBsLTIgdGV4dC1zbSB0ZXh0LXdoaXRlIj4yR0IgY2xvdWQgc3RvcmFnZTwvc3Bhbj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2xpPgogICAgICAgICAgPC91bD4KICAgICAgICAgIDxiYXNlLWJ1dHRvbiB0eXBlPSJwcmltYXJ5IiBjbGFzcz0ibWItMyI+U3RhcnQgZnJlZSB0cmlhbDwvYmFzZS1idXR0b24+CiAgICAgICAgICA8IS0tRm9vdGVyLS0+CiAgICAgICAgICA8YSBzbG90PSJmb290ZXIiIGhyZWY9IiMhIiBjbGFzcz0iIHRleHQtd2hpdGUiPlJlcXVlc3QgYSBkZW1vPC9hPgogICAgICAgIDwvY2FyZD4KICAgICAgICA8IS0tIEJhc2ljIHdpdGggYWN0aW9uIGJ1dHRvbiAtLT4KICAgICAgICA8Y2FyZD4KICAgICAgICAgIDwhLS0gQ2FyZCBoZWFkZXIgLS0+CiAgICAgICAgICA8ZGl2IHNsb3Q9ImhlYWRlciIgY2xhc3M9InJvdyBhbGlnbi1pdGVtcy1jZW50ZXIiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtOCI+CiAgICAgICAgICAgICAgPCEtLSBUaXRsZSAtLT4KICAgICAgICAgICAgICA8aDUgY2xhc3M9ImgzIG1iLTAiPkNhcmQgdGl0bGU8L2g1PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLTQgdGV4dC1yaWdodCI+CiAgICAgICAgICAgICAgPGEgaHJlZj0iIyEiIGNsYXNzPSJidG4gYnRuLXNtIGJ0bi1uZXV0cmFsIj5BY3Rpb248L2E+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8IS0tIENhcmQgYm9keSAtLT4KICAgICAgICAgIDxwIGNsYXNzPSJjYXJkLXRleHQgbWItNCI+TG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQsIGNvbnNlY3RldHVyIGFkaXBpc2ljaW5nIGVsaXQuIEZhY2lsaXMgbm9uIGRvbG9yZSBlc3QKICAgICAgICAgICAgZnVnYSBub2JpcyBpcHN1bSBpbGx1bSBlbGlnZW5kaSBuZW1vIGl1cmUgcmVwZWxsYXQsIHNvbHV0YSwgb3B0aW8gbWludXMgdXQgcmVpY2llbmRpcyB2b2x1cHRhdGVzIGVuaW0KICAgICAgICAgICAgaW1wZWRpdCB2ZXJpdGF0aXMgb2ZmaWNpaXMuPC9wPgogICAgICAgICAgPGEgaHJlZj0iIyIgY2xhc3M9ImJ0biBidG4tcHJpbWFyeSI+R28gc29tZXdoZXJlPC9hPgogICAgICAgIDwvY2FyZD4KICAgICAgICA8IS0tIEltYWdlIG92ZXJsYXkgLS0+CiAgICAgICAgPGRpdiBjbGFzcz0iY2FyZCBiZy1kYXJrIHRleHQtd2hpdGUgYm9yZGVyLTAiPgogICAgICAgICAgPGltZyBjbGFzcz0iY2FyZC1pbWciIHNyYz0iL2ltZy90aGVtZS9pbWctMS0xMDAweDYwMC5qcGciIGFsdD0iQ2FyZCBpbWFnZSI+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkLWltZy1vdmVybGF5IGQtZmxleCBhbGlnbi1pdGVtcy1jZW50ZXIiPgogICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICAgIDxoNSBjbGFzcz0iaDIgY2FyZC10aXRsZSB0ZXh0LXdoaXRlIG1iLTIiPkNhcmQgdGl0bGU8L2g1PgogICAgICAgICAgICAgIDxwIGNsYXNzPSJjYXJkLXRleHQiPlRoaXMgaXMgYSB3aWRlciBjYXJkIHdpdGggc3VwcG9ydGluZyB0ZXh0IGJlbG93IGFzIGEgbmF0dXJhbCBsZWFkLWluIHRvIGFkZGl0aW9uYWwKICAgICAgICAgICAgICAgIGNvbnRlbnQuIFRoaXMgY29udGVudCBpcyBhIGxpdHRsZSBiaXQgbG9uZ2VyLjwvcD4KICAgICAgICAgICAgICA8cCBjbGFzcz0iY2FyZC10ZXh0IHRleHQtc20gZm9udC13ZWlnaHQtYm9sZCI+TGFzdCB1cGRhdGVkIDMgbWlucyBhZ288L3A+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPCEtLSBQcmljaW5nIGNhcmQgLS0+CiAgICAgICAgPGNhcmQKICAgICAgICAgIGhlYWRlci1jbGFzc2VzPSJiZy10cmFuc3BhcmVudCIKICAgICAgICAgIGJvZHktY2xhc3Nlcz0icHgtbGctNyIKICAgICAgICAgIGNsYXNzPSJjYXJkLXByaWNpbmcgYm9yZGVyLTAgdGV4dC1jZW50ZXIgbWItNCI+CgogICAgICAgICAgPCEtLUhlYWRlci0tPgogICAgICAgICAgPGg0IHNsb3Q9ImhlYWRlciIgY2xhc3M9InRleHQtdXBwZXJjYXNlIGxzLTEgdGV4dC1wcmltYXJ5IHB5LTMgbWItMCI+QnJhdm8gcGFjazwvaDQ+CgogICAgICAgICAgPCEtLUJvZHktLT4KICAgICAgICAgIDxkaXYgY2xhc3M9ImRpc3BsYXktMiI+JDQ5PC9kaXY+CiAgICAgICAgICA8c3BhbiBjbGFzcz0iIHRleHQtbXV0ZWQiPnBlciBhcHBsaWNhdGlvbjwvc3Bhbj4KICAgICAgICAgIDx1bCBjbGFzcz0ibGlzdC11bnN0eWxlZCBteS00Ij4KICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImQtZmxleCBhbGlnbi1pdGVtcy1jZW50ZXIiPgogICAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaWNvbiBpY29uLXhzIGljb24tc2hhcGUgYmctZ3JhZGllbnQtcHJpbWFyeSB0ZXh0LXdoaXRlIHNoYWRvdyByb3VuZGVkLWNpcmNsZSI+CiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhcyBmYS10ZXJtaW5hbCI+PC9pPgogICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InBsLTIgdGV4dC1zbSI+Q29tcGxldGUgZG9jdW1lbnRhdGlvbjwvc3Bhbj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2xpPgogICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZC1mbGV4IGFsaWduLWl0ZW1zLWNlbnRlciI+CiAgICAgICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJpY29uIGljb24teHMgaWNvbi1zaGFwZSBiZy1ncmFkaWVudC1wcmltYXJ5IHRleHQtd2hpdGUgc2hhZG93IHJvdW5kZWQtY2lyY2xlIj4KICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFzIGZhLXBlbi1mYW5jeSI+PC9pPgogICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InBsLTIgdGV4dC1zbSI+V29ya2luZyBtYXRlcmlhbHMgaW4gU2tldGNoPC9zcGFuPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJkLWZsZXggYWxpZ24taXRlbXMtY2VudGVyIj4KICAgICAgICAgICAgICAgIDxkaXY+CiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Imljb24gaWNvbi14cyBpY29uLXNoYXBlIGJnLWdyYWRpZW50LXByaW1hcnkgdGV4dC13aGl0ZSBzaGFkb3cgcm91bmRlZC1jaXJjbGUiPgogICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYXMgZmEtaGRkIj48L2k+CiAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icGwtMiB0ZXh0LXNtIj4yR0IgY2xvdWQgc3RvcmFnZTwvc3Bhbj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2xpPgogICAgICAgICAgPC91bD4KICAgICAgICAgIDxiYXNlLWJ1dHRvbiB0eXBlPSJwcmltYXJ5IiBjbGFzcz0ibWItMyI+U3RhcnQgZnJlZSB0cmlhbDwvYmFzZS1idXR0b24+CiAgICAgICAgICA8IS0tRm9vdGVyLS0+CiAgICAgICAgICA8YSBzbG90PSJmb290ZXIiIGhyZWY9IiMhIiBjbGFzcz0iIHRleHQtbXV0ZWQiPlJlcXVlc3QgYSBkZW1vPC9hPgogICAgICAgIDwvY2FyZD4KCiAgICAgIDwvZGl2PgogICAgPC9kaXY+CiAgPC9kaXY+CgoKPC9kaXY+Cg=="},null]}