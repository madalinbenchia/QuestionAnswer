{"remainingRequest":"D:\\Cursuri\\sem2\\Programare cu aspecte\\QuestionAnswer\\Front End\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Cursuri\\sem2\\Programare cu aspecte\\QuestionAnswer\\Front End\\src\\components\\Modal.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"D:\\Cursuri\\sem2\\Programare cu aspecte\\QuestionAnswer\\Front End\\src\\components\\Modal.vue","mtime":1615718057841},{"path":"D:\\Cursuri\\sem2\\Programare cu aspecte\\QuestionAnswer\\Front End\\node_modules\\css-loader\\dist\\cjs.js","mtime":1615717993329},{"path":"D:\\Cursuri\\sem2\\Programare cu aspecte\\QuestionAnswer\\Front End\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1615718052517},{"path":"D:\\Cursuri\\sem2\\Programare cu aspecte\\QuestionAnswer\\Front End\\node_modules\\postcss-loader\\src\\index.js","mtime":1615718039431},{"path":"D:\\Cursuri\\sem2\\Programare cu aspecte\\QuestionAnswer\\Front End\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615717989082},{"path":"D:\\Cursuri\\sem2\\Programare cu aspecte\\QuestionAnswer\\Front End\\node_modules\\vue-loader\\lib\\index.js","mtime":1615718052515}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5tb2RhbC5zaG93IHsKICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMyk7Cn0K"},{"version":3,"sources":["Modal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyHA;AACA;AACA","file":"Modal.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <SlideYUpTransition :duration=\"animationDuration\">\r\n    <div class=\"modal fade\"\r\n         @mousedown.self=\"closeModal\"\r\n         :class=\"[{'show d-block': show}, {'d-none': !show}, {'modal-mini': type === 'mini'}]\"\r\n         v-show=\"show\"\r\n         tabindex=\"-1\"\r\n         role=\"dialog\"\r\n         :aria-hidden=\"!show\">\r\n\r\n      <div class=\"modal-dialog modal-dialog-centered\"\r\n           :class=\"[{'modal-notice': type === 'notice', [`modal-${size}`]: size}, modalClasses]\">\r\n        <div class=\"modal-content\" :class=\"[gradient ? `bg-gradient-${gradient}` : '',modalContentClasses]\">\r\n\r\n          <div class=\"modal-header\" :class=\"[headerClasses]\" v-if=\"$slots.header\">\r\n            <slot name=\"header\"></slot>\r\n            <slot name=\"close-button\">\r\n              <button type=\"button\"\r\n                      class=\"close\"\r\n                      v-if=\"showClose\"\r\n                      @click=\"closeModal\"\r\n                      data-dismiss=\"modal\"\r\n                      aria-label=\"Close\">\r\n                <span :aria-hidden=\"!show\">Ã—</span>\r\n              </button>\r\n            </slot>\r\n          </div>\r\n\r\n          <div class=\"modal-body\" :class=\"bodyClasses\">\r\n            <slot></slot>\r\n          </div>\r\n\r\n          <div class=\"modal-footer\" :class=\"footerClasses\" v-if=\"$slots.footer\">\r\n            <slot name=\"footer\"></slot>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  </SlideYUpTransition>\r\n</template>\r\n<script>\r\n  import { SlideYUpTransition } from \"vue2-transitions\";\r\n\r\n  export default {\r\n    name: \"modal\",\r\n    components: {\r\n      SlideYUpTransition\r\n    },\r\n    props: {\r\n      show: Boolean,\r\n      showClose: {\r\n        type: Boolean,\r\n        default: true\r\n      },\r\n      type: {\r\n        type: String,\r\n        default: \"\",\r\n        validator(value) {\r\n          let acceptedValues = [\"\", \"notice\", \"mini\"];\r\n          return acceptedValues.indexOf(value) !== -1;\r\n        },\r\n        description: 'Modal type (notice|mini|\"\") '\r\n      },\r\n      modalClasses: {\r\n        type: [Object, String],\r\n        description: \"Modal dialog css classes\"\r\n      },\r\n      size: {\r\n        type: String,\r\n        description: 'Modal size',\r\n        validator(value) {\r\n          let acceptedValues = [\"\", \"sm\", \"lg\"];\r\n          return acceptedValues.indexOf(value) !== -1;\r\n        },\r\n      },\r\n      modalContentClasses: {\r\n        type: [Object, String],\r\n        description: \"Modal dialog content css classes\"\r\n      },\r\n      gradient: {\r\n        type: String,\r\n        description: \"Modal gradient type (danger, primary etc)\"\r\n      },\r\n      headerClasses: {\r\n        type: [Object, String],\r\n        description: \"Modal Header css classes\"\r\n      },\r\n      bodyClasses: {\r\n        type: [Object, String],\r\n        description: \"Modal Body css classes\"\r\n      },\r\n      footerClasses: {\r\n        type: [Object, String],\r\n        description: \"Modal Footer css classes\"\r\n      },\r\n      animationDuration: {\r\n        type: Number,\r\n        default: 500,\r\n        description: \"Modal transition duration\"\r\n      }\r\n    },\r\n    methods: {\r\n      closeModal() {\r\n        this.$emit(\"update:show\", false);\r\n        this.$emit(\"close\");\r\n      }\r\n    },\r\n    watch: {\r\n      show(val) {\r\n        let documentClasses = document.body.classList;\r\n        if (val) {\r\n          documentClasses.add(\"modal-open\");\r\n        } else {\r\n          documentClasses.remove(\"modal-open\");\r\n        }\r\n      }\r\n    }\r\n  };\r\n</script>\r\n<style>\r\n  .modal.show {\r\n    background-color: rgba(0, 0, 0, 0.3);\r\n  }\r\n</style>\r\n"]}]}