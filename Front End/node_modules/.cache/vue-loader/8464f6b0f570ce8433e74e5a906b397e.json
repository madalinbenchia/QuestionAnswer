{"remainingRequest":"D:\\laragon\\www\\QA\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\laragon\\www\\QA\\src\\components\\Feed\\Qanswer.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"D:\\laragon\\www\\QA\\src\\components\\Feed\\Qanswer.vue","mtime":1612180858203},{"path":"D:\\laragon\\www\\QA\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\laragon\\www\\QA\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\laragon\\www\\QA\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\laragon\\www\\QA\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\laragon\\www\\QA\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLmdyZWVuQ2xhc3Mgew0KICBjb2xvcjogcmdiKDc5LCAyMzAsIDc5KTsNCn0NCg=="},{"version":3,"sources":["Qanswer.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0WA;AACA;AACA","file":"Qanswer.vue","sourceRoot":"src/components/Feed","sourcesContent":["<template>\r\n  <div>\r\n    <div style=\"margin-top:10px;\">\r\n      <el-tooltip content=\"This answer is useful\" placement=\"top\">\r\n        <i\r\n          style=\"margin-left: 8px;font-size: 200%; cursor:pointer;\"\r\n          class=\"fas fa-chevron-up\"\r\n          @click=\"UpVote(localAnswer.Id)\"\r\n        ></i>\r\n      </el-tooltip>\r\n    </div>\r\n    <h2 v-if=\"localAnswer.Score > 99\" style=\"margin-left:8px; color:gray\">\r\n      {{ localAnswer.Score }}\r\n      <el-tooltip\r\n        v-if=\"authUser.UserId == question.OwnerUserId\"\r\n        content=\"Mark this answer as correct\"\r\n        placement=\"right\"\r\n      >\r\n        <i\r\n          :class=\"\r\n            localAnswer.Id == question.AcceptedAnswerId ? 'greenClass' : ''\r\n          \"\r\n          @click=\"correctAnswer(localAnswer.Id)\"\r\n          style=\"margin-left:8px; cursor:pointer\"\r\n          class=\"fas fa-check\"\r\n          v-bind:id=\"localAnswer.Id\"\r\n        ></i>\r\n      </el-tooltip>\r\n\r\n      <el-tooltip\r\n        v-else-if=\"localAnswer.Id == question.AcceptedAnswerId\"\r\n        content=\"This answer is marked as correct\"\r\n        placement=\"right\"\r\n      >\r\n        <i\r\n          style=\"margin-left:8px; cursor:pointer; color:rgb(79, 230, 79)\"\r\n          class=\"fas fa-check\"\r\n        ></i>\r\n      </el-tooltip>\r\n    </h2>\r\n    <h2 v-else-if=\"localAnswer.Score > 9\" style=\"margin-left:9px; color:gray\">\r\n      {{ localAnswer.Score }}\r\n      <el-tooltip\r\n        v-if=\"authUser.UserId == question.OwnerUserId\"\r\n        content=\"Mark this answer as correct\"\r\n        placement=\"right\"\r\n      >\r\n        <i\r\n          :class=\"\r\n            localAnswer.Id == question.AcceptedAnswerId ? 'greenClass' : ''\r\n          \"\r\n          @click=\"correctAnswer(localAnswer.Id)\"\r\n          style=\"margin-left:8px; cursor:pointer\"\r\n          class=\"fas fa-check\"\r\n          v-bind:id=\"localAnswer.Id\"\r\n        ></i>\r\n      </el-tooltip>\r\n      <el-tooltip\r\n        v-else-if=\"localAnswer.Id == question.AcceptedAnswerId\"\r\n        content=\"This answer is marked as correct\"\r\n        placement=\"right\"\r\n      >\r\n        <i\r\n          style=\"margin-left:8px; cursor:pointer; color: rgb(79, 230, 79)\"\r\n          class=\"fas fa-check\"\r\n        ></i>\r\n      </el-tooltip>\r\n    </h2>\r\n    <h2 v-else-if=\"localAnswer.Score <= 9\" style=\"margin-left:15px;color:gray\">\r\n      {{ localAnswer.Score }}\r\n      <el-tooltip\r\n        v-if=\"authUser.UserId == question.OwnerUserId\"\r\n        content=\"Mark this answer as correct\"\r\n        placement=\"right\"\r\n      >\r\n        <i\r\n          :class=\"\r\n            localAnswer.Id == question.AcceptedAnswerId ? 'greenClass' : ''\r\n          \"\r\n          @click=\"correctAnswer(localAnswer.Id)\"\r\n          style=\"margin-left:8px; cursor:pointer\"\r\n          class=\"fas fa-check\"\r\n          v-bind:id=\"localAnswer.Id\"\r\n        ></i>\r\n      </el-tooltip>\r\n      <el-tooltip\r\n        v-else-if=\"localAnswer.Id == question.AcceptedAnswerId\"\r\n        content=\"This answer is marked as correct\"\r\n        placement=\"right\"\r\n      >\r\n        <i\r\n          style=\"margin-left:8px; cursor:pointer; color:rgb(79, 230, 79)\"\r\n          class=\"fas fa-check\"\r\n        ></i>\r\n      </el-tooltip>\r\n    </h2>\r\n    <div style=\"margin-top:10px;\">\r\n      <el-tooltip content=\"This answer is not useful\" placement=\"bottom\">\r\n        <i\r\n          style=\"margin-left: 8px;font-size: 200%; cursor:pointer;\"\r\n          class=\"fas fa-chevron-down\"\r\n          @click=\"DownVote(localAnswer.Id)\"\r\n        ></i>\r\n      </el-tooltip>\r\n    </div>\r\n\r\n    <card class=\"no-border-card\" style=\"margin-left:80px; margin-top:-80px\">\r\n      <el-tooltip\r\n        v-if=\"authUser.UserId == localAnswer.OwnerUserId\"\r\n        style=\"cursor: pointer; float:right;top:-10px; position:relative; font-size:large\"\r\n        content=\"Delete\"\r\n        placement=\"top\"\r\n      >\r\n        <i\r\n          id=\"delq\"\r\n          class=\"far fa-trash-alt\"\r\n          @click=\"deleteAnswer(localAnswer.Id)\"\r\n        ></i>\r\n      </el-tooltip>\r\n\r\n      <el-tooltip\r\n        v-if=\"authUser.UserId == localAnswer.OwnerUserId\"\r\n        style=\"cursor: pointer; float:right;top:-10px; position:relative; font-size:large; margin-right:6px\"\r\n        content=\"Edit\"\r\n        placement=\"top\"\r\n      >\r\n        <i class=\"far fa-edit\" @click=\"editAnswer(localAnswer.Id)\"></i>\r\n      </el-tooltip>\r\n\r\n      <p class=\"card-text\" v-html=\"localAnswer.Body\"></p>\r\n      <p class=\"\" style=\"font-size:smaller; margin-left:80%; color:gray\">\r\n        answered <i>{{ format_date(localAnswer.CreationDate) }}</i> by\r\n        <b style=\"cursor:pointer\" @click=\"viewUser(answerOwner.UserId)\">{{\r\n          answerOwner.DisplayName\r\n        }}</b>\r\n      </p>\r\n      {{ localComments }}\r\n      <div\r\n        v-for=\"(comment, index) in localAnswer.CommentsList\"\r\n        :key=\"comment.Id\"\r\n      >\r\n        <comment\r\n          v-bind:id=\"comment.Id\"\r\n          v-bind:text=\"comment.Text\"\r\n          v-bind:cdate=\"comment.CreationDate\"\r\n          v-bind:uid=\"comment.UserId\"\r\n        ></comment>\r\n      </div>\r\n\r\n      <form style=\"margin-top:30px\">\r\n        <textarea\r\n          v-model=\"comm[index]\"\r\n          maxlength=\"20\"\r\n          style=\"resize: none;\"\r\n          class=\"form-control\"\r\n          placeholder=\"Write your comment\"\r\n          rows=\"1\"\r\n          @keydown.enter.exact.prevent\r\n          @keyup.enter.exact=\"addComment(localAnswer.Id, index)\"\r\n          @keydown.enter.shift.exact=\"newline\"\r\n        >\r\n        </textarea>\r\n      </form>\r\n    </card>\r\n  </div>\r\n</template>\r\n<script>\r\nimport moment from \"moment\";\r\nimport Comment from \"@/components/Feed/Comment\";\r\nimport swal from \"sweetalert2\";\r\nimport \"sweetalert2/dist/sweetalert2.css\";\r\n\r\nexport default {\r\n  name: \"qanswer\",\r\n  components: {\r\n    Comment\r\n  },\r\n  props: {\r\n    index: {\r\n      type: Number,\r\n      default: \"\"\r\n    },\r\n    answer: {\r\n      type: Object,\r\n      default: \"\"\r\n    },\r\n    question: {\r\n      type: Object,\r\n      default: \"\"\r\n    }\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      answerOwner: \"\",\r\n      authUser: \"\",\r\n      questionOwner: \"\",\r\n      comm: [],\r\n      localAnswer: this.answer,\r\n      localComments: \"\"\r\n    };\r\n  },\r\n  created() {\r\n    this.get();\r\n  },\r\n\r\n  methods: {\r\n    async get() {\r\n      await this.$store.dispatch(\"users/get\", this.localAnswer.OwnerUserId);\r\n      this.answerOwner = await { ...this.$store.getters[\"users/user\"] };\r\n\r\n      this.authUser = await { ...this.$store.getters.currentUser };\r\n\r\n      const questionOwnerId = this.question.OwnerUserId;\r\n\r\n      await this.$store.dispatch(\"users/get\", questionOwnerId);\r\n      this.questionOwner = await { ...this.$store.getters[\"users/user\"] };\r\n    },\r\n    format_date(value) {\r\n      if (value) {\r\n        return moment(String(value)).format(\"MMM D 'YY, h:mm\");\r\n      }\r\n    },\r\n    async viewUser(Id) {\r\n      this.$router.push({\r\n        name: \"View User\",\r\n        params: { id: Id }\r\n      });\r\n    },\r\n\r\n    async correctAnswer(Id) {\r\n      this.question.AcceptedAnswerId = Id;\r\n      this.question.LastEditorDisplayName = this.questionOwner.DisplayName;\r\n      this.question.CloseDate = \"2011-01-01T02:11:46.083\";\r\n      await this.$store.dispatch(\"questions/update\", this.question);\r\n      var element = document.getElementById(Id);\r\n      element.classList.add(\"greenClassvu\");\r\n    },\r\n\r\n    async UpVote(id) {\r\n      try {\r\n        if (this.$store.getters.isAuthenticated == false) {\r\n          this.$notify({\r\n            type: \"danger\",\r\n            message: \"Oops, login to upvote!\"\r\n          });\r\n        } else {\r\n          let v = { PostId: id, UserId: this.authUser.UserId, VoteTypeId: \"2\" };\r\n\r\n          await this.$store.dispatch(\"questions/vote\", v);\r\n\r\n          await this.$store.dispatch(\"questions/get\", id);\r\n          this.localAnswer = this.$store.getters[\"questions/question\"];\r\n        }\r\n      } catch (error) {\r\n        this.$notify({\r\n          type: \"danger\",\r\n          message: \"Oops, something went wrong!\"\r\n        });\r\n      }\r\n    },\r\n\r\n    async DownVote(id) {\r\n      if (this.$store.getters.isAuthenticated == false) {\r\n        this.$notify({\r\n          type: \"danger\",\r\n          message: \"Oops, login to downvote!\"\r\n        });\r\n      } else {\r\n        try {\r\n          let v = { PostId: id, UserId: this.authUser.UserId, VoteTypeId: \"3\" };\r\n\r\n          await this.$store.dispatch(\"questions/vote\", v);\r\n          await this.$store.dispatch(\"questions/get\", id);\r\n          this.localAnswer = this.$store.getters[\"questions/question\"];\r\n        } catch (error) {\r\n          this.$notify({\r\n            type: \"danger\",\r\n            message: \"Oops, something went wrong!\"\r\n          });\r\n        }\r\n      }\r\n    },\r\n\r\n    async addComment(id, index) {\r\n      let co = this.comm[index] || \"\";\r\n      if (co.length == 0) {\r\n        this.$notify({\r\n          type: \"danger\",\r\n          message: \"Oops, comment should not be empty!\"\r\n        });\r\n      } else {\r\n        try {\r\n          let c = {\r\n            PostId: id,\r\n            Text: this.comm[index],\r\n            UserId: this.authUser.UserId\r\n          };\r\n\r\n          await this.$store.dispatch(\"questions/comment\", c);\r\n          this.comm[index] = \"\";\r\n\r\n          await this.$store.dispatch(\"comments/get\", id);\r\n          this.localComments = await {\r\n            ...this.$store.getters[\"comments/comment\"]\r\n          };\r\n          this.localAnswer.CommentsList = this.localComments;\r\n\r\n          this.$notify({\r\n            type: \"success\",\r\n            message: \"Comment added successfully.\"\r\n          });\r\n        } catch (error) {\r\n          console.log(error);\r\n          this.$notify({\r\n            type: \"danger\",\r\n            message: \"Oops, login first!\"\r\n          });\r\n        }\r\n      }\r\n    },\r\n    async deleteAnswer(id) {\r\n      const confirmation = await swal.fire({\r\n        title: `Are you sure?`,\r\n        type: \"question\",\r\n        buttonsStyling: false,\r\n        showCancelButton: true,\r\n        confirmButtonText: \"Yes, delete it!\",\r\n        cancelButtonText: \"No, keep it\",\r\n        confirmButtonClass: \"btn btn-primary\",\r\n        cancelButtonClass: \"btn btn-warning\"\r\n      });\r\n\r\n      try {\r\n        if (confirmation.value === true) {\r\n          await this.$store.dispatch(\"answers/destroy\", id);\r\n          location.reload();\r\n\r\n          this.$notify({\r\n            type: \"success\",\r\n            message: \"Answer deleted successfully.\"\r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n        this.$notify({\r\n          type: \"danger\",\r\n          message: \"Oops, something went wrong!\"\r\n        });\r\n      }\r\n    },\r\n\r\n    async editAnswer(Id) {\r\n      this.$router.push({\r\n        name: \"Edit Answer\",\r\n        params: { id: Id }\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>\r\n<style>\r\n.greenClass {\r\n  color: rgb(79, 230, 79);\r\n}\r\n</style>\r\n"]}]}