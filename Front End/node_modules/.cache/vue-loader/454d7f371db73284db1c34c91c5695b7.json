{"remainingRequest":"D:\\laragon\\www\\QA\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\laragon\\www\\QA\\src\\views\\Pages\\Register.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\laragon\\www\\QA\\src\\views\\Pages\\Register.vue","mtime":1609358850170},{"path":"D:\\laragon\\www\\QA\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\laragon\\www\\QA\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\laragon\\www\\QA\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\laragon\\www\\QA\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgVmFsaWRhdGlvbkVycm9yIGZyb20gIkAvY29tcG9uZW50cy9WYWxpZGF0aW9uRXJyb3IudnVlIjsNCmltcG9ydCBmb3JtTWl4aW4gZnJvbSAiQC9taXhpbnMvZm9ybS1taXhpbiI7DQppbXBvcnQgUGFzc3dvcmQgZnJvbSAidnVlLXBhc3N3b3JkLXN0cmVuZ3RoLW1ldGVyIjsNCg0KZXhwb3J0IGRlZmF1bHQgew0KICBjb21wb25lbnRzOiB7DQogICAgVmFsaWRhdGlvbkVycm9yLA0KICAgIFBhc3N3b3JkLA0KICB9LA0KICBtaXhpbnM6IFtmb3JtTWl4aW5dLA0KICBkYXRhKCkgew0KICAgIHJldHVybiB7DQogICAgICBuYW1lOiBudWxsLA0KICAgICAgYm9vbGVhbjogZmFsc2UsDQogICAgICBlbWFpbDogbnVsbCwNCiAgICAgIHBhc3N3b3JkOiBudWxsLA0KICAgICAgcGFzc3dvcmRfY29uZmlybWF0aW9uOiBudWxsLA0KICAgICAgc2NvcnM6ICIiLA0KICAgIH07DQogIH0sDQoNCiAgbWV0aG9kczogew0KICAgIHNob3dTY29yZShzY29yZSkgew0KICAgICAgdGhpcy5zY29ycyA9IHNjb3JlOw0KICAgIH0sDQoNCiAgICBhc3luYyBoYW5kbGVTdWJtaXQoKSB7DQogICAgICBpZiAoIXRoaXMuYm9vbGVhbikgew0KICAgICAgICBjb25zb2xlLmxvZygiY2V2YSIpOw0KICAgICAgICBhd2FpdCB0aGlzLiRub3RpZnkoew0KICAgICAgICAgIHR5cGU6ICJkYW5nZXIiLA0KICAgICAgICAgIG1lc3NhZ2U6ICJZb3UgbmVlZCB0byBhZ3JlZSB3aXRoIG91ciB0ZXJtcyBhbmQgY29uZGl0aW9ucy4iLA0KICAgICAgICB9KTsNCiAgICAgICAgcmV0dXJuOw0KICAgICAgfQ0KDQogICAgICBjb25zdCB1c2VyID0gew0KICAgICAgICBkYXRhOiB7DQogICAgICAgICAgdHlwZTogInRva2VuIiwNCiAgICAgICAgICBhdHRyaWJ1dGVzOiB7DQogICAgICAgICAgICBuYW1lOiB0aGlzLm5hbWUsDQogICAgICAgICAgICBlbWFpbDogdGhpcy5lbWFpbCwNCiAgICAgICAgICAgIHBhc3N3b3JkOiB0aGlzLnBhc3N3b3JkLA0KICAgICAgICAgICAgcGFzc3dvcmRfY29uZmlybWF0aW9uOiB0aGlzLnBhc3N3b3JkX2NvbmZpcm1hdGlvbiwNCiAgICAgICAgICB9LA0KICAgICAgICB9LA0KICAgICAgfTsNCg0KICAgICAgY29uc3QgcmVxdWVzdE9wdGlvbnMgPSB7DQogICAgICAgIGhlYWRlcnM6IHsNCiAgICAgICAgICBBY2NlcHQ6ICJhcHBsaWNhdGlvbi92bmQuYXBpK2pzb24iLA0KICAgICAgICAgICJDb250ZW50LVR5cGUiOiAiYXBwbGljYXRpb24vdm5kLmFwaStqc29uIiwNCiAgICAgICAgfSwNCiAgICAgIH07DQoNCiAgICAgIHRyeSB7DQogICAgICAgIGF3YWl0IHRoaXMuJHN0b3JlLmRpc3BhdGNoKCJyZWdpc3RlciIsIHsgdXNlciwgcmVxdWVzdE9wdGlvbnMgfSk7DQogICAgICAgIHRoaXMuJG5vdGlmeSh7DQogICAgICAgICAgdHlwZTogInN1Y2Nlc3MiLA0KICAgICAgICAgIG1lc3NhZ2U6ICJTdWNjZXNzZnVsbHkgcmVnaXN0ZXJlZC4iLA0KICAgICAgICB9KTsNCiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgIHRoaXMuJG5vdGlmeSh7DQogICAgICAgICAgdHlwZTogImRhbmdlciIsDQogICAgICAgICAgbWVzc2FnZTogIk9vcHMsIHNvbWV0aGluZyB3ZW50IHdyb25nISIsDQogICAgICAgIH0pOw0KICAgICAgICB0aGlzLnNldEFwaVZhbGlkYXRpb24oZXJyb3IucmVzcG9uc2UuZGF0YS5lcnJvcnMpOw0KICAgICAgfQ0KICAgIH0sDQogIH0sDQp9Ow0K"},{"version":3,"sources":["Register.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiLA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Register.vue","sourceRoot":"src/views/Pages","sourcesContent":["<template>\r\n  <div>\r\n    <!-- Header -->\r\n    <div class=\"header bg-gradient-success py-7 py-lg-8 pt-lg-9\">\r\n      <div class=\"container\">\r\n        <div class=\"header-body text-center mb-7\">\r\n          <div class=\"row justify-content-center\">\r\n            <div class=\"col-xl-5 col-lg-6 col-md-8 px-5\">\r\n              <h1 class=\"text-white\">Create an account</h1>\r\n              <p class=\"text-lead text-white\">\r\n                Use these awesome forms to login or create new account in your\r\n                project for free.\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"separator separator-bottom separator-skew zindex-100\">\r\n        <svg\r\n          x=\"0\"\r\n          y=\"0\"\r\n          viewBox=\"0 0 2560 100\"\r\n          preserveAspectRatio=\"none\"\r\n          version=\"1.1\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <polygon\r\n            class=\"fill-default\"\r\n            points=\"2560 0 2560 100 0 100\"\r\n          ></polygon>\r\n        </svg>\r\n      </div>\r\n    </div>\r\n    <!-- Page content -->\r\n    <div class=\"container mt--8 pb-5\">\r\n      <!-- Table -->\r\n      <div class=\"row justify-content-center\">\r\n        <div class=\"col-lg-6 col-md-8\">\r\n          <div class=\"card bg-secondary border-0\">\r\n            <div class=\"card-header bg-transparent pb-5\">\r\n              <div class=\"text-muted text-center mt-2 mb-4\">\r\n                <small>Sign up with</small>\r\n              </div>\r\n              <div class=\"text-center\">\r\n                <a href=\"#\" class=\"btn btn-neutral btn-icon mr-4\">\r\n                  <span class=\"btn-inner--icon\"\r\n                    ><img src=\"/img/icons/common/github.svg\"\r\n                  /></span>\r\n                  <span class=\"btn-inner--text\">Github</span>\r\n                </a>\r\n                <a href=\"#\" class=\"btn btn-neutral btn-icon\">\r\n                  <span class=\"btn-inner--icon\"\r\n                    ><img src=\"/img/icons/common/google.svg\"\r\n                  /></span>\r\n                  <span class=\"btn-inner--text\">Google</span>\r\n                </a>\r\n              </div>\r\n            </div>\r\n            <div class=\"card-body px-lg-5 py-lg-5\">\r\n              <div class=\"text-center text-muted mb-4\">\r\n                <small>Or sign up with credentials</small>\r\n              </div>\r\n              <form role=\"form\" @submit.prevent=\"handleSubmit()\">\r\n                <base-input\r\n                  alternative\r\n                  class=\"mb-3\"\r\n                  prepend-icon=\"ni ni-hat-3\"\r\n                  placeholder=\"Name\"\r\n                  name=\"Name\"\r\n                  v-model=\"name\"\r\n                >\r\n                </base-input>\r\n                <validation-error :errors=\"apiValidationErrors.name\" />\r\n\r\n                <base-input\r\n                  alternative\r\n                  class=\"mb-3\"\r\n                  prepend-icon=\"ni ni-email-83\"\r\n                  placeholder=\"Email\"\r\n                  name=\"Email\"\r\n                  v-model=\"email\"\r\n                >\r\n                </base-input>\r\n                <validation-error :errors=\"apiValidationErrors.email\" />\r\n\r\n                <base-input\r\n                  alternative\r\n                  class=\"mb-3\"\r\n                  prepend-icon=\"ni ni-lock-circle-open\"\r\n                  placeholder=\"Password\"\r\n                  type=\"password\"\r\n                  name=\"Password\"\r\n                  v-model=\"password\"\r\n                >\r\n                </base-input>\r\n                <password\r\n                  class=\"mb-3\"\r\n                  v-model=\"password\"\r\n                  :strength-meter-only=\"true\"\r\n                  @score=\"showScore\"\r\n                  :showStrengthMeter=\"false\"\r\n                />\r\n\r\n                <validation-error :errors=\"apiValidationErrors.password\" />\r\n\r\n                <base-input\r\n                  alternative\r\n                  class=\"mb-3\"\r\n                  prepend-icon=\"ni ni-lock-circle-open\"\r\n                  placeholder=\"Confirm Password\"\r\n                  type=\"password\"\r\n                  name=\"Password confirmation\"\r\n                  v-model=\"password_confirmation\"\r\n                >\r\n                </base-input>\r\n                <validation-error\r\n                  :errors=\"apiValidationErrors.password_confirmation\"\r\n                />\r\n\r\n                <div class=\"text-muted font-italic\">\r\n                  <small\r\n                    >password strength:\r\n                    <template v-if=\"scors === 0\">\r\n                      <span class=\"text-danger font-weight-700\">\r\n                        very weak\r\n                      </span>\r\n                    </template>\r\n\r\n                    <template v-if=\"scors === 1\">\r\n                      <span class=\"text-danger font-weight-700\"> weak </span>\r\n                    </template>\r\n\r\n                    <template v-if=\"scors === 2\">\r\n                      <span class=\"text-warning font-weight-700\"> medium </span>\r\n                    </template>\r\n\r\n                    <template v-if=\"scors === 3\">\r\n                      <span class=\"text-success font-weight-700\"> strong </span>\r\n                    </template>\r\n\r\n                    <template v-if=\"scors === 4\">\r\n                      <span class=\"text-success font-weight-700\">\r\n                        very strong\r\n                      </span>\r\n                    </template>\r\n                  </small>\r\n                </div>\r\n                <div class=\"row my-4\">\r\n                  <div class=\"col-12\">\r\n                    <base-input\r\n                      :rules=\"{ required: { allowFalse: false } }\"\r\n                      name=\"Privacy\"\r\n                      Policy\r\n                    >\r\n                      <base-checkbox v-model=\"boolean\">\r\n                        <span class=\"text-muted\"\r\n                          >I agree with the\r\n                          <a href=\"#!\">Terms and conditions</a></span\r\n                        >\r\n                      </base-checkbox>\r\n                    </base-input>\r\n                  </div>\r\n                </div>\r\n                <div class=\"text-center\">\r\n                  <base-button type=\"primary\" native-type=\"submit\" class=\"my-4\"\r\n                    >Create account</base-button\r\n                  >\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport ValidationError from \"@/components/ValidationError.vue\";\r\nimport formMixin from \"@/mixins/form-mixin\";\r\nimport Password from \"vue-password-strength-meter\";\r\n\r\nexport default {\r\n  components: {\r\n    ValidationError,\r\n    Password,\r\n  },\r\n  mixins: [formMixin],\r\n  data() {\r\n    return {\r\n      name: null,\r\n      boolean: false,\r\n      email: null,\r\n      password: null,\r\n      password_confirmation: null,\r\n      scors: \"\",\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    showScore(score) {\r\n      this.scors = score;\r\n    },\r\n\r\n    async handleSubmit() {\r\n      if (!this.boolean) {\r\n        console.log(\"ceva\");\r\n        await this.$notify({\r\n          type: \"danger\",\r\n          message: \"You need to agree with our terms and conditions.\",\r\n        });\r\n        return;\r\n      }\r\n\r\n      const user = {\r\n        data: {\r\n          type: \"token\",\r\n          attributes: {\r\n            name: this.name,\r\n            email: this.email,\r\n            password: this.password,\r\n            password_confirmation: this.password_confirmation,\r\n          },\r\n        },\r\n      };\r\n\r\n      const requestOptions = {\r\n        headers: {\r\n          Accept: \"application/vnd.api+json\",\r\n          \"Content-Type\": \"application/vnd.api+json\",\r\n        },\r\n      };\r\n\r\n      try {\r\n        await this.$store.dispatch(\"register\", { user, requestOptions });\r\n        this.$notify({\r\n          type: \"success\",\r\n          message: \"Successfully registered.\",\r\n        });\r\n      } catch (error) {\r\n        this.$notify({\r\n          type: \"danger\",\r\n          message: \"Oops, something went wrong!\",\r\n        });\r\n        this.setApiValidation(error.response.data.errors);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style></style>\r\n"]}]}