{"remainingRequest":"D:\\laragon\\www\\vue-argon-dashboard-pro-json-api\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\laragon\\www\\vue-argon-dashboard-pro-json-api\\src\\views\\Examples\\UserManagement\\EditUserPage.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"D:\\laragon\\www\\vue-argon-dashboard-pro-json-api\\src\\views\\Examples\\UserManagement\\EditUserPage.vue","mtime":1599749513117},{"path":"D:\\laragon\\www\\vue-argon-dashboard-pro-json-api\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\laragon\\www\\vue-argon-dashboard-pro-json-api\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\laragon\\www\\vue-argon-dashboard-pro-json-api\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\laragon\\www\\vue-argon-dashboard-pro-json-api\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\laragon\\www\\vue-argon-dashboard-pro-json-api\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\laragon\\www\\vue-argon-dashboard-pro-json-api\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQouc3BhY2luZyB7DQogIHBhZGRpbmctYm90dG9tOiAxcmVtOw0KfQ0K"},{"version":3,"sources":["EditUserPage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0PA;AACA;AACA","file":"EditUserPage.vue","sourceRoot":"src/views/Examples/UserManagement","sourcesContent":["<template>\r\n  <div class=\"md-layout\">\r\n    <div class=\"md-layout-item md-small-size-100\">\r\n      <md-card>\r\n        <md-card-header class=\"md-card-header-icon md-card-header-green\">\r\n          <div class=\"card-icon\">\r\n            <md-icon>contacts</md-icon>\r\n          </div>\r\n          <h4 class=\"title\">Edit User</h4>\r\n        </md-card-header>\r\n\r\n        <form @submit.prevent=\"update\">\r\n          <md-card-content>\r\n            <div class=\"text-right\">\r\n              <md-button @click=\"goBack\" class=\"md-primary md-dense\">\r\n                Back to List\r\n              </md-button>\r\n            </div>\r\n\r\n            <div class=\"md-layout\">\r\n              <label class=\"md-layout-item md-size-25 md-form-label\">\r\n                Profile Photo\r\n              </label>\r\n              <div class=\"md-layout-item\">\r\n                <div class=\"file-input\">\r\n                  <div v-if=\"avatar_img\">\r\n                    <div class=\"image-container\">\r\n                      <img :src=\"avatar_img\" />\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"image-container\" v-else>\r\n                    <img :src=\"default_img\" />\r\n                  </div>\r\n                  <div class=\"button-container\">\r\n                    <md-button\r\n                      class=\"md-danger md-round\"\r\n                      @click=\"removeImage\"\r\n                      v-if=\"avatar_img\"\r\n                    >\r\n                      <i class=\"fa fa-times\" />\r\n                      Remove\r\n                    </md-button>\r\n                    <md-button class=\"md-success md-fileinput\">\r\n                      <template v-if=\"!avatar_img\">Select image</template>\r\n                      <template v-else>Change</template>\r\n                      <input type=\"file\" @change=\"onFileChange\" />\r\n                    </md-button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"md-layout spacing\">\r\n              <label class=\"md-layout-item md-size-25 md-form-label\">\r\n                Name\r\n              </label>\r\n              <div class=\"md-layout-item\">\r\n                <md-field class=\"md-invalid\">\r\n                  <md-input v-model=\"user.name\" />\r\n                  <validation-error :errors=\"apiValidationErrors.name\" />\r\n                </md-field>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"md-layout spacing\">\r\n              <label class=\"md-layout-item md-size-25 md-form-label\">\r\n                Email\r\n              </label>\r\n              <div class=\"md-layout-item\">\r\n                <md-field class=\"md-invalid\">\r\n                  <md-input v-model=\"user.email\" />\r\n                  <validation-error :errors=\"apiValidationErrors.email\" />\r\n                </md-field>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"md-layout spacing\">\r\n              <label class=\"md-layout-item md-size-25 md-form-label\">\r\n                Role\r\n              </label>\r\n              <div class=\"md-layout-item\">\r\n                <md-field>\r\n                  <label>Select ...</label>\r\n                  <md-select v-model=\"user.roles[0].id\" name=\"roles\">\r\n                    <md-option\r\n                      v-for=\"item in available_roles\"\r\n                      :key=\"item.id\"\r\n                      :value=\"item.id\"\r\n                    >\r\n                      {{ item.name }}\r\n                    </md-option>\r\n                  </md-select>\r\n                </md-field>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"md-layout spacing\">\r\n              <label class=\"md-layout-item md-size-25 md-form-label\">\r\n                Password\r\n              </label>\r\n              <div class=\"md-layout-item\">\r\n                <md-field class=\"md-invalid\">\r\n                  <md-input v-model=\"user.password\" type=\"password\" />\r\n                  <validation-error :errors=\"apiValidationErrors.password\" />\r\n                </md-field>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"md-layout\">\r\n              <label class=\"md-layout-item md-size-25 md-form-label\">\r\n                Confirm Password\r\n              </label>\r\n              <div class=\"md-layout-item\">\r\n                <md-field class=\"md-invalid\">\r\n                  <md-input\r\n                    v-model=\"user.password_confirmation\"\r\n                    type=\"password\"\r\n                  />\r\n                  <validation-error\r\n                    :errors=\"apiValidationErrors.password_confirmation\"\r\n                  />\r\n                </md-field>\r\n              </div>\r\n            </div>\r\n          </md-card-content>\r\n\r\n          <md-card-actions md-alignment=\"right\">\r\n            <md-button type=\"submit\" class=\"md-success\">Update User</md-button>\r\n          </md-card-actions>\r\n        </form>\r\n      </md-card>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ValidationError } from \"@/components\";\r\nimport formMixin from \"@/mixins/form-mixin\";\r\n\r\nexport default {\r\n  components: { ValidationError },\r\n\r\n  mixins: [formMixin],\r\n\r\n  data: () => ({\r\n    user: {\r\n      type: \"users\",\r\n      name: null,\r\n      email: null,\r\n      password: null,\r\n      password_confirmation: null,\r\n      roles: [\r\n        {\r\n          id: null,\r\n          type: \"roles\",\r\n        },\r\n      ],\r\n      relationshipNames: [\"roles\"],\r\n    },\r\n\r\n    available_roles: [],\r\n\r\n    avatar_img: \"\",\r\n    default_img: process.env.VUE_APP_APP_BASE_URL + \"/img/placeholder.jpg\",\r\n    file: null,\r\n  }),\r\n\r\n  created() {\r\n    this.get();\r\n    this.getRoles();\r\n  },\r\n\r\n  methods: {\r\n    async get() {\r\n      try {\r\n        const id = this.$route.params.id;\r\n        await this.$store.dispatch(\"users/get\", id);\r\n        this.user = this.$store.getters[\"users/user\"];\r\n        this.user.password = \"\";\r\n      } catch (e) {\r\n        await this.$store.dispatch(\r\n          \"alerts/error\",\r\n          \"Oops, something went wrong!\"\r\n        );\r\n      }\r\n    },\r\n\r\n    async update() {\r\n      if (!this.user.name) {\r\n        await this.$store.dispatch(\r\n          \"alerts/error\",\r\n          \"User name cannot be empty!\"\r\n        );\r\n        return;\r\n      }\r\n      try {\r\n        if (this.file) {\r\n          await this.$store.dispatch(\"users/upload\", {\r\n            user: this.user,\r\n            image: this.file,\r\n          });\r\n          this.user.profile_image = await this.$store.getters[\"users/url\"];\r\n        }\r\n        await this.$store.dispatch(\"users/update\", this.user);\r\n        await this.$store.dispatch(\r\n          \"alerts/success\",\r\n          \"User updated successfully.\"\r\n        );\r\n        this.goBack();\r\n      } catch (e) {\r\n        await this.$store.dispatch(\r\n          \"alerts/error\",\r\n          \"Oops, something went wrong!\"\r\n        );\r\n        this.setApiValidation(e.response.data.errors);\r\n      }\r\n    },\r\n\r\n    async getRoles() {\r\n      await this.$store.dispatch(\"roles/list\");\r\n      this.available_roles = await this.$store.getters[\"roles/dropdown\"];\r\n    },\r\n\r\n    onFileChange(e) {\r\n      let files = e.target.files || e.dataTransfer.files;\r\n      if (!files.length) return;\r\n      this.createImage(files[0]);\r\n    },\r\n\r\n    createImage(file) {\r\n      let reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        this.avatar_img = e.target.result;\r\n        this.file = file;\r\n      };\r\n      reader.readAsDataURL(file);\r\n    },\r\n\r\n    removeImage() {\r\n      this.avatar_img = null;\r\n    },\r\n\r\n    goBack() {\r\n      this.$router.push({ name: \"List Users\" });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.spacing {\r\n  padding-bottom: 1rem;\r\n}\r\n</style>\r\n"]}]}