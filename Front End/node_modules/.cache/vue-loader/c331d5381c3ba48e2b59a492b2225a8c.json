{"remainingRequest":"D:\\Cursuri\\sem2\\Programare cu aspecte\\QuestionAnswer\\Front End\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Cursuri\\sem2\\Programare cu aspecte\\QuestionAnswer\\Front End\\src\\components\\Inputs\\HtmlEditor.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Cursuri\\sem2\\Programare cu aspecte\\QuestionAnswer\\Front End\\src\\components\\Inputs\\HtmlEditor.vue","mtime":1615718057841},{"path":"D:\\Cursuri\\sem2\\Programare cu aspecte\\QuestionAnswer\\Front End\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615717989082},{"path":"D:\\Cursuri\\sem2\\Programare cu aspecte\\QuestionAnswer\\Front End\\node_modules\\babel-loader\\lib\\index.js","mtime":1615717984382},{"path":"D:\\Cursuri\\sem2\\Programare cu aspecte\\QuestionAnswer\\Front End\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615717989082},{"path":"D:\\Cursuri\\sem2\\Programare cu aspecte\\QuestionAnswer\\Front End\\node_modules\\vue-loader\\lib\\index.js","mtime":1615718052515}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQpleHBvcnQgZGVmYXVsdCB7DQogIG5hbWU6ICJodG1sLWVkaXRvciIsDQogIHByb3BzOiB7DQogICAgdmFsdWU6IHsNCiAgICAgIHR5cGU6IFN0cmluZywNCiAgICAgIGRlZmF1bHQ6ICIiDQogICAgfSwNCiAgICBuYW1lOiBTdHJpbmcNCiAgfSwNCiAgZGF0YSgpIHsNCiAgICByZXR1cm4gew0KICAgICAgZWRpdG9yOiBudWxsLA0KICAgICAgY29udGVudDogbnVsbCwNCiAgICAgIGxhc3RIdG1sVmFsdWU6ICIiLA0KICAgICAgZWRpdG9ySWQ6IG51bGwsDQogICAgICB0b29sYmFySWQ6IG51bGwNCiAgICB9Ow0KICB9LA0KICBtZXRob2RzOiB7DQogICAgaW5pdGlhbGl6ZShRdWlsbCkgew0KICAgICAgdGhpcy5lZGl0b3IgPSBuZXcgUXVpbGwoYCMke3RoaXMuZWRpdG9ySWR9YCwgew0KICAgICAgICB0aGVtZTogInNub3ciLA0KICAgICAgICBtb2R1bGVzOiB7DQogICAgICAgICAgdG9vbGJhcjogYCMke3RoaXMudG9vbGJhcklkfWANCiAgICAgICAgfQ0KICAgICAgfSk7DQoNCiAgICAgIGlmICh0aGlzLnZhbHVlLmxlbmd0aCA+IDApIHsNCiAgICAgICAgdGhpcy5lZGl0b3IucGFzdGVIVE1MKHRoaXMudmFsdWUpOw0KICAgICAgfQ0KDQogICAgICBsZXQgZWRpdG9yUmVmID0gdGhpcy4kcmVmcy5lZGl0b3I7DQogICAgICBsZXQgbm9kZSA9IGVkaXRvclJlZi5jaGlsZHJlblswXTsNCiAgICAgIHRoaXMuZWRpdG9yLm9uKCJ0ZXh0LWNoYW5nZSIsICgpID0+IHsNCiAgICAgICAgbGV0IGh0bWwgPSBub2RlLmlubmVySFRNTDsNCiAgICAgICAgaWYgKGh0bWwgPT09ICI8cD48YnI+PC9wPiIpIHsNCiAgICAgICAgICBodG1sID0gIiI7DQogICAgICAgIH0NCiAgICAgICAgdGhpcy5jb250ZW50ID0gaHRtbDsNCiAgICAgICAgdGhpcy4kZW1pdCgiaW5wdXQiLCB0aGlzLmNvbnRlbnQpOw0KICAgICAgfSk7DQogICAgfSwNCiAgICBwYXN0ZUhUTUwoKSB7DQogICAgICBpZiAoIXRoaXMuZWRpdG9yKSB7DQogICAgICAgIHJldHVybjsNCiAgICAgIH0NCiAgICAgIHRoaXMuZWRpdG9yLnBhc3RlSFRNTCh0aGlzLnZhbHVlKTsNCiAgICB9LA0KICAgIHJhbmRvbVN0cmluZygpIHsNCiAgICAgIGxldCB0ZXh0ID0gIiI7DQogICAgICBsZXQgcG9zc2libGUgPSAiQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5eiI7DQoNCiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgNTsgaSsrKQ0KICAgICAgICB0ZXh0ICs9IHBvc3NpYmxlLmNoYXJBdChNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBwb3NzaWJsZS5sZW5ndGgpKTsNCg0KICAgICAgcmV0dXJuIHRleHQ7DQogICAgfQ0KICB9LA0KICBhc3luYyBtb3VudGVkKCkgew0KICAgIGxldCBRdWlsbCA9IGF3YWl0IGltcG9ydCgicXVpbGwiKTsNCiAgICBRdWlsbCA9IFF1aWxsLmRlZmF1bHQgfHwgUXVpbGw7DQogICAgdGhpcy5lZGl0b3JJZCA9IHRoaXMucmFuZG9tU3RyaW5nKCk7DQogICAgdGhpcy50b29sYmFySWQgPSB0aGlzLnJhbmRvbVN0cmluZygpOw0KICAgIHRoaXMuJG5leHRUaWNrKCgpID0+IHsNCiAgICAgIHRoaXMuaW5pdGlhbGl6ZShRdWlsbCk7DQogICAgfSk7DQogIH0sDQogIHdhdGNoOiB7DQogICAgdmFsdWUobmV3VmFsKSB7DQogICAgICBpZiAobmV3VmFsICE9PSB0aGlzLmNvbnRlbnQpIHsNCiAgICAgICAgdGhpcy5wYXN0ZUhUTUwobmV3VmFsKTsNCiAgICAgIH0NCiAgICB9DQogIH0NCn07DQo="},{"version":3,"sources":["HtmlEditor.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"HtmlEditor.vue","sourceRoot":"src/components/Inputs","sourcesContent":["<template>\r\n  <div class=\"quill\">\r\n    <div :id=\"toolbarId\">\r\n      <div class=\"ql-formats\">\r\n        <button class=\"ql-bold\"></button>\r\n        <button class=\"ql-italic\"></button>\r\n        <button class=\"ql-underline\"></button>\r\n        <button class=\"ql-link\"></button>\r\n        <button class=\"ql-blockquote\"></button>\r\n        <button class=\"ql-code\"></button>\r\n        <button class=\"ql-image\"></button>\r\n        <button type=\"button\" class=\"ql-list\" value=\"ordered\"></button>\r\n        <button type=\"button\" class=\"ql-list\" value=\"bullet\"></button>\r\n      </div>\r\n    </div>\r\n    <div :id=\"editorId\" :name=\"name\" class=\"\" ref=\"editor\"></div>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  name: \"html-editor\",\r\n  props: {\r\n    value: {\r\n      type: String,\r\n      default: \"\"\r\n    },\r\n    name: String\r\n  },\r\n  data() {\r\n    return {\r\n      editor: null,\r\n      content: null,\r\n      lastHtmlValue: \"\",\r\n      editorId: null,\r\n      toolbarId: null\r\n    };\r\n  },\r\n  methods: {\r\n    initialize(Quill) {\r\n      this.editor = new Quill(`#${this.editorId}`, {\r\n        theme: \"snow\",\r\n        modules: {\r\n          toolbar: `#${this.toolbarId}`\r\n        }\r\n      });\r\n\r\n      if (this.value.length > 0) {\r\n        this.editor.pasteHTML(this.value);\r\n      }\r\n\r\n      let editorRef = this.$refs.editor;\r\n      let node = editorRef.children[0];\r\n      this.editor.on(\"text-change\", () => {\r\n        let html = node.innerHTML;\r\n        if (html === \"<p><br></p>\") {\r\n          html = \"\";\r\n        }\r\n        this.content = html;\r\n        this.$emit(\"input\", this.content);\r\n      });\r\n    },\r\n    pasteHTML() {\r\n      if (!this.editor) {\r\n        return;\r\n      }\r\n      this.editor.pasteHTML(this.value);\r\n    },\r\n    randomString() {\r\n      let text = \"\";\r\n      let possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\r\n\r\n      for (let i = 0; i < 5; i++)\r\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n\r\n      return text;\r\n    }\r\n  },\r\n  async mounted() {\r\n    let Quill = await import(\"quill\");\r\n    Quill = Quill.default || Quill;\r\n    this.editorId = this.randomString();\r\n    this.toolbarId = this.randomString();\r\n    this.$nextTick(() => {\r\n      this.initialize(Quill);\r\n    });\r\n  },\r\n  watch: {\r\n    value(newVal) {\r\n      if (newVal !== this.content) {\r\n        this.pasteHTML(newVal);\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n"]}]}