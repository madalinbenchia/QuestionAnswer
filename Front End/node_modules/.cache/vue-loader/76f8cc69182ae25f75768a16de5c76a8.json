{"remainingRequest":"D:\\laragon\\www\\QA\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\laragon\\www\\QA\\src\\views\\Examples\\UserManagement\\AddUserPage.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\laragon\\www\\QA\\src\\views\\Examples\\UserManagement\\AddUserPage.vue","mtime":1610299083811},{"path":"D:\\laragon\\www\\QA\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\laragon\\www\\QA\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\laragon\\www\\QA\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\laragon\\www\\QA\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgVmFsaWRhdGlvbkVycm9yIGZyb20gIkAvY29tcG9uZW50cy9WYWxpZGF0aW9uRXJyb3IudnVlIjsNCmltcG9ydCBmb3JtTWl4aW4gZnJvbSAiQC9taXhpbnMvZm9ybS1taXhpbiI7DQppbXBvcnQgQmFzZUlucHV0IGZyb20gIkAvY29tcG9uZW50cy9JbnB1dHMvQmFzZUlucHV0LnZ1ZSI7DQppbXBvcnQgeyBTZWxlY3QsIE9wdGlvbiB9IGZyb20gImVsZW1lbnQtdWkiOw0KaW1wb3J0IHsgY2xvbmVEZWVwIH0gZnJvbSAibG9kYXNoIjsNCmltcG9ydCBIdG1sRWRpdG9yIGZyb20gIkAvY29tcG9uZW50cy9JbnB1dHMvSHRtbEVkaXRvciI7DQppbXBvcnQgSW5wdXRUYWcgZnJvbSAidnVlLWlucHV0LXRhZyI7DQoNCmV4cG9ydCBkZWZhdWx0IHsNCiAgbGF5b3V0OiAiRGFzaGJvYXJkTGF5b3V0IiwNCiAgY29tcG9uZW50czogew0KICAgIEJhc2VJbnB1dCwNCiAgICBIdG1sRWRpdG9yLA0KICAgIFZhbGlkYXRpb25FcnJvciwNCiAgICBbU2VsZWN0Lm5hbWVdOiBTZWxlY3QsDQogICAgW09wdGlvbi5uYW1lXTogT3B0aW9uLA0KICAgIElucHV0VGFnDQogIH0sDQogIG1peGluczogW2Zvcm1NaXhpbl0sDQoNCiAgZGF0YSgpIHsNCiAgICByZXR1cm4gew0KICAgICAgcXVlc3Rpb246IHsNCiAgICAgICAgYm9keTogIiIsDQogICAgICAgIHRhZ3M6ICIiLA0KICAgICAgICB0aXRsZTogIiIsDQogICAgICAgIG93bmVydXNlcmlkOiAiMSINCiAgICAgIH0NCiAgICB9Ow0KICB9LA0KDQogIG1ldGhvZHM6IHsNCiAgICB0b1VwcGVyQ2FzZSh2KSB7DQogICAgICByZXR1cm4gIjwiICsgdiArICI+IjsNCiAgICB9LA0KICAgIGdvQmFjaygpIHsNCiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHsgbmFtZTogIkxpc3QgVXNlcnMiIH0pOw0KICAgIH0sDQoNCiAgICBhc3luYyBoYW5kbGVTdWJtaXQoKSB7DQogICAgICB0cnkgew0KICAgICAgICB0aGlzLnF1ZXN0aW9uLnRhZ3MgPSB0aGlzLnF1ZXN0aW9uLnRhZ3MyLnRvU3RyaW5nKCkucmVwbGFjZSgiLCIsICIiKTsNCg0KICAgICAgICBhd2FpdCB0aGlzLiRzdG9yZS5kaXNwYXRjaCgicXVlc3Rpb25zL2FkZCIsIHRoaXMucXVlc3Rpb24pOw0KICAgICAgICB0aGlzLnF1ZXN0aW9uID0gYXdhaXQgdGhpcy4kc3RvcmUuZ2V0dGVyc1sicXVlc3Rpb25zL3F1ZXN0aW9uIl07DQogICAgICAgIGNvbnNvbGUubG9nKHRoaXMucXVlc3Rpb24pOw0KICAgICAgICB0aGlzLiRub3RpZnkoew0KICAgICAgICAgIHR5cGU6ICJzdWNjZXNzIiwNCiAgICAgICAgICBtZXNzYWdlOiAiUXVlc3Rpb24gYWRkZWQgc3VjY2Vzc2Z1bGx5LiINCiAgICAgICAgfSk7DQogICAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHsNCiAgICAgICAgICBuYW1lOiAiRWRpdCBVc2VyIiwNCiAgICAgICAgICBwYXJhbXM6IHsgaWQ6IHRoaXMucXVlc3Rpb24uSWQgfQ0KICAgICAgICB9KTsNCiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgIHRoaXMuJG5vdGlmeSh7DQogICAgICAgICAgdHlwZTogImRhbmdlciIsDQogICAgICAgICAgbWVzc2FnZTogIk9vcHMsIHNvbWV0aGluZyB3ZW50IHdyb25nISINCiAgICAgICAgfSk7DQogICAgICAgIC8vIHRoaXMuc2V0QXBpVmFsaWRhdGlvbihlcnJvci5yZXNwb25zZS5kYXRhLmVycm9ycyk7DQogICAgICB9DQogICAgfQ0KICB9DQp9Ow0K"},{"version":3,"sources":["AddUserPage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+EA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AddUserPage.vue","sourceRoot":"src/views/Examples/UserManagement","sourcesContent":["<template>\r\n  <div class=\"container-fluid mt-5\">\r\n    <div class=\"row\">\r\n      <div class=\"col-xl-12 order-xl-1\">\r\n        <card>\r\n          <div slot=\"header\" class=\"row align-items-center\">\r\n            <div class=\"col-8\">\r\n              <h3 class=\"mb-0\">Ask a public question</h3>\r\n            </div>\r\n            <div class=\"col-4 text-right\">\r\n              <base-button\r\n                @click=\"goBack\"\r\n                type=\"button\"\r\n                class=\"btn btn-sm btn-primary\"\r\n                >Homepage</base-button\r\n              >\r\n            </div>\r\n          </div>\r\n          <div class=\"card-body\">\r\n            <form ref=\"profile_form\" @submit.prevent=\"handleSubmit\">\r\n              <label for=\"Title\" style=\"font-weight: 700; font-size:19px\"\r\n                >Title</label\r\n              >\r\n              <p\r\n                style=\"color: darkgray;margin-top: -10px;margin-bottom: 10px;font-style: italic;\"\r\n              >\r\n                Be specific and imagine youâ€™re asking a question to another\r\n                person\r\n              </p>\r\n              <base-input\r\n                name=\"title\"\r\n                type=\"text\"\r\n                maxlength=\"300\"\r\n                placeholder=\"e.g. Is there an R function for finding the index of an element in a vector?\"\r\n                autocomplete=\"off\"\r\n                v-model=\"question.title\"\r\n              />\r\n\r\n              <label for=\"Body\" style=\"font-weight: 700; font-size:19px\"\r\n                >Body</label\r\n              >\r\n              <p\r\n                style=\"color: darkgray;margin-top: -10px;margin-bottom: 10px;font-style: italic;\"\r\n              >\r\n                Include all the information someone would need to answer your\r\n                question\r\n              </p>\r\n              <html-editor v-model=\"question.body\" name=\"editor\" />\r\n\r\n              <label for=\"Title\" style=\"font-weight: 700; font-size:19px\"\r\n                >Tags</label\r\n              >\r\n              <p\r\n                style=\"color: darkgray;margin-top: -10px;margin-bottom: 10px;font-style: italic;\"\r\n              >\r\n                Add up to 5 tags to describe what your question is about\r\n              </p>\r\n              <input-tag\r\n                v-model=\"question.tags2\"\r\n                :add-tag-on-keys=\"[13, 32]\"\r\n                placeholder=\"e.g. (javascript, api)\"\r\n                :before-adding=\"toUpperCase\"\r\n              ></input-tag>\r\n\r\n              <base-button\r\n                type=\"button\"\r\n                class=\"btn btn-sm btn-primary mt-4 ml-0\"\r\n                native-type=\"submit\"\r\n              >\r\n                Post your question\r\n              </base-button>\r\n            </form>\r\n          </div>\r\n        </card>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport ValidationError from \"@/components/ValidationError.vue\";\r\nimport formMixin from \"@/mixins/form-mixin\";\r\nimport BaseInput from \"@/components/Inputs/BaseInput.vue\";\r\nimport { Select, Option } from \"element-ui\";\r\nimport { cloneDeep } from \"lodash\";\r\nimport HtmlEditor from \"@/components/Inputs/HtmlEditor\";\r\nimport InputTag from \"vue-input-tag\";\r\n\r\nexport default {\r\n  layout: \"DashboardLayout\",\r\n  components: {\r\n    BaseInput,\r\n    HtmlEditor,\r\n    ValidationError,\r\n    [Select.name]: Select,\r\n    [Option.name]: Option,\r\n    InputTag\r\n  },\r\n  mixins: [formMixin],\r\n\r\n  data() {\r\n    return {\r\n      question: {\r\n        body: \"\",\r\n        tags: \"\",\r\n        title: \"\",\r\n        owneruserid: \"1\"\r\n      }\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    toUpperCase(v) {\r\n      return \"<\" + v + \">\";\r\n    },\r\n    goBack() {\r\n      this.$router.push({ name: \"List Users\" });\r\n    },\r\n\r\n    async handleSubmit() {\r\n      try {\r\n        this.question.tags = this.question.tags2.toString().replace(\",\", \"\");\r\n\r\n        await this.$store.dispatch(\"questions/add\", this.question);\r\n        this.question = await this.$store.getters[\"questions/question\"];\r\n        console.log(this.question);\r\n        this.$notify({\r\n          type: \"success\",\r\n          message: \"Question added successfully.\"\r\n        });\r\n        this.$router.push({\r\n          name: \"Edit User\",\r\n          params: { id: this.question.Id }\r\n        });\r\n      } catch (error) {\r\n        this.$notify({\r\n          type: \"danger\",\r\n          message: \"Oops, something went wrong!\"\r\n        });\r\n        // this.setApiValidation(error.response.data.errors);\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n"]}]}