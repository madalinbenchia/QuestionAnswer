{"remainingRequest":"D:\\Cursuri\\sem2\\Programare cu aspecte\\QuestionAnswer\\Front End\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Cursuri\\sem2\\Programare cu aspecte\\QuestionAnswer\\Front End\\src\\components\\BaseButton.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"D:\\Cursuri\\sem2\\Programare cu aspecte\\QuestionAnswer\\Front End\\src\\components\\BaseButton.vue","mtime":1615718057800},{"path":"D:\\Cursuri\\sem2\\Programare cu aspecte\\QuestionAnswer\\Front End\\node_modules\\css-loader\\dist\\cjs.js","mtime":1615717993329},{"path":"D:\\Cursuri\\sem2\\Programare cu aspecte\\QuestionAnswer\\Front End\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1615718052517},{"path":"D:\\Cursuri\\sem2\\Programare cu aspecte\\QuestionAnswer\\Front End\\node_modules\\postcss-loader\\src\\index.js","mtime":1615718039431},{"path":"D:\\Cursuri\\sem2\\Programare cu aspecte\\QuestionAnswer\\Front End\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1615718046500},{"path":"D:\\Cursuri\\sem2\\Programare cu aspecte\\QuestionAnswer\\Front End\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615717989082},{"path":"D:\\Cursuri\\sem2\\Programare cu aspecte\\QuestionAnswer\\Front End\\node_modules\\vue-loader\\lib\\index.js","mtime":1615718052515}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmJhc2UtYnV0dG9uIHsKICBkaXNwbGF5OiBpbmxpbmUtZmxleDsKICBhbGlnbi1pdGVtczogY2VudGVyOwogIGp1c3RpZnktY29udGVudDogY2VudGVyOwoKICBpIHsKICAgIHBhZGRpbmc6IDAgM3B4OwogIH0KfQo="},{"version":3,"sources":["BaseButton.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"BaseButton.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <component\r\n    :is=\"tag\"\r\n    :type=\"tag === 'button' ? nativeType : ''\"\r\n    :disabled=\"disabled || loading\"\r\n    @click=\"handleClick\"\r\n    class=\"btn base-button\"\r\n    :class=\"[\r\n      { 'rounded-circle': round },\r\n      { 'btn-block': block },\r\n      { 'btn-wd': wide },\r\n      { 'btn-icon btn-fab': icon },\r\n      { [`btn-${type}`]: type && !outline },\r\n      { [`btn-${size}`]: size },\r\n      { [`btn-outline-${type}`]: outline && type },\r\n      { 'btn-link': link },\r\n      { disabled: disabled && tag !== 'button' }\r\n    ]\"\r\n  >\r\n    <slot name=\"loading\">\r\n      <i v-if=\"loading\" class=\"fas fa-spinner fa-spin\"></i>\r\n    </slot>\r\n    <slot></slot>\r\n  </component>\r\n</template>\r\n<script>\r\nexport default {\r\n  name: 'base-button',\r\n  props: {\r\n    tag: {\r\n      type: String,\r\n      default: 'button',\r\n      description: 'Button html tag'\r\n    },\r\n    round: Boolean,\r\n    icon: Boolean,\r\n    block: Boolean,\r\n    loading: Boolean,\r\n    wide: Boolean,\r\n    disabled: Boolean,\r\n    type: {\r\n      type: String,\r\n      default: 'default',\r\n      description: 'Button type (primary|secondary|danger etc)'\r\n    },\r\n    nativeType: {\r\n      type: String,\r\n      default: 'button',\r\n      description: 'Button native type (e.g button, input etc)'\r\n    },\r\n    size: {\r\n      type: String,\r\n      default: '',\r\n      description: 'Button size (sm|lg)'\r\n    },\r\n    outline: {\r\n      type: Boolean,\r\n      description: 'Whether button is outlined (only border has color)'\r\n    },\r\n    link: {\r\n      type: Boolean,\r\n      description: 'Whether button is a link (no borders or background)'\r\n    }\r\n  },\r\n  methods: {\r\n    handleClick(evt) {\r\n      this.$emit('click', evt);\r\n    }\r\n  }\r\n};\r\n</script>\r\n<style lang=\"scss\">\r\n  .base-button {\r\n    display: inline-flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    i {\r\n      padding: 0 3px;\r\n    }\r\n  }\r\n</style>\r\n"]}]}