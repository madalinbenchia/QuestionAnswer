{"remainingRequest":"D:\\laragon\\www\\vue-argon-dashboard-pro-json-api\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\laragon\\www\\vue-argon-dashboard-pro-json-api\\src\\components\\WorldMap\\WorldMap.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\laragon\\www\\vue-argon-dashboard-pro-json-api\\src\\components\\WorldMap\\WorldMap.vue","mtime":1599650740878},{"path":"D:\\laragon\\www\\vue-argon-dashboard-pro-json-api\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\laragon\\www\\vue-argon-dashboard-pro-json-api\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\laragon\\www\\vue-argon-dashboard-pro-json-api\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\laragon\\www\\vue-argon-dashboard-pro-json-api\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KDQppbXBvcnQgJ2QzJzsNCmltcG9ydCAqIGFzIGQzIGZyb20gJ2QzJzsNCmltcG9ydCAndG9wb2pzb24nOw0KaW1wb3J0IHsgdGhyb3R0bGUgfSBmcm9tICdAL3V0aWwvdGhyb3R0bGUnOw0KDQpleHBvcnQgZGVmYXVsdCB7DQogIG5hbWU6ICd3b3JsZC1tYXAnLA0KICBwcm9wczogew0KICAgIG1hcERhdGE6IHsNCiAgICAgIHR5cGU6IE9iamVjdCwNCiAgICAgIGRlZmF1bHQ6ICgpID0+ICh7fSkNCiAgICB9LA0KICAgIHBvaW50czogew0KICAgICAgdHlwZTogQXJyYXksDQogICAgICBkZWZhdWx0OiAoKSA9PiBbXQ0KICAgIH0NCiAgfSwNCiAgZGF0YSgpIHsNCiAgICByZXR1cm4gew0KICAgICAgaWQ6IHRoaXMucmFuZG9tU3RyaW5nKCksDQogICAgICBjb2xvcjE6ICcjZjZmOWZjJywNCiAgICAgIGNvbG9yMjogJyNhZGI1YmQnLA0KICAgICAgaGlnaGxpZ2h0RmlsbENvbG9yOiAnI2NlZDRkYScsDQogICAgICBib3JkZXJDb2xvcjogJ3doaXRlJywNCiAgICAgIGhpZ2hsaWdodEJvcmRlckNvbG9yOiAnd2hpdGUnLA0KICAgICAgYnViYmxlSGlnaGxpZ2h0RmlsbENvbG9yOiAnIzExY2RlZicsDQogICAgICBidWJibGVGaWxsQ29sb3I6ICcjZmI2MzQwJw0KICAgIH07DQogIH0sDQogIG1ldGhvZHM6IHsNCiAgICBnZW5lcmF0ZUNvbG9ycyhsZW5ndGgpIHsNCiAgICAgIHJldHVybiBkMw0KICAgICAgICAuc2NhbGVMaW5lYXIoKQ0KICAgICAgICAuZG9tYWluKFswLCBsZW5ndGhdKQ0KICAgICAgICAucmFuZ2UoW3RoaXMuY29sb3IxLCB0aGlzLmNvbG9yMl0pOw0KICAgIH0sDQogICAgZ2VuZXJhdGVNYXBDb2xvcnMoKSB7DQogICAgICBsZXQgbWFwRGF0YVZhbHVlcyA9IE9iamVjdC52YWx1ZXModGhpcy5tYXBEYXRhKTsNCiAgICAgIGxldCBtYXhWYWwgPSBNYXRoLm1heCguLi5tYXBEYXRhVmFsdWVzKTsNCiAgICAgIGxldCBjb2xvcnMgPSB0aGlzLmdlbmVyYXRlQ29sb3JzKG1heFZhbCk7DQogICAgICBsZXQgbWFwRGF0YSA9IHt9Ow0KICAgICAgbGV0IGZpbGxzID0gew0KICAgICAgICBkZWZhdWx0RmlsbDogJyNFREYwRjInDQogICAgICB9Ow0KICAgICAgZm9yIChsZXQga2V5IGluIHRoaXMubWFwRGF0YSkgew0KICAgICAgICBsZXQgdmFsID0gdGhpcy5tYXBEYXRhW2tleV07DQogICAgICAgIGZpbGxzW2tleV0gPSBjb2xvcnModmFsKTsNCiAgICAgICAgbWFwRGF0YVtrZXldID0gew0KICAgICAgICAgIGZpbGxLZXk6IGtleSwNCiAgICAgICAgICB2YWx1ZTogdmFsDQogICAgICAgIH07DQogICAgICB9DQogICAgICByZXR1cm4gew0KICAgICAgICBtYXBEYXRhLA0KICAgICAgICBmaWxscw0KICAgICAgfTsNCiAgICB9LA0KICAgIGFzeW5jIGluaXRWZWN0b3JNYXAoKSB7DQogICAgICBsZXQgRGF0YU1hcCA9IGF3YWl0IGltcG9ydCgnZGF0YW1hcHMnKTsNCiAgICAgIERhdGFNYXAgPSBEYXRhTWFwLmRlZmF1bHQgfHwgRGF0YU1hcA0KICAgICAgbGV0IHsgZmlsbHMsIG1hcERhdGEgfSA9IHRoaXMuZ2VuZXJhdGVNYXBDb2xvcnMoKTsNCiAgICAgIGxldCB3b3JsZE1hcCA9IG5ldyBEYXRhTWFwKHsNCiAgICAgICAgc2NvcGU6ICd3b3JsZCcsDQogICAgICAgIGVsZW1lbnQ6IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHRoaXMuaWQpLA0KICAgICAgICBmaWxscywNCiAgICAgICAgZGF0YTogbWFwRGF0YSwNCiAgICAgICAgcmVzcG9uc2l2ZTogdHJ1ZSwNCiAgICAgICAgZ2VvZ3JhcGh5Q29uZmlnOiB7DQogICAgICAgICAgYm9yZGVyQ29sb3I6IHRoaXMuYm9yZGVyQ29sb3IsDQogICAgICAgICAgYm9yZGVyV2lkdGg6IDEsDQogICAgICAgICAgYm9yZGVyT3BhY2l0eTogMSwNCiAgICAgICAgICBoaWdobGlnaHRGaWxsQ29sb3I6IHRoaXMuaGlnaGxpZ2h0RmlsbENvbG9yLA0KICAgICAgICAgIGhpZ2hsaWdodEJvcmRlckNvbG9yOiB0aGlzLmhpZ2hsaWdodEJvcmRlckNvbG9yLA0KICAgICAgICAgIGhpZ2hsaWdodEJvcmRlcldpZHRoOiAxLA0KICAgICAgICAgIGhpZ2hsaWdodEJvcmRlck9wYWNpdHk6IDENCiAgICAgICAgfQ0KICAgICAgfSk7DQogICAgICBsZXQgYnViYmxlT3B0aW9ucyA9IHsNCiAgICAgICAgcmFkaXVzOiAyLA0KICAgICAgICBib3JkZXJXaWR0aDogNCwNCiAgICAgICAgaGlnaGxpZ2h0Qm9yZGVyV2lkdGg6IDQsDQogICAgICAgIGZpbGxLZXk6IHRoaXMuYnViYmxlRmlsbENvbG9yLA0KICAgICAgICBmaWxsQ29sb3I6IHRoaXMuYnViYmxlRmlsbENvbG9yLA0KICAgICAgICBib3JkZXJDb2xvcjogdGhpcy5idWJibGVGaWxsQ29sb3IsDQogICAgICAgIGhpZ2hsaWdodEZpbGxDb2xvcjogdGhpcy5idWJibGVIaWdobGlnaHRGaWxsQ29sb3IsDQogICAgICAgIGhpZ2hsaWdodEJvcmRlckNvbG9yOiB0aGlzLmJ1YmJsZUhpZ2hsaWdodEZpbGxDb2xvcg0KICAgICAgfQ0KICAgICAgbGV0IGJ1YmJsZVBvaW50cyA9IHRoaXMucG9pbnRzLm1hcChwb2ludCA9PiB7DQogICAgICAgIHJldHVybiB7DQogICAgICAgICAgLi4uYnViYmxlT3B0aW9ucywNCiAgICAgICAgICAuLi5wb2ludA0KICAgICAgICB9DQogICAgICB9KQ0KICAgICAgd29ybGRNYXAuYnViYmxlcyhidWJibGVQb2ludHMsIHsNCiAgICAgICAgcG9wdXBUZW1wbGF0ZTogZnVuY3Rpb24oZ2VvLCBkYXRhKSB7DQogICAgICAgICAgcmV0dXJuICc8ZGl2IGNsYXNzPSJob3ZlcmluZm8iPicgKyBkYXRhLm5hbWUNCiAgICAgICAgfQ0KICAgICAgfSk7DQogICAgICBsZXQgcmVzaXplRnVuYyA9IHdvcmxkTWFwLnJlc2l6ZS5iaW5kKHdvcmxkTWFwKTsNCiAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKA0KICAgICAgICAncmVzaXplJywNCiAgICAgICAgKCkgPT4gew0KICAgICAgICAgIHRocm90dGxlKHJlc2l6ZUZ1bmMsIDQwKTsNCiAgICAgICAgfSwNCiAgICAgICAgZmFsc2UNCiAgICAgICk7DQogICAgfSwNCiAgICByYW5kb21TdHJpbmcoKSB7DQogICAgICBsZXQgdGV4dCA9ICIiOw0KICAgICAgbGV0IHBvc3NpYmxlID0gIkFCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXoiOw0KDQogICAgICBmb3IgKGxldCBpID0gMDsgaSA8IDU7IGkrKykNCiAgICAgICAgdGV4dCArPSBwb3NzaWJsZS5jaGFyQXQoTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogcG9zc2libGUubGVuZ3RoKSk7DQoNCiAgICAgIHJldHVybiB0ZXh0Ow0KICAgIH0NCiAgfSwNCiAgYXN5bmMgbW91bnRlZCgpIHsNCiAgICB0aGlzLmluaXRWZWN0b3JNYXAoKTsNCiAgfQ0KfTsNCg=="},{"version":3,"sources":["WorldMap.vue"],"names":[],"mappingsfile":"WorldMap.vue","sourceRoot":"src/components/WorldMap","sourcesContent":["<template>\r\n  <div :id=\"id\" class=\"world-map\"></div>\r\n</template>\r\n<script>\r\nimport 'd3';\r\nimport * as d3 from 'd3';\r\nimport 'topojson';\r\nimport { throttle } from '@/util/throttle';\r\n\r\nexport default {\r\n  name: 'world-map',\r\n  props: {\r\n    mapData: {\r\n      type: Object,\r\n      default: () => ({})\r\n    },\r\n    points: {\r\n      type: Array,\r\n      default: () => []\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      id: this.randomString(),\r\n      color1: '#f6f9fc',\r\n      color2: '#adb5bd',\r\n      highlightFillColor: '#ced4da',\r\n      borderColor: 'white',\r\n      highlightBorderColor: 'white',\r\n      bubbleHighlightFillColor: '#11cdef',\r\n      bubbleFillColor: '#fb6340'\r\n    };\r\n  },\r\n  methods: {\r\n    generateColors(length) {\r\n      return d3\r\n        .scaleLinear()\r\n        .domain([0, length])\r\n        .range([this.color1, this.color2]);\r\n    },\r\n    generateMapColors() {\r\n      let mapDataValues = Object.values(this.mapData);\r\n      let maxVal = Math.max(...mapDataValues);\r\n      let colors = this.generateColors(maxVal);\r\n      let mapData = {};\r\n      let fills = {\r\n        defaultFill: '#EDF0F2'\r\n      };\r\n      for (let key in this.mapData) {\r\n        let val = this.mapData[key];\r\n        fills[key] = colors(val);\r\n        mapData[key] = {\r\n          fillKey: key,\r\n          value: val\r\n        };\r\n      }\r\n      return {\r\n        mapData,\r\n        fills\r\n      };\r\n    },\r\n    async initVectorMap() {\r\n      let DataMap = await import('datamaps');\r\n      DataMap = DataMap.default || DataMap\r\n      let { fills, mapData } = this.generateMapColors();\r\n      let worldMap = new DataMap({\r\n        scope: 'world',\r\n        element: document.getElementById(this.id),\r\n        fills,\r\n        data: mapData,\r\n        responsive: true,\r\n        geographyConfig: {\r\n          borderColor: this.borderColor,\r\n          borderWidth: 1,\r\n          borderOpacity: 1,\r\n          highlightFillColor: this.highlightFillColor,\r\n          highlightBorderColor: this.highlightBorderColor,\r\n          highlightBorderWidth: 1,\r\n          highlightBorderOpacity: 1\r\n        }\r\n      });\r\n      let bubbleOptions = {\r\n        radius: 2,\r\n        borderWidth: 4,\r\n        highlightBorderWidth: 4,\r\n        fillKey: this.bubbleFillColor,\r\n        fillColor: this.bubbleFillColor,\r\n        borderColor: this.bubbleFillColor,\r\n        highlightFillColor: this.bubbleHighlightFillColor,\r\n        highlightBorderColor: this.bubbleHighlightFillColor\r\n      }\r\n      let bubblePoints = this.points.map(point => {\r\n        return {\r\n          ...bubbleOptions,\r\n          ...point\r\n        }\r\n      })\r\n      worldMap.bubbles(bubblePoints, {\r\n        popupTemplate: function(geo, data) {\r\n          return '<div class=\"hoverinfo\">' + data.name\r\n        }\r\n      });\r\n      let resizeFunc = worldMap.resize.bind(worldMap);\r\n      window.addEventListener(\r\n        'resize',\r\n        () => {\r\n          throttle(resizeFunc, 40);\r\n        },\r\n        false\r\n      );\r\n    },\r\n    randomString() {\r\n      let text = \"\";\r\n      let possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\r\n\r\n      for (let i = 0; i < 5; i++)\r\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n\r\n      return text;\r\n    }\r\n  },\r\n  async mounted() {\r\n    this.initVectorMap();\r\n  }\r\n};\r\n</script>\r\n<style></style>\r\n"]}]}