{"remainingRequest":"D:\\laragon\\www\\vue-argon-dashboard-pro-json-api\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\laragon\\www\\vue-argon-dashboard-pro-json-api\\src\\components\\Inputs\\HtmlEditor.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\laragon\\www\\vue-argon-dashboard-pro-json-api\\src\\components\\Inputs\\HtmlEditor.vue","mtime":1600346674569},{"path":"D:\\laragon\\www\\vue-argon-dashboard-pro-json-api\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\laragon\\www\\vue-argon-dashboard-pro-json-api\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\laragon\\www\\vue-argon-dashboard-pro-json-api\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\laragon\\www\\vue-argon-dashboard-pro-json-api\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnaHRtbC1lZGl0b3InLAogIHByb3BzOiB7CiAgICB2YWx1ZTogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICcnCiAgICB9LAogICAgbmFtZTogU3RyaW5nCiAgfSwKICBkYXRhICgpIHsKICAgIHJldHVybiB7CiAgICAgIGVkaXRvcjogbnVsbCwKICAgICAgY29udGVudDogbnVsbCwKICAgICAgbGFzdEh0bWxWYWx1ZTogJycsCiAgICAgIGVkaXRvcklkOiBudWxsLAogICAgICB0b29sYmFySWQ6IG51bGwKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGluaXRpYWxpemUgKFF1aWxsKSB7CiAgICAgIHRoaXMuZWRpdG9yID0gbmV3IFF1aWxsKGAjJHt0aGlzLmVkaXRvcklkfWAsIHsKICAgICAgICB0aGVtZTogJ3Nub3cnLAogICAgICAgIG1vZHVsZXM6IHsKICAgICAgICAgIHRvb2xiYXI6IGAjJHt0aGlzLnRvb2xiYXJJZH1gCiAgICAgICAgfQogICAgICB9KQoKICAgICAgaWYgKHRoaXMudmFsdWUubGVuZ3RoID4gMCkgewogICAgICAgIHRoaXMuZWRpdG9yLnBhc3RlSFRNTCh0aGlzLnZhbHVlKQogICAgICB9CgogICAgICBsZXQgZWRpdG9yUmVmID0gdGhpcy4kcmVmcy5lZGl0b3I7CiAgICAgIGxldCBub2RlID0gZWRpdG9yUmVmLmNoaWxkcmVuWzBdOwogICAgICB0aGlzLmVkaXRvci5vbigndGV4dC1jaGFuZ2UnLCAoKSA9PiB7CiAgICAgICAgbGV0IGh0bWwgPSBub2RlLmlubmVySFRNTAogICAgICAgIGlmIChodG1sID09PSAnPHA+PGJyPjwvcD4nKSB7CiAgICAgICAgICBodG1sID0gJyc7CiAgICAgICAgfQogICAgICAgIHRoaXMuY29udGVudCA9IGh0bWwKICAgICAgICB0aGlzLiRlbWl0KCdpbnB1dCcsIHRoaXMuY29udGVudCk7CiAgICAgIH0pCiAgICB9LAogICAgcGFzdGVIVE1MICgpIHsKICAgICAgaWYgKCF0aGlzLmVkaXRvcikgewogICAgICAgIHJldHVybgogICAgICB9CiAgICAgIHRoaXMuZWRpdG9yLnBhc3RlSFRNTCh0aGlzLnZhbHVlKQogICAgfSwKICAgIHJhbmRvbVN0cmluZygpIHsKICAgICAgbGV0IHRleHQgPSAiIjsKICAgICAgbGV0IHBvc3NpYmxlID0gIkFCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXoiOwoKICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCA1OyBpKyspCiAgICAgICAgdGV4dCArPSBwb3NzaWJsZS5jaGFyQXQoTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogcG9zc2libGUubGVuZ3RoKSk7CgogICAgICByZXR1cm4gdGV4dDsKICAgIH0KICB9LAogIGFzeW5jIG1vdW50ZWQgKCkgewogICAgbGV0IFF1aWxsID0gYXdhaXQgaW1wb3J0KCdxdWlsbCcpCiAgICBRdWlsbCA9IFF1aWxsLmRlZmF1bHQgfHwgUXVpbGwKICAgIHRoaXMuZWRpdG9ySWQgPSB0aGlzLnJhbmRvbVN0cmluZygpOwogICAgdGhpcy50b29sYmFySWQgPSB0aGlzLnJhbmRvbVN0cmluZygpOwogICAgdGhpcy4kbmV4dFRpY2soKCkgPT4gewogICAgICB0aGlzLmluaXRpYWxpemUoUXVpbGwpCiAgICB9KTsKICB9LAogIHdhdGNoOiB7CiAgICB2YWx1ZSAobmV3VmFsKSB7CiAgICAgIGlmIChuZXdWYWwgIT09IHRoaXMuY29udGVudCkgewogICAgICAgIHRoaXMucGFzdGVIVE1MKG5ld1ZhbCk7CiAgICAgIH0KICAgIH0KICB9Cn0K"},{"version":3,"sources":["HtmlEditor.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"HtmlEditor.vue","sourceRoot":"src/components/Inputs","sourcesContent":["<template>\r\n    <div class=\"quill\">\r\n        <div :id=\"toolbarId\">\r\n            <div class=\"ql-formats\">\r\n                <button class=\"ql-bold\"></button>\r\n                <button class=\"ql-italic\"></button>\r\n                <button class=\"ql-underline\"></button>\r\n                <button class=\"ql-link\"></button>\r\n                <button class=\"ql-blockquote\"></button>\r\n                <button class=\"ql-code\"></button>\r\n                <button class=\"ql-image\"></button>\r\n                <button type=\"button\" class=\"ql-list\" value=\"ordered\"></button>\r\n                <button type=\"button\" class=\"ql-list\" value=\"bullet\"></button>\r\n            </div>\r\n        </div>\r\n        <div :id=\"editorId\" :name=\"name\" class=\"\" ref=\"editor\">\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\n  export default {\r\n    name: 'html-editor',\r\n    props: {\r\n      value: {\r\n        type: String,\r\n        default: ''\r\n      },\r\n      name: String\r\n    },\r\n    data () {\r\n      return {\r\n        editor: null,\r\n        content: null,\r\n        lastHtmlValue: '',\r\n        editorId: null,\r\n        toolbarId: null\r\n      }\r\n    },\r\n    methods: {\r\n      initialize (Quill) {\r\n        this.editor = new Quill(`#${this.editorId}`, {\r\n          theme: 'snow',\r\n          modules: {\r\n            toolbar: `#${this.toolbarId}`\r\n          }\r\n        })\r\n\r\n        if (this.value.length > 0) {\r\n          this.editor.pasteHTML(this.value)\r\n        }\r\n\r\n        let editorRef = this.$refs.editor;\r\n        let node = editorRef.children[0];\r\n        this.editor.on('text-change', () => {\r\n          let html = node.innerHTML\r\n          if (html === '<p><br></p>') {\r\n            html = '';\r\n          }\r\n          this.content = html\r\n          this.$emit('input', this.content);\r\n        })\r\n      },\r\n      pasteHTML () {\r\n        if (!this.editor) {\r\n          return\r\n        }\r\n        this.editor.pasteHTML(this.value)\r\n      },\r\n      randomString() {\r\n        let text = \"\";\r\n        let possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\r\n\r\n        for (let i = 0; i < 5; i++)\r\n          text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n\r\n        return text;\r\n      }\r\n    },\r\n    async mounted () {\r\n      let Quill = await import('quill')\r\n      Quill = Quill.default || Quill\r\n      this.editorId = this.randomString();\r\n      this.toolbarId = this.randomString();\r\n      this.$nextTick(() => {\r\n        this.initialize(Quill)\r\n      });\r\n    },\r\n    watch: {\r\n      value (newVal) {\r\n        if (newVal !== this.content) {\r\n          this.pasteHTML(newVal);\r\n        }\r\n      }\r\n    }\r\n  }\r\n</script>\r\n"]}]}