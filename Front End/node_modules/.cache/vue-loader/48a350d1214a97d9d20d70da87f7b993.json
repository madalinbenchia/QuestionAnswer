{"remainingRequest":"D:\\laragon\\www\\vue-argon-dashboard-pro-json-api\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\laragon\\www\\vue-argon-dashboard-pro-json-api\\src\\views\\Examples\\TagManagement\\AddTagPage.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"D:\\laragon\\www\\vue-argon-dashboard-pro-json-api\\src\\views\\Examples\\TagManagement\\AddTagPage.vue","mtime":1599829088480},{"path":"D:\\laragon\\www\\vue-argon-dashboard-pro-json-api\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\laragon\\www\\vue-argon-dashboard-pro-json-api\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\laragon\\www\\vue-argon-dashboard-pro-json-api\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\laragon\\www\\vue-argon-dashboard-pro-json-api\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\laragon\\www\\vue-argon-dashboard-pro-json-api\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\laragon\\www\\vue-argon-dashboard-pro-json-api\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQouc3BhY2luZyB7DQogIHBhZGRpbmctYm90dG9tOiAxcmVtOw0KfQ0K"},{"version":3,"sources":["AddTagPage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyHA;AACA;AACA","file":"AddTagPage.vue","sourceRoot":"src/views/Examples/TagManagement","sourcesContent":["<template>\r\n  <div class=\"md-layout\">\r\n    <div class=\"md-layout-item md-small-size-100\">\r\n      <md-card>\r\n        <md-card-header class=\"md-card-header-icon md-card-header-green\">\r\n          <div class=\"card-icon\">\r\n            <md-icon>tag</md-icon>\r\n          </div>\r\n          <h4 class=\"title\">Add Tag</h4>\r\n        </md-card-header>\r\n\r\n        <form @submit.prevent=\"add\">\r\n          <md-card-content>\r\n            <div class=\"text-right\">\r\n              <md-button @click=\"goBack\" class=\"md-primary md-dense\">\r\n                Back to List\r\n              </md-button>\r\n            </div>\r\n\r\n            <div class=\"md-layout spacing\">\r\n              <label class=\"md-layout-item md-size-25 md-form-label\">\r\n                Name\r\n              </label>\r\n              <div class=\"md-layout-item\">\r\n                <md-field class=\"md-invalid\">\r\n                  <md-input v-model=\"tag.name\" />\r\n                  <validation-error :errors=\"apiValidationErrors.name\" />\r\n                </md-field>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"md-layout\">\r\n              <label class=\"md-layout-item md-size-25 md-form-label\">\r\n                Color\r\n              </label>\r\n              <div class=\"md-layout-item md-alignment-center\">\r\n                <md-field class=\"md-invalid\">\r\n                  <color-picker v-model=\"color\" style=\"width: 100%\" />\r\n                  <validation-error :errors=\"apiValidationErrors.color\" />\r\n                </md-field>\r\n              </div>\r\n            </div>\r\n          </md-card-content>\r\n\r\n          <md-card-actions md-alignment=\"right\">\r\n            <md-button type=\"submit\" class=\"md-success\">Add Tag</md-button>\r\n          </md-card-actions>\r\n        </form>\r\n      </md-card>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { Slider } from \"vue-color\";\r\nimport { ValidationError } from \"@/components\";\r\nimport formMixin from \"@/mixins/form-mixin\";\r\n\r\nexport default {\r\n  components: {\r\n    \"color-picker\": Slider,\r\n    \"validation-error\": ValidationError,\r\n  },\r\n\r\n  mixins: [formMixin],\r\n\r\n  data: () => ({\r\n    tag: {\r\n      type: \"tags\",\r\n      name: null,\r\n      color: null,\r\n    },\r\n    color: {\r\n      hex: \"#A1FF00\",\r\n    },\r\n  }),\r\n\r\n  watch: {\r\n    color: {\r\n      handler: \"updateTagColor\",\r\n      immediate: true,\r\n      deep: true,\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    async add() {\r\n      try {\r\n        if (!this.tag.name) {\r\n          await this.$store.dispatch(\r\n            \"alerts/error\",\r\n            \"Tag name cannot be empty!\"\r\n          );\r\n          return;\r\n        }\r\n\r\n        await this.$store.dispatch(\"tags/add\", this.tag);\r\n        await this.$store.dispatch(\"alerts/success\", \"Tag added successfully.\");\r\n        this.tag = await this.$store.getters[\"tags/tag\"];\r\n        this.goBack();\r\n      } catch (e) {\r\n        await this.$store.dispatch(\r\n          \"alerts/error\",\r\n          \"Oops, something went wrong!\"\r\n        );\r\n        this.setApiValidation(e.response.data.errors);\r\n      }\r\n    },\r\n\r\n    updateTagColor() {\r\n      this.tag.color = this.color.hex;\r\n    },\r\n\r\n    goBack() {\r\n      this.$router.push({ name: \"List Tags\" });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.spacing {\r\n  padding-bottom: 1rem;\r\n}\r\n</style>\r\n"]}]}