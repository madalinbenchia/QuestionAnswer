{"remainingRequest":"D:\\laragon\\www\\vue-argon-dashboard-pro-json-api\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\laragon\\www\\vue-argon-dashboard-pro-json-api\\src\\views\\Examples\\CategoryManagement\\AddCategoryPage.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"D:\\laragon\\www\\vue-argon-dashboard-pro-json-api\\src\\views\\Examples\\CategoryManagement\\AddCategoryPage.vue","mtime":1599825455131},{"path":"D:\\laragon\\www\\vue-argon-dashboard-pro-json-api\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\laragon\\www\\vue-argon-dashboard-pro-json-api\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\laragon\\www\\vue-argon-dashboard-pro-json-api\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\laragon\\www\\vue-argon-dashboard-pro-json-api\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\laragon\\www\\vue-argon-dashboard-pro-json-api\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\laragon\\www\\vue-argon-dashboard-pro-json-api\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLnNwYWNpbmcgew0KICBwYWRkaW5nLWJvdHRvbTogMXJlbTsNCn0NCg=="},{"version":3,"sources":["AddCategoryPage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwGA;AACA;AACA","file":"AddCategoryPage.vue","sourceRoot":"src/views/Examples/CategoryManagement","sourcesContent":["<template>\r\n  <div class=\"md-layout\">\r\n    <div class=\"md-layout-item md-small-size-100\">\r\n      <md-card>\r\n        <md-card-header class=\"md-card-header-icon md-card-header-green\">\r\n          <div class=\"card-icon\">\r\n            <md-icon>category</md-icon>\r\n          </div>\r\n          <h4 class=\"title\">Add Category</h4>\r\n        </md-card-header>\r\n\r\n        <form @submit.prevent=\"add\">\r\n          <md-card-content>\r\n            <div class=\"text-right\">\r\n              <md-button @click=\"goBack\" class=\"md-primary md-dense\">\r\n                Back to List\r\n              </md-button>\r\n            </div>\r\n\r\n            <div class=\"md-layout spacing\">\r\n              <label class=\"md-layout-item md-size-25 md-form-label\">\r\n                Name\r\n              </label>\r\n              <div class=\"md-layout-item\">\r\n                <md-field class=\"md-invalid\">\r\n                  <md-input v-model=\"category.name\" />\r\n                  <validation-error :errors=\"apiValidationErrors.name\" />\r\n                </md-field>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"md-layout\">\r\n              <label class=\"md-layout-item md-size-25 md-form-label\">\r\n                Description\r\n              </label>\r\n              <div class=\"md-layout-item\">\r\n                <md-field class=\"md-invalid\">\r\n                  <md-input v-model=\"category.description\" />\r\n                  <validation-error :errors=\"apiValidationErrors.description\" />\r\n                </md-field>\r\n              </div>\r\n            </div>\r\n          </md-card-content>\r\n\r\n          <md-card-actions md-alignment=\"right\">\r\n            <md-button type=\"submit\" class=\"md-success\">Add Category</md-button>\r\n          </md-card-actions>\r\n        </form>\r\n      </md-card>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ValidationError } from \"@/components\";\r\nimport formMixin from \"@/mixins/form-mixin\";\r\n\r\nexport default {\r\n  components: { ValidationError },\r\n\r\n  mixins: [formMixin],\r\n\r\n  data: () => ({\r\n    category: {\r\n      type: \"categories\",\r\n      name: null,\r\n      description: null,\r\n    },\r\n  }),\r\n\r\n  methods: {\r\n    async add() {\r\n      if (!this.category.name) {\r\n        await this.$store.dispatch(\r\n          \"alerts/error\",\r\n          \"Category name cannot be empty!\"\r\n        );\r\n        return;\r\n      }\r\n      try {\r\n        await this.$store.dispatch(\"categories/add\", this.category);\r\n        await this.$store.dispatch(\r\n          \"alerts/success\",\r\n          \"Category added successfully.\"\r\n        );\r\n        this.category = await this.$store.getters[\"categories/category\"];\r\n        this.goBack();\r\n      } catch (e) {\r\n        await this.$store.dispatch(\r\n          \"alerts/error\",\r\n          \"Oops, something went wrong.\"\r\n        );\r\n        this.setApiValidation(e.response.data.errors);\r\n      }\r\n    },\r\n\r\n    goBack() {\r\n      this.$router.push({ name: \"List Categories\" });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.spacing {\r\n  padding-bottom: 1rem;\r\n}\r\n</style>\r\n"]}]}